#!/usr/bin/python

import runners.multi as testrunner
import tools.z3seq
import tools.z3str3
import tools.cvc4
import storage
import tools.woorpje_heuristics
import models.kaluza.kaluzaWoorpje as kaluzaWoorpje 
import models.woorpje.track01 as track01
import models.woorpje.track02 as track02
import models.woorpje.track03 as track03
import models.woorpje.track04 as track04
import models.woorpje.track05 as track05

#import sloth
import summarygenerators
from datetime import datetime

tracks = [track01.trackdata,track02.trackdata,track03.trackdata,track04.trackdata,track05.trackdata,kaluzaWoorpje.trackdata]
timeout = 30

solvers = {
    'z3str3' : tools.z3str3.run,
    'z3seq' : tools.z3seq.run,
    'cvc4' : tools.cvc4.run,
}

smtsolvers = ["z3seq","cvc4","z3str3"]

tools.woorpje_heuristics.addRunners ("variableTermRatio",smtsolvers,3.14,solvers)
tools.woorpje_heuristics.addRunners ("variableTermRatio",smtsolvers,0.15,solvers)
tools.woorpje_heuristics.addRunners ("variableTermRatio",smtsolvers,1.12358,solvers)

tools.woorpje_heuristics.addRunners ("waitingListLimit",smtsolvers,314,solvers)
tools.woorpje_heuristics.addRunners ("waitingListLimit",smtsolvers,15,solvers)
tools.woorpje_heuristics.addRunners ("waitingListLimit",smtsolvers,1123,solvers)

tools.woorpje_heuristics.addRunners ("equationGrowth",smtsolvers,0.15,solvers)
tools.woorpje_heuristics.addRunners ("equationGrowth",smtsolvers,1.075,solvers)
tools.woorpje_heuristics.addRunners ("equationGrowth",smtsolvers,2.0,solvers)

tools.woorpje_heuristics.addRunners ("equationLength",smtsolvers,2,solvers)
tools.woorpje_heuristics.addRunners ("equationLength",smtsolvers,20,solvers)
tools.woorpje_heuristics.addRunners ("equationLength",smtsolvers,400,solvers)

tools.woorpje_heuristics.addRunners ("none",smtsolvers,5,solvers)



summaries = [summarygenerators.terminalResult,
             #summarygenerators.cactusPlot
]


output = storage.FileWriter ("icst")
testrunner.runTestSetup (tracks,solvers,summaries,output,timeout)
