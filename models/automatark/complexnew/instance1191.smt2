(declare-const X String)
; ^((ucs2|utf8)\_(bin|(general|unicode|roman|slovak|czech|icelandic|(latv|pers)ian|(dan|pol|span|swed|turk)ish|spanish2|(esto|lithua|roma|slove)nian\_ci)))|((mac(ce|roman)|cp(8(5(0|2)|66)|1256)|armscii8|geostd8|ascii|keybcs2|greek|hebrew|koi8(r|u))\_(bin|general\_ci))|((dec8|swe7)\_(bin|swedish\_ci))|((hp8|latin5)\_(bin|english\_ci))|((big5|gb(2312|k))\_(bin|chinese\_ci))|((cp932|eucjpms|(s|u)jis)\_(bin|japanese\_ci))|(euckr\_(bin|korean\_ci))|(tis620\_(bin|thai\_ci))|(latin1\_(bin|(((dan|span|swed)ish|german(1|2))\_ci)|general\_(ci|cs)))|(cp1250\_(bin|czech\_cs|general\_ci))|(latin2\_(bin|czech\_cs|(general|hungarian|croatian)\_ci))|(cp1257\_(bin|(general|lithuanian)\_ci))|(latin7\_(bin|general\_(c(i|s))|estonian\_cs))|(cp1251\_(bin|(general|bulgarian|ukrainian)\_ci|general\_cs))$
(assert (str.in.re X (re.union (re.++ (str.to.re "_") (re.union (str.to.re "bin") (str.to.re "general") (str.to.re "unicode") (str.to.re "roman") (str.to.re "slovak") (str.to.re "czech") (str.to.re "icelandic") (re.++ (re.union (str.to.re "latv") (str.to.re "pers")) (str.to.re "ian")) (re.++ (re.union (str.to.re "dan") (str.to.re "pol") (str.to.re "span") (str.to.re "swed") (str.to.re "turk")) (str.to.re "ish")) (str.to.re "spanish2") (re.++ (re.union (str.to.re "esto") (str.to.re "lithua") (str.to.re "roma") (str.to.re "slove")) (str.to.re "nian_ci"))) (str.to.re "u") (re.union (str.to.re "cs2") (str.to.re "tf8"))) (re.++ (re.union (re.++ (str.to.re "mac") (re.union (str.to.re "ce") (str.to.re "roman"))) (re.++ (str.to.re "cp") (re.union (re.++ (str.to.re "8") (re.union (re.++ (str.to.re "5") (re.union (str.to.re "0") (str.to.re "2"))) (str.to.re "66"))) (str.to.re "1256"))) (str.to.re "armscii8") (str.to.re "geostd8") (str.to.re "ascii") (str.to.re "keybcs2") (str.to.re "greek") (str.to.re "hebrew") (re.++ (str.to.re "koi8") (re.union (str.to.re "r") (str.to.re "u")))) (str.to.re "_") (re.union (str.to.re "bin") (str.to.re "general_ci"))) (re.++ (re.union (str.to.re "dec8") (str.to.re "swe7")) (str.to.re "_") (re.union (str.to.re "bin") (str.to.re "swedish_ci"))) (re.++ (re.union (str.to.re "hp8") (str.to.re "latin5")) (str.to.re "_") (re.union (str.to.re "bin") (str.to.re "english_ci"))) (re.++ (re.union (str.to.re "big5") (re.++ (str.to.re "gb") (re.union (str.to.re "2312") (str.to.re "k")))) (str.to.re "_") (re.union (str.to.re "bin") (str.to.re "chinese_ci"))) (re.++ (re.union (str.to.re "cp932") (str.to.re "eucjpms") (re.++ (re.union (str.to.re "s") (str.to.re "u")) (str.to.re "jis"))) (str.to.re "_") (re.union (str.to.re "bin") (str.to.re "japanese_ci"))) (re.++ (str.to.re "euckr_") (re.union (str.to.re "bin") (str.to.re "korean_ci"))) (re.++ (str.to.re "tis620_") (re.union (str.to.re "bin") (str.to.re "thai_ci"))) (re.++ (str.to.re "latin1_") (re.union (str.to.re "bin") (re.++ (re.union (re.++ (re.union (str.to.re "dan") (str.to.re "span") (str.to.re "swed")) (str.to.re "ish")) (re.++ (str.to.re "german") (re.union (str.to.re "1") (str.to.re "2")))) (str.to.re "_ci")) (re.++ (str.to.re "general_c") (re.union (str.to.re "i") (str.to.re "s"))))) (re.++ (str.to.re "cp1250_") (re.union (str.to.re "bin") (str.to.re "czech_cs") (str.to.re "general_ci"))) (re.++ (str.to.re "latin2_") (re.union (str.to.re "bin") (str.to.re "czech_cs") (re.++ (re.union (str.to.re "general") (str.to.re "hungarian") (str.to.re "croatian")) (str.to.re "_ci")))) (re.++ (str.to.re "cp1257_") (re.union (str.to.re "bin") (re.++ (re.union (str.to.re "general") (str.to.re "lithuanian")) (str.to.re "_ci")))) (re.++ (str.to.re "latin7_") (re.union (str.to.re "bin") (re.++ (str.to.re "general_c") (re.union (str.to.re "i") (str.to.re "s"))) (str.to.re "estonian_cs"))) (re.++ (str.to.re "\x0acp1251_") (re.union (str.to.re "bin") (re.++ (re.union (str.to.re "general") (str.to.re "bulgarian") (str.to.re "ukrainian")) (str.to.re "_ci")) (str.to.re "general_cs"))))))
; ((EE|EL|DE|PT)-?)?[0-9]{9}
(assert (not (str.in.re X (re.++ (re.opt (re.++ (re.union (str.to.re "EE") (str.to.re "EL") (str.to.re "DE") (str.to.re "PT")) (re.opt (str.to.re "-")))) ((_ re.loop 9 9) (re.range "0" "9")) (str.to.re "\x0a")))))
; search2\.ad\.shopnav\.com\x2F9899\x2Fsearch\x2Fresults\.php.*Logger.*Subject\x3a\s+Host\x3AHost\x3A
(assert (str.in.re X (re.++ (str.to.re "search2.ad.shopnav.com/9899/search/results.php") (re.* re.allchar) (str.to.re "Logger") (re.* re.allchar) (str.to.re "Subject:") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "Host:Host:\x0a"))))
; <\*?font              # Match start of Font Tag
(assert (not (str.in.re X (re.++ (str.to.re "<") (re.opt (str.to.re "*")) (str.to.re "font              # Match start of Font Tag\x0a")))))
(check-sat)
