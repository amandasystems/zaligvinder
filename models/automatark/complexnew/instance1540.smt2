(declare-const X String)
; toolbarplace\x2Ecom.*Host\x3A\dgpstool\x2eglobaladserver\x2ecom
(assert (str.in.re X (re.++ (str.to.re "toolbarplace.com") (re.* re.allchar) (str.to.re "Host:") (re.range "0" "9") (str.to.re "gpstool.globaladserver.com\x0a"))))
; too[^\n\r]*User-Agent\x3A\sHost\x3A.*IP-WindowsAttachedPalas\x2Estarware\x2Ecom\x2Fdp\x2Fsearch\?x=
(assert (str.in.re X (re.++ (str.to.re "too") (re.* (re.union (str.to.re "\x0a") (str.to.re "\x0d"))) (str.to.re "User-Agent:") (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (str.to.re "Host:") (re.* re.allchar) (str.to.re "IP-WindowsAttachedPalas.starware.com/dp/search?x=\x0a"))))
; [du]{2}|[gu]{2}|[tu]{2}|[ds]{2}|[gs]{2}|[da]{2}|[ga]{2}|[ta]{2}|[dq]{2}|[gq]{2}|[tq]{2}|[DU]{2}|[GU]{2}|[TU]{2}|[DS]{2}|[GS]{2}|[DA]{2}|[GA]{2}|[TA]{2}|[DQ]{2}|[GQ]{2}|[TQ]{2}
(assert (not (str.in.re X (re.union ((_ re.loop 2 2) (re.union (str.to.re "d") (str.to.re "u"))) ((_ re.loop 2 2) (re.union (str.to.re "g") (str.to.re "u"))) ((_ re.loop 2 2) (re.union (str.to.re "t") (str.to.re "u"))) ((_ re.loop 2 2) (re.union (str.to.re "d") (str.to.re "s"))) ((_ re.loop 2 2) (re.union (str.to.re "g") (str.to.re "s"))) ((_ re.loop 2 2) (re.union (str.to.re "d") (str.to.re "a"))) ((_ re.loop 2 2) (re.union (str.to.re "g") (str.to.re "a"))) ((_ re.loop 2 2) (re.union (str.to.re "t") (str.to.re "a"))) ((_ re.loop 2 2) (re.union (str.to.re "d") (str.to.re "q"))) ((_ re.loop 2 2) (re.union (str.to.re "g") (str.to.re "q"))) ((_ re.loop 2 2) (re.union (str.to.re "t") (str.to.re "q"))) ((_ re.loop 2 2) (re.union (str.to.re "D") (str.to.re "U"))) ((_ re.loop 2 2) (re.union (str.to.re "G") (str.to.re "U"))) ((_ re.loop 2 2) (re.union (str.to.re "T") (str.to.re "U"))) ((_ re.loop 2 2) (re.union (str.to.re "D") (str.to.re "S"))) ((_ re.loop 2 2) (re.union (str.to.re "G") (str.to.re "S"))) ((_ re.loop 2 2) (re.union (str.to.re "D") (str.to.re "A"))) ((_ re.loop 2 2) (re.union (str.to.re "G") (str.to.re "A"))) ((_ re.loop 2 2) (re.union (str.to.re "T") (str.to.re "A"))) ((_ re.loop 2 2) (re.union (str.to.re "D") (str.to.re "Q"))) ((_ re.loop 2 2) (re.union (str.to.re "G") (str.to.re "Q"))) (re.++ ((_ re.loop 2 2) (re.union (str.to.re "T") (str.to.re "Q"))) (str.to.re "\x0a"))))))
; securityOmFkbWluADROARad\x2Emokead\x2Ecom\x3C\x2Fchat\x3E
(assert (str.in.re X (str.to.re "securityOmFkbWluADROARad.mokead.com</chat>\x0a")))
(check-sat)
