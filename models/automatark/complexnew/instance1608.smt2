(declare-const X String)
; ^([^\s]){5,12}$
(assert (not (str.in.re X (re.++ ((_ re.loop 5 12) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "\x0a")))))
; ^[2-5](2|4|6|8|0)(A(A)?|B|C|D(D(D)?)?|E|F|G|H)$
(assert (str.in.re X (re.++ (re.range "2" "5") (re.union (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8") (str.to.re "0")) (re.union (re.++ (str.to.re "A") (re.opt (str.to.re "A"))) (str.to.re "B") (str.to.re "C") (re.++ (str.to.re "D") (re.opt (re.++ (str.to.re "D") (re.opt (str.to.re "D"))))) (str.to.re "E") (str.to.re "F") (str.to.re "G") (str.to.re "H")) (str.to.re "\x0a"))))
; DmInf\x5E\x0D\x0A\x0D\x0AAttached\x2Fbar_pl\x2Fchk\.fcgi
(assert (not (str.in.re X (str.to.re "DmInf^\x0d\x0a\x0d\x0aAttached/bar_pl/chk.fcgi\x0a"))))
; (^|\s|\()((([1-9]){1}|([0][1-9]){1}|([1][012]){1}){1}[\/-]((2[0-9]){1}|(3[01]){1}|([01][1-9]){1}|([1-9]){1}){1}[\/-](((19|20)([0-9][0-9]){1}|([0-9][0-9]){1})){1}(([\s|\)|:])|(^|\s|\()((([0-9]){1}|([0][1-9]){1}|([1][012]){1}){1}[\/-](([11-31]){1}|([01][1-9]){1}|([1-9]){1}){1}[\/-](((19|20)([0-9][0-9]){1}|([0-9][0-9]){1})){1}(([\s|\)|:|$|\>])){1}){1}){1}){1}
(assert (str.in.re X (re.++ (re.union (str.to.re "(") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 1) (re.++ ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.range "1" "9")) ((_ re.loop 1 1) (re.++ (str.to.re "0") (re.range "1" "9"))) ((_ re.loop 1 1) (re.++ (str.to.re "1") (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2")))))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.++ (str.to.re "2") (re.range "0" "9"))) ((_ re.loop 1 1) (re.++ (str.to.re "3") (re.union (str.to.re "0") (str.to.re "1")))) ((_ re.loop 1 1) (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.range "1" "9"))) ((_ re.loop 1 1) (re.range "1" "9")))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union (re.++ (re.union (str.to.re "19") (str.to.re "20")) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9")))) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9"))))) ((_ re.loop 1 1) (re.union (re.++ (re.union (str.to.re "(") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 1) (re.++ ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.range "0" "9")) ((_ re.loop 1 1) (re.++ (str.to.re "0") (re.range "1" "9"))) ((_ re.loop 1 1) (re.++ (str.to.re "1") (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2")))))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.union (str.to.re "1") (re.range "1" "3"))) ((_ re.loop 1 1) (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.range "1" "9"))) ((_ re.loop 1 1) (re.range "1" "9")))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union (re.++ (re.union (str.to.re "19") (str.to.re "20")) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9")))) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9"))))) ((_ re.loop 1 1) (re.union (str.to.re "|") (str.to.re ")") (str.to.re ":") (str.to.re "$") (str.to.re ">") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")))))) (str.to.re "|") (str.to.re ")") (str.to.re ":") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))))) (str.to.re "\x0a"))))
; ^(V-|I-)?[0-9]{4}$
(assert (not (str.in.re X (re.++ (re.opt (re.union (str.to.re "V-") (str.to.re "I-"))) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a")))))
(check-sat)
