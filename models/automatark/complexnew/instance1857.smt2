(declare-const X String)
; (\\d{1}-\\d{2}\\s*)(of +)(\\s?\\d{5})|(\\d{1}-\\d{2}\\s*)(of +)(\\s?\\d{4})|(\\d{1}-\\d{2}\\s*)(of +)(\\s?\\d{3})|(\\d{1}-\\d{2}\\s*)(of +)(\\s?\\d{2})|(\\d{1}-\\d{2}\\s*)(of +)(\\s?\\d{1})
(assert (not (str.in.re X (re.union (re.++ (str.to.re "\x5c") ((_ re.loop 1 1) (str.to.re "d")) (str.to.re "-\x5c") ((_ re.loop 2 2) (str.to.re "d")) (str.to.re "\x5c") (re.* (str.to.re "s")) (str.to.re "of") (re.+ (str.to.re " ")) (str.to.re "\x5c") (re.opt (str.to.re "s")) (str.to.re "\x5c") ((_ re.loop 5 5) (str.to.re "d"))) (re.++ (str.to.re "\x5c") ((_ re.loop 1 1) (str.to.re "d")) (str.to.re "-\x5c") ((_ re.loop 2 2) (str.to.re "d")) (str.to.re "\x5c") (re.* (str.to.re "s")) (str.to.re "of") (re.+ (str.to.re " ")) (str.to.re "\x5c") (re.opt (str.to.re "s")) (str.to.re "\x5c") ((_ re.loop 4 4) (str.to.re "d"))) (re.++ (str.to.re "\x5c") ((_ re.loop 1 1) (str.to.re "d")) (str.to.re "-\x5c") ((_ re.loop 2 2) (str.to.re "d")) (str.to.re "\x5c") (re.* (str.to.re "s")) (str.to.re "of") (re.+ (str.to.re " ")) (str.to.re "\x5c") (re.opt (str.to.re "s")) (str.to.re "\x5c") ((_ re.loop 3 3) (str.to.re "d"))) (re.++ (str.to.re "\x5c") ((_ re.loop 1 1) (str.to.re "d")) (str.to.re "-\x5c") ((_ re.loop 2 2) (str.to.re "d")) (str.to.re "\x5c") (re.* (str.to.re "s")) (str.to.re "of") (re.+ (str.to.re " ")) (str.to.re "\x5c") (re.opt (str.to.re "s")) (str.to.re "\x5c") ((_ re.loop 2 2) (str.to.re "d"))) (re.++ (str.to.re "\x0a\x5c") ((_ re.loop 1 1) (str.to.re "d")) (str.to.re "-\x5c") ((_ re.loop 2 2) (str.to.re "d")) (str.to.re "\x5c") (re.* (str.to.re "s")) (str.to.re "of") (re.+ (str.to.re " ")) (str.to.re "\x5c") (re.opt (str.to.re "s")) (str.to.re "\x5c") ((_ re.loop 1 1) (str.to.re "d")))))))
; ^\d(\.\d{1,2})?$
(assert (not (str.in.re X (re.++ (re.range "0" "9") (re.opt (re.++ (str.to.re ".") ((_ re.loop 1 2) (re.range "0" "9")))) (str.to.re "\x0a")))))
; ^([0-7])*$
(assert (not (str.in.re X (re.++ (re.* (re.range "0" "7")) (str.to.re "\x0a")))))
; /filename\s*=\s*[^\r\n]*?\x2eswf[\x22\x27\x3b\s\r\n]/i
(assert (str.in.re X (re.++ (str.to.re "/filename") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "=") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.* (re.union (str.to.re "\x0d") (str.to.re "\x0a"))) (str.to.re ".swf") (re.union (str.to.re "\x22") (str.to.re "'") (str.to.re ";") (str.to.re "\x0d") (str.to.re "\x0a") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (str.to.re "/i\x0a"))))
(check-sat)
