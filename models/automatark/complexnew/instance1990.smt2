(declare-const X String)
; ^-?\d*(\.\d+)?$
(assert (str.in.re X (re.++ (re.opt (str.to.re "-")) (re.* (re.range "0" "9")) (re.opt (re.++ (str.to.re ".") (re.+ (re.range "0" "9")))) (str.to.re "\x0a"))))
; kl\x2Esearch\x2Eneed2find\x2Ecom\ssource%3Dultrasearch136%26campaign%3Dsnap
(assert (not (str.in.re X (re.++ (str.to.re "kl.search.need2find.com") (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (str.to.re "source%3Dultrasearch136%26campaign%3Dsnap\x0a")))))
; ^([a-zA-Z,#/ \.\(\)\-\+\*]*[2-9])([a-zA-Z,#/ \.\(\)\-\+\*]*[0-9]){2}([a-zA-Z,#/ \.\(\)\-\+\*]*[2-9])([a-zA-Z,#/ \.\(\)\-\+\*]*[0-9]){6}[0-9a-zA-Z,#/ \.\(\)\-\+\*]*$
(assert (str.in.re X (re.++ ((_ re.loop 2 2) (re.++ (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "0" "9"))) ((_ re.loop 6 6) (re.++ (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "0" "9"))) (re.* (re.union (re.range "0" "9") (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (str.to.re "\x0a") (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "2" "9") (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "2" "9"))))
(check-sat)
