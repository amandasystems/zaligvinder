(declare-const X String)
; (\d{3}\-\d{2}\-\d{4})
(assert (not (str.in.re X (re.++ (str.to.re "\x0a") ((_ re.loop 3 3) (re.range "0" "9")) (str.to.re "-") ((_ re.loop 2 2) (re.range "0" "9")) (str.to.re "-") ((_ re.loop 4 4) (re.range "0" "9"))))))
; ^0?[0-9]?[0-9]$|^(100)$
(assert (not (str.in.re X (re.union (re.++ (re.opt (str.to.re "0")) (re.opt (re.range "0" "9")) (re.range "0" "9")) (str.to.re "100\x0a")))))
; (\A|\s)((\)+|\(+|\}+|\{+|\]+|\[+|\|+|\\+|/+|>+|<+|D+|[@#!OoXxZS$0])[-~+o]?[,*]?((<[:;=+])|[<:;=+])|(\)+|\(+|\}+|\{+|\]+|\[+|\|+|\\+|/+|>+|<+|D+)[-~+o]?[xX8]<?)(\Z|\s)
(assert (str.in.re X (re.++ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (re.union (re.++ (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "(")) (re.+ (str.to.re "}")) (re.+ (str.to.re "{")) (re.+ (str.to.re "]")) (re.+ (str.to.re "[")) (re.+ (str.to.re "|")) (re.+ (str.to.re "\x5c")) (re.+ (str.to.re "/")) (re.+ (str.to.re ">")) (re.+ (str.to.re "<")) (re.+ (str.to.re "D")) (str.to.re "@") (str.to.re "#") (str.to.re "!") (str.to.re "O") (str.to.re "o") (str.to.re "X") (str.to.re "x") (str.to.re "Z") (str.to.re "S") (str.to.re "$") (str.to.re "0")) (re.opt (re.union (str.to.re "-") (str.to.re "~") (str.to.re "+") (str.to.re "o"))) (re.opt (re.union (str.to.re ",") (str.to.re "*"))) (re.union (re.++ (str.to.re "<") (re.union (str.to.re ":") (str.to.re ";") (str.to.re "=") (str.to.re "+"))) (str.to.re "<") (str.to.re ":") (str.to.re ";") (str.to.re "=") (str.to.re "+"))) (re.++ (re.union (re.+ (str.to.re ")")) (re.+ (str.to.re "(")) (re.+ (str.to.re "}")) (re.+ (str.to.re "{")) (re.+ (str.to.re "]")) (re.+ (str.to.re "[")) (re.+ (str.to.re "|")) (re.+ (str.to.re "\x5c")) (re.+ (str.to.re "/")) (re.+ (str.to.re ">")) (re.+ (str.to.re "<")) (re.+ (str.to.re "D"))) (re.opt (re.union (str.to.re "-") (str.to.re "~") (str.to.re "+") (str.to.re "o"))) (re.union (str.to.re "x") (str.to.re "X") (str.to.re "8")) (re.opt (str.to.re "<")))) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (str.to.re "\x0a"))))
; Ts2\x2F\s+insertinfoSnakeUser-Agent\x3A
(assert (not (str.in.re X (re.++ (str.to.re "Ts2/") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "insertinfoSnakeUser-Agent:\x0a")))))
; (AUX|PRN|NUL|COM\d|LPT\d)+\s*$
(assert (str.in.re X (re.++ (re.+ (re.union (str.to.re "AUX") (str.to.re "PRN") (str.to.re "NUL") (re.++ (str.to.re "COM") (re.range "0" "9")) (re.++ (str.to.re "LPT") (re.range "0" "9")))) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "\x0a"))))
(check-sat)
