(declare-const X String)
; ^[0][5][0]-\d{7}|[0][5][2]-\d{7}|[0][5][4]-\d{7}|[0][5][7]-\d{7}|[0][7][7]-\d{7}|[0][2]-\d{7}|[0][3]-\d{7}|[0][4]-\d{7}|[0][8]-\d{7}|[0][9]-\d{7}|[0][5][0]\d{7}|[0][5][2]\d{7}|[0][5][4]\d{7}|[0][5][7]\d{7}|[0][7][7]\d{7}|[0][2]\d{7}|[0][3]\d{7}|[0][4]\d{7}|[0][8]\d{7}|[0][9]\d{7}$
(assert (str.in.re X (re.union (re.++ (str.to.re "050-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "052-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "054-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "057-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "077-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "02-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "03-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "04-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "08-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "09-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "050") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "052") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "054") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "057") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "077") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "02") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "03") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "04") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "08") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "09") ((_ re.loop 7 7) (re.range "0" "9")) (str.to.re "\x0a")))))
; wowokay\d+FTP\s+Host\x3AFiltered\x22reaction\x2Etxt\x22
(assert (not (str.in.re X (re.++ (str.to.re "wowokay") (re.+ (re.range "0" "9")) (str.to.re "FTP") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "Host:Filtered\x22reaction.txt\x22\x0a")))))
; ([0-1][0-9]|2[0-4]):(0[0-9]|[1-5][0-9]):(0[0-9]|[1-5][0-9])(\.[0-999])?((\+|-)([0-1][0-9]|2[0-4]):(0[0-9]|[1-5][0-9])|Z)?
(assert (not (str.in.re X (re.++ (re.union (re.++ (re.range "0" "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "4"))) (str.to.re ":") (re.union (re.++ (str.to.re "0") (re.range "0" "9")) (re.++ (re.range "1" "5") (re.range "0" "9"))) (str.to.re ":") (re.union (re.++ (str.to.re "0") (re.range "0" "9")) (re.++ (re.range "1" "5") (re.range "0" "9"))) (re.opt (re.++ (str.to.re ".") (re.union (re.range "0" "9") (str.to.re "9")))) (re.opt (re.union (re.++ (re.union (str.to.re "+") (str.to.re "-")) (re.union (re.++ (re.range "0" "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "4"))) (str.to.re ":") (re.union (re.++ (str.to.re "0") (re.range "0" "9")) (re.++ (re.range "1" "5") (re.range "0" "9")))) (str.to.re "Z"))) (str.to.re "\x0a")))))
; \.exe\s+v2\x2E0\s+smrtshpr-cs-
(assert (str.in.re X (re.++ (str.to.re ".exe") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "v2.0") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "smrtshpr-cs-\x13\x0a"))))
(check-sat)
