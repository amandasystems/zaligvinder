(declare-const X String)
; ^[^\\\/\?\*\"\'\>\<\:\|]*$
(assert (str.in.re X (re.++ (re.* (re.union (str.to.re "\x5c") (str.to.re "/") (str.to.re "?") (str.to.re "*") (str.to.re "\x22") (str.to.re "'") (str.to.re ">") (str.to.re "<") (str.to.re ":") (str.to.re "|"))) (str.to.re "\x0a"))))
; BasicYWRtaW46cGFzc3dvcmQeAnthMngrLOGsearches\x2Eworldtostart\x2Ecom
(assert (str.in.re X (str.to.re "BasicYWRtaW46cGFzc3dvcmQeAnthMngrLOGsearches.worldtostart.com\x0a")))
; \+353\(0\)\s\d\s\d{3}\s\d{4}
(assert (not (str.in.re X (re.++ (str.to.re "+353(0)") (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (re.range "0" "9") (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a")))))
; ^((A[ABEHKLMPRSTWXYZ])|(B[ABEHKLMT])|(C[ABEHKLR])|(E[ABEHKLMPRSTWXYZ])|(GY)|(H[ABEHKLMPRSTWXYZ])|(J[ABCEGHJKLMNPRSTWXYZ])|(K[ABEHKLMPRSTWXYZ])|(L[ABEHKLMPRSTWXYZ])|(M[AWX])|(N[ABEHLMPRSWXYZ])|(O[ABEHKLMPRSX])|(P[ABCEGHJLMNPRSTWXY])|(R[ABEHKMPRSTWXYZ])|(S[ABCGHJKLMNPRSTWXYZ])|(T[ABEHKLMPRSTWXYZ])|(W[ABEKLMP])|(Y[ABEHKLMPRSTWXYZ])|(Z[ABEHKLMPRSTWXY]))\d{6}([A-D]|\s)$
(assert (str.in.re X (re.++ (re.union (re.++ (str.to.re "A") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "B") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "T"))) (re.++ (str.to.re "C") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "R"))) (re.++ (str.to.re "E") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (str.to.re "GY") (re.++ (str.to.re "H") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "J") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "C") (str.to.re "E") (str.to.re "G") (str.to.re "H") (str.to.re "J") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "N") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "K") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "L") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "M") (re.union (str.to.re "A") (str.to.re "W") (str.to.re "X"))) (re.++ (str.to.re "N") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "O") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "X"))) (re.++ (str.to.re "P") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "C") (str.to.re "E") (str.to.re "G") (str.to.re "H") (str.to.re "J") (str.to.re "L") (str.to.re "M") (str.to.re "N") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y"))) (re.++ (str.to.re "R") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "S") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "C") (str.to.re "G") (str.to.re "H") (str.to.re "J") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "N") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "T") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "W") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P"))) (re.++ (str.to.re "Y") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y") (str.to.re "Z"))) (re.++ (str.to.re "Z") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "K") (str.to.re "L") (str.to.re "M") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "X") (str.to.re "Y")))) ((_ re.loop 6 6) (re.range "0" "9")) (re.union (re.range "A" "D") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (str.to.re "\x0a"))))
; Keystrokes.*LOG.*Host\x3Awww\x2Eserverlogic3\x2Ecom
(assert (str.in.re X (re.++ (str.to.re "Keystrokes") (re.* re.allchar) (str.to.re "LOG") (re.* re.allchar) (str.to.re "Host:www.serverlogic3.com\x0a"))))
(check-sat)
