(declare-const X String)
; /^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i
(assert (not (str.in.re X (re.++ (str.to.re "/") (re.+ (re.union (str.to.re "-") (re.range "a" "z") (re.range "0" "9") (str.to.re "~") (str.to.re "!") (str.to.re "$") (str.to.re "%") (str.to.re "^") (str.to.re "&") (str.to.re "*") (str.to.re "_") (str.to.re "=") (str.to.re "+") (str.to.re "}") (str.to.re "{") (str.to.re "'") (str.to.re "?"))) (re.* (re.++ (str.to.re ".") (re.+ (re.union (str.to.re "-") (re.range "a" "z") (re.range "0" "9") (str.to.re "~") (str.to.re "!") (str.to.re "$") (str.to.re "%") (str.to.re "^") (str.to.re "&") (str.to.re "*") (str.to.re "_") (str.to.re "=") (str.to.re "+") (str.to.re "}") (str.to.re "{") (str.to.re "'") (str.to.re "?"))))) (str.to.re "@") (re.union (re.++ (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "_")) (re.* (re.union (str.to.re "-") (re.range "a" "z") (re.range "0" "9") (str.to.re "_"))) (re.* (re.++ (str.to.re ".") (re.+ (re.union (str.to.re "-") (re.range "a" "z") (re.range "0" "9") (str.to.re "_"))))) (str.to.re ".") (re.union (str.to.re "aero") (str.to.re "arpa") (str.to.re "biz") (str.to.re "com") (str.to.re "coop") (str.to.re "edu") (str.to.re "gov") (str.to.re "info") (str.to.re "int") (str.to.re "mil") (str.to.re "museum") (str.to.re "name") (str.to.re "net") (str.to.re "org") (str.to.re "pro") (str.to.re "travel") (str.to.re "mobi") (re.++ (re.range "a" "z") (re.range "a" "z")))) (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (str.to.re ".") ((_ re.loop 1 3) (re.range "0" "9")) (str.to.re ".") ((_ re.loop 1 3) (re.range "0" "9")) (str.to.re ".") ((_ re.loop 1 3) (re.range "0" "9")))) (re.opt (re.++ (str.to.re ":") ((_ re.loop 1 5) (re.range "0" "9")))) (str.to.re "/i\x0a")))))
; /^User-Agent\x3a\x20[A-Z]{9}\x0d\x0a/Hm
(assert (not (str.in.re X (re.++ (str.to.re "/User-Agent: ") ((_ re.loop 9 9) (re.range "A" "Z")) (str.to.re "\x0d\x0a/Hm\x0a")))))
; ^(\([2-9]|[2-9])(\d{2}|\d{2}\))(-|.|\s)?\d{3}(-|.|\s)?\d{4}$
(assert (not (str.in.re X (re.++ (re.union (re.++ (str.to.re "(") (re.range "2" "9")) (re.range "2" "9")) (re.union ((_ re.loop 2 2) (re.range "0" "9")) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (str.to.re ")"))) (re.opt (re.union (str.to.re "-") re.allchar (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re "-") re.allchar (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a")))))
; ^([0-9]{5})([\-]{1}[0-9]{4})?$
(assert (str.in.re X (re.++ ((_ re.loop 5 5) (re.range "0" "9")) (re.opt (re.++ ((_ re.loop 1 1) (str.to.re "-")) ((_ re.loop 4 4) (re.range "0" "9")))) (str.to.re "\x0a"))))
; ^[0-9]{4}\s{0,2}[a-zA-z]{2}$
(assert (str.in.re X (re.++ ((_ re.loop 4 4) (re.range "0" "9")) ((_ re.loop 0 2) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) ((_ re.loop 2 2) (re.union (re.range "a" "z") (re.range "A" "z"))) (str.to.re "\x0a"))))
(check-sat)
