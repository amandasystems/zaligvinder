(declare-const X String)
; ((\d{1,6}\-\d{1,6})|(\d{1,6}\\\d{1,6})|(\d{1,6})(\/)(\d{1,6})|(\w{1}\-?\d{1,6})|(\w{1}\s\d{1,6})|((P\.?O\.?\s)((BOX)|(Box))(\s\d{1,6}))|((([R]{2})|([H][C]))(\s\d{1,6}\s)((BOX)|(Box))(\s\d{1,6}))?)$
(assert (str.in.re X (re.++ (re.union (re.++ ((_ re.loop 1 6) (re.range "0" "9")) (str.to.re "-") ((_ re.loop 1 6) (re.range "0" "9"))) (re.++ ((_ re.loop 1 6) (re.range "0" "9")) (str.to.re "\x5c") ((_ re.loop 1 6) (re.range "0" "9"))) (re.++ ((_ re.loop 1 6) (re.range "0" "9")) (str.to.re "/") ((_ re.loop 1 6) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.opt (str.to.re "-")) ((_ re.loop 1 6) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 6) (re.range "0" "9"))) (re.++ (re.union (str.to.re "BOX") (str.to.re "Box")) (str.to.re "P") (re.opt (str.to.re ".")) (str.to.re "O") (re.opt (str.to.re ".")) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 6) (re.range "0" "9"))) (re.opt (re.++ (re.union ((_ re.loop 2 2) (str.to.re "R")) (str.to.re "HC")) (re.union (str.to.re "BOX") (str.to.re "Box")) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 6) (re.range "0" "9")) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 6) (re.range "0" "9"))))) (str.to.re "\x0a"))))
; /^\/[a-z]{2,20}\.php\?[a-z]{2,10}\x3d[a-zA-Z0-9\x2f\x2b]+\x3d$/I
(assert (not (str.in.re X (re.++ (str.to.re "//") ((_ re.loop 2 20) (re.range "a" "z")) (str.to.re ".php?") ((_ re.loop 2 10) (re.range "a" "z")) (str.to.re "=") (re.+ (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "/") (str.to.re "+"))) (str.to.re "=/I\x0a")))))
; /^(Frame)?\.jsf/R
(assert (not (str.in.re X (re.++ (str.to.re "/") (re.opt (str.to.re "Frame")) (str.to.re ".jsf/R\x0a")))))
(check-sat)
