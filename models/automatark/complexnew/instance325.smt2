(declare-const X String)
; User-Agent\x3A.*User-Agent\x3A.*spyblini\x2Einidata\.warezclient\.com
(assert (not (str.in.re X (re.++ (str.to.re "User-Agent:") (re.* re.allchar) (str.to.re "User-Agent:") (re.* re.allchar) (str.to.re "spyblini.inidata.warezclient.com\x0a")))))
; /^range\x7c\d+\x7c\d+\x7C[a-z0-9]+\x2E[a-z]{2,3}\x7C[a-z0-9]+\x7C/
(assert (not (str.in.re X (re.++ (str.to.re "/range|") (re.+ (re.range "0" "9")) (str.to.re "|") (re.+ (re.range "0" "9")) (str.to.re "|") (re.+ (re.union (re.range "a" "z") (re.range "0" "9"))) (str.to.re ".") ((_ re.loop 2 3) (re.range "a" "z")) (str.to.re "|") (re.+ (re.union (re.range "a" "z") (re.range "0" "9"))) (str.to.re "|/\x0a")))))
; ^((A[LKZR])|(C[AOT])|(D[EC])|(FL)|(GA)|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EDAINSOT])|(N[EVHJMYCD])|(O[HKR])|(PA)|(RI)|(S[CD])|(T[NX])|(UT)|(V[TA])|(W[AVIY]))$
(assert (not (str.in.re X (re.++ (re.union (re.++ (str.to.re "A") (re.union (str.to.re "L") (str.to.re "K") (str.to.re "Z") (str.to.re "R"))) (re.++ (str.to.re "C") (re.union (str.to.re "A") (str.to.re "O") (str.to.re "T"))) (re.++ (str.to.re "D") (re.union (str.to.re "E") (str.to.re "C"))) (str.to.re "FL") (str.to.re "GA") (str.to.re "HI") (re.++ (str.to.re "I") (re.union (str.to.re "D") (str.to.re "L") (str.to.re "N") (str.to.re "A"))) (re.++ (str.to.re "K") (re.union (str.to.re "S") (str.to.re "Y"))) (str.to.re "LA") (re.++ (str.to.re "M") (re.union (str.to.re "E") (str.to.re "D") (str.to.re "A") (str.to.re "I") (str.to.re "N") (str.to.re "S") (str.to.re "O") (str.to.re "T"))) (re.++ (str.to.re "N") (re.union (str.to.re "E") (str.to.re "V") (str.to.re "H") (str.to.re "J") (str.to.re "M") (str.to.re "Y") (str.to.re "C") (str.to.re "D"))) (re.++ (str.to.re "O") (re.union (str.to.re "H") (str.to.re "K") (str.to.re "R"))) (str.to.re "PA") (str.to.re "RI") (re.++ (str.to.re "S") (re.union (str.to.re "C") (str.to.re "D"))) (re.++ (str.to.re "T") (re.union (str.to.re "N") (str.to.re "X"))) (str.to.re "UT") (re.++ (str.to.re "V") (re.union (str.to.re "T") (str.to.re "A"))) (re.++ (str.to.re "W") (re.union (str.to.re "A") (str.to.re "V") (str.to.re "I") (str.to.re "Y")))) (str.to.re "\x0a")))))
; ^(((((((00|\+)49[ \-/]?)|0)[1-9][0-9]{1,4})[ \-/]?)|((((00|\+)49\()|\(0)[1-9][0-9]{1,4}\)[ \-/]?))[0-9]{1,7}([ \-/]?[0-9]{1,5})?)$
(assert (not (str.in.re X (re.++ (str.to.re "\x0a") (re.union (re.++ (re.opt (re.union (str.to.re " ") (str.to.re "-") (str.to.re "/"))) (re.union (re.++ (re.union (str.to.re "00") (str.to.re "+")) (str.to.re "49") (re.opt (re.union (str.to.re " ") (str.to.re "-") (str.to.re "/")))) (str.to.re "0")) (re.range "1" "9") ((_ re.loop 1 4) (re.range "0" "9"))) (re.++ (re.union (re.++ (re.union (str.to.re "00") (str.to.re "+")) (str.to.re "49(")) (str.to.re "(0")) (re.range "1" "9") ((_ re.loop 1 4) (re.range "0" "9")) (str.to.re ")") (re.opt (re.union (str.to.re " ") (str.to.re "-") (str.to.re "/"))))) ((_ re.loop 1 7) (re.range "0" "9")) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (str.to.re "-") (str.to.re "/"))) ((_ re.loop 1 5) (re.range "0" "9"))))))))
(check-sat)
