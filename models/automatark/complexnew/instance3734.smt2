(declare-const X String)
; (http):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+(\\.[\\w\\-_]+)(\\/)([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#]+)(\\/)((\\d{8}-)|(\\d{9}-)|(\\d{10}-)|(\\d{11}-))+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?+html^])?
(assert (str.in.re X (re.++ (str.to.re "http:\x5c/\x5c/") (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "_"))) (re.+ (re.++ (str.to.re "\x5c") re.allchar (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "_"))))) (str.to.re "\x5c/\x5c/") (re.+ (re.union (re.++ (str.to.re "\x5c") ((_ re.loop 8 8) (str.to.re "d")) (str.to.re "-")) (re.++ (str.to.re "\x5c") ((_ re.loop 9 9) (str.to.re "d")) (str.to.re "-")) (re.++ (str.to.re "\x5c") ((_ re.loop 10 10) (str.to.re "d")) (str.to.re "-")) (re.++ (str.to.re "\x5c") ((_ re.loop 11 11) (str.to.re "d")) (str.to.re "-")))) (re.opt (re.++ (re.* (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re ".") (str.to.re ",") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re ":") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#"))) (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re "@") (str.to.re "?") (str.to.re "+") (str.to.re "h") (str.to.re "t") (str.to.re "m") (str.to.re "l") (str.to.re "^")))) (str.to.re "\x0a\x5c") re.allchar (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "_"))) (re.* (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re ".") (str.to.re ",") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re ":") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#"))) (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#"))))))
; FTP\s+\x2FNFO\x2CRegistered\s+Server\s+www\x2Einternet-optimizer\x2Ecom
(assert (not (str.in.re X (re.++ (str.to.re "FTP") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "/NFO,Registered") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "Server") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "www.internet-optimizer.com\x0a")))))
; httphost[^\n\r]*www\x2Emaxifiles\x2Ecom
(assert (not (str.in.re X (re.++ (str.to.re "httphost") (re.* (re.union (str.to.re "\x0a") (str.to.re "\x0d"))) (str.to.re "www.maxifiles.com\x0a")))))
; ^(0|(\+)?([1-9]{1}[0-9]{0,3})|([1-5]{1}[0-9]{1,4}|[6]{1}([0-4]{1}[0-9]{3}|[5]{1}([0-4]{1}[0-9]{2}|[5]{1}([0-2]{1}[0-9]{1}|[3]{1}[0-5]{1})))))$
(assert (str.in.re X (re.++ (re.union (str.to.re "0") (re.++ (re.opt (str.to.re "+")) ((_ re.loop 1 1) (re.range "1" "9")) ((_ re.loop 0 3) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (re.range "1" "5")) ((_ re.loop 1 4) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (str.to.re "6")) (re.union (re.++ ((_ re.loop 1 1) (re.range "0" "4")) ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (str.to.re "5")) (re.union (re.++ ((_ re.loop 1 1) (re.range "0" "4")) ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (str.to.re "5")) (re.union (re.++ ((_ re.loop 1 1) (re.range "0" "2")) ((_ re.loop 1 1) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (str.to.re "3")) ((_ re.loop 1 1) (re.range "0" "5")))))))))) (str.to.re "\x0a"))))
(check-sat)
