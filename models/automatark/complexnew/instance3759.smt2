(declare-const X String)
; ((0[1-9])|(1[0-9])|(2[0-9])|(3[0]))/((0[1-9])|(1[0-2]))/14[3-9]{2}
(assert (str.in.re X (re.++ (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "9")) (str.to.re "30")) (str.to.re "/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "2"))) (str.to.re "/14") ((_ re.loop 2 2) (re.range "3" "9")) (str.to.re "\x0a"))))
; #^([a-z0-9+\-.]+):([/]{0,2}([a-z0-9\-._~%!\$&'\(\)\*+,;=:]+@)?([\[\]a-z0-9\-._~%!\$&'\(\)\*+,;=:]+(:[0-9]+)?))([a-z0-9\-._~%!\$&'\(\)\*+,;=:@/]*)(\?[\?/a-z0-9\-._~%!\$&'\(\)\*+,;=:@]+)?(\#[a-z0-9\-._~%!\$&'\(\)\*+,;=:@/\?]+)?#i
(assert (str.in.re X (re.++ (str.to.re "#") (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "+") (str.to.re "-") (str.to.re "."))) (str.to.re ":") (re.* (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":") (str.to.re "@") (str.to.re "/"))) (re.opt (re.++ (str.to.re "?") (re.+ (re.union (str.to.re "?") (str.to.re "/") (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":") (str.to.re "@"))))) (re.opt (re.++ (str.to.re "#") (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":") (str.to.re "@") (str.to.re "/") (str.to.re "?"))))) (str.to.re "#i\x0a") ((_ re.loop 0 2) (str.to.re "/")) (re.opt (re.++ (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":"))) (str.to.re "@"))) (re.+ (re.union (str.to.re "[") (str.to.re "]") (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":"))) (re.opt (re.++ (str.to.re ":") (re.+ (re.range "0" "9")))))))
; (http(s?)://|[a-zA-Z0-9\-]+\.)[a-zA-Z0-9/~\-]+\.[a-zA-Z0-9/~\-_,&\?\.;]+[^\.,\s<]
(assert (str.in.re X (re.++ (re.union (re.++ (str.to.re "http") (re.opt (str.to.re "s")) (str.to.re "://")) (re.++ (re.+ (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "-"))) (str.to.re "."))) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "/") (str.to.re "~") (str.to.re "-"))) (str.to.re ".") (re.+ (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "/") (str.to.re "~") (str.to.re "-") (str.to.re "_") (str.to.re ",") (str.to.re "&") (str.to.re "?") (str.to.re ".") (str.to.re ";"))) (re.union (str.to.re ".") (str.to.re ",") (str.to.re "<") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (str.to.re "\x0a"))))
; <img([^>]*[^/])>
(assert (str.in.re X (re.++ (str.to.re "<img>\x0a") (re.* (re.comp (str.to.re ">"))) (re.comp (str.to.re "/")))))
(check-sat)
