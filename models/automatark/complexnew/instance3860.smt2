(declare-const X String)
; ^(((\d{4})(0[13578]|10|12)(0[1-9]|[12][0-9]|3[01]))|((\d{4})(0[469]|11)([0][1-9]|[12][0-9]|30))|((\d{4})(02)(0[1-9]|1[0-9]|2[0-8]))|(([02468][048]00)(02)(29))|(([13579][26]00) (02)(29))|(([0-9][0-9][0][48])(02)(29))|(([0-9][0-9][2468][048])(02)(29))|(([0-9][0-9][13579][26])(02)(29))|(00000000)|(88888888)|(99999999))?$
(assert (str.in.re X (re.++ (re.opt (re.union (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.union (re.++ (str.to.re "0") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "8"))) (str.to.re "10") (str.to.re "12")) (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (re.++ (str.to.re "3") (re.union (str.to.re "0") (str.to.re "1"))))) (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.union (re.++ (str.to.re "0") (re.union (str.to.re "4") (str.to.re "6") (str.to.re "9"))) (str.to.re "11")) (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (str.to.re "30"))) (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "02") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "8")))) (re.++ (str.to.re "0229") (re.union (str.to.re "0") (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8")) (re.union (str.to.re "0") (str.to.re "4") (str.to.re "8")) (str.to.re "00")) (re.++ (str.to.re " 0229") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "9")) (re.union (str.to.re "2") (str.to.re "6")) (str.to.re "00")) (re.++ (str.to.re "0229") (re.range "0" "9") (re.range "0" "9") (str.to.re "0") (re.union (str.to.re "4") (str.to.re "8"))) (re.++ (str.to.re "0229") (re.range "0" "9") (re.range "0" "9") (re.union (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8")) (re.union (str.to.re "0") (str.to.re "4") (str.to.re "8"))) (re.++ (str.to.re "0229") (re.range "0" "9") (re.range "0" "9") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "9")) (re.union (str.to.re "2") (str.to.re "6"))) (str.to.re "00000000") (str.to.re "88888888") (str.to.re "99999999"))) (str.to.re "\x0a"))))
; ^(0+[1-9]|[1-9])[0-9]*$
(assert (not (str.in.re X (re.++ (re.union (re.++ (re.+ (str.to.re "0")) (re.range "1" "9")) (re.range "1" "9")) (re.* (re.range "0" "9")) (str.to.re "\x0a")))))
; ^\$((\d{1})\,\d{1,3}(\,\d{3}))|(\d{1,3}(\,\d{3}))|(\d{1,3})?$
(assert (str.in.re X (re.union (re.++ (str.to.re "$") ((_ re.loop 1 1) (re.range "0" "9")) (str.to.re ",") ((_ re.loop 1 3) (re.range "0" "9")) (str.to.re ",") ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (str.to.re ",") ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ (re.opt ((_ re.loop 1 3) (re.range "0" "9"))) (str.to.re "\x0a")))))
; ^((AL)|(AK)|(AS)|(AZ)|(AR)|(CA)|(CO)|(CT)|(DE)|(DC)|(FM)|(FL)|(GA)|(GU)|(HI)|(ID)|(IL)|(IN)|(IA)|(KS)|(KY)|(LA)|(ME)|(MH)|(MD)|(MA)|(MI)|(MN)|(MS)|(MO)|(MT)|(NE)|(NV)|(NH)|(NJ)|(NM)|(NY)|(NC)|(ND)|(MP)|(OH)|(OK)|(OR)|(PW)|(PA)|(PR)|(RI)|(SC)|(SD)|(TN)|(TX)|(UT)|(VT)|(VI)|(VA)|(WA)|(WV)|(WI)|(WY))$
(assert (str.in.re X (re.++ (re.union (str.to.re "AL") (str.to.re "AK") (str.to.re "AS") (str.to.re "AZ") (str.to.re "AR") (str.to.re "CA") (str.to.re "CO") (str.to.re "CT") (str.to.re "DE") (str.to.re "DC") (str.to.re "FM") (str.to.re "FL") (str.to.re "GA") (str.to.re "GU") (str.to.re "HI") (str.to.re "ID") (str.to.re "IL") (str.to.re "IN") (str.to.re "IA") (str.to.re "KS") (str.to.re "KY") (str.to.re "LA") (str.to.re "ME") (str.to.re "MH") (str.to.re "MD") (str.to.re "MA") (str.to.re "MI") (str.to.re "MN") (str.to.re "MS") (str.to.re "MO") (str.to.re "MT") (str.to.re "NE") (str.to.re "NV") (str.to.re "NH") (str.to.re "NJ") (str.to.re "NM") (str.to.re "NY") (str.to.re "NC") (str.to.re "ND") (str.to.re "MP") (str.to.re "OH") (str.to.re "OK") (str.to.re "OR") (str.to.re "PW") (str.to.re "PA") (str.to.re "PR") (str.to.re "RI") (str.to.re "SC") (str.to.re "SD") (str.to.re "TN") (str.to.re "TX") (str.to.re "UT") (str.to.re "VT") (str.to.re "VI") (str.to.re "VA") (str.to.re "WA") (str.to.re "WV") (str.to.re "WI") (str.to.re "WY")) (str.to.re "\x0a"))))
; \\s\\d{2}[-]\\w{3}-\\d{4}
(assert (str.in.re X (re.++ (str.to.re "\x5cs\x5c") ((_ re.loop 2 2) (str.to.re "d")) (str.to.re "-\x5c") ((_ re.loop 3 3) (str.to.re "w")) (str.to.re "-\x5c") ((_ re.loop 4 4) (str.to.re "d")) (str.to.re "\x0a"))))
(check-sat)
