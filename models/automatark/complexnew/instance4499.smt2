(declare-const X String)
; /[0-9]+[stndrh]*\s*(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)[a-z]*\s*([0-9][0-9][0-9][0-9])?|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)[a-z]*\s*[0-9]+[stndrh]*|[0-9]+[\/.-][0-9]+[\/.-][0-9]+[0-9]+|[saturnmoewdhfi]*day/i
(assert (str.in.re X (re.union (re.++ (str.to.re "/") (re.+ (re.range "0" "9")) (re.* (re.union (str.to.re "s") (str.to.re "t") (str.to.re "n") (str.to.re "d") (str.to.re "r") (str.to.re "h"))) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.union (str.to.re "jan") (str.to.re "feb") (str.to.re "mar") (str.to.re "apr") (str.to.re "may") (str.to.re "jun") (str.to.re "jul") (str.to.re "aug") (str.to.re "sep") (str.to.re "oct") (str.to.re "nov") (str.to.re "dec")) (re.* (re.range "a" "z")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.opt (re.++ (re.range "0" "9") (re.range "0" "9") (re.range "0" "9") (re.range "0" "9")))) (re.++ (re.union (str.to.re "jan") (str.to.re "feb") (str.to.re "mar") (str.to.re "apr") (str.to.re "may") (str.to.re "jun") (str.to.re "jul") (str.to.re "aug") (str.to.re "sep") (str.to.re "oct") (str.to.re "nov") (str.to.re "dec")) (re.* (re.range "a" "z")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.+ (re.range "0" "9")) (re.* (re.union (str.to.re "s") (str.to.re "t") (str.to.re "n") (str.to.re "d") (str.to.re "r") (str.to.re "h")))) (re.++ (re.+ (re.range "0" "9")) (re.union (str.to.re "/") (str.to.re ".") (str.to.re "-")) (re.+ (re.range "0" "9")) (re.union (str.to.re "/") (str.to.re ".") (str.to.re "-")) (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.++ (re.* (re.union (str.to.re "s") (str.to.re "a") (str.to.re "t") (str.to.re "u") (str.to.re "r") (str.to.re "n") (str.to.re "m") (str.to.re "o") (str.to.re "e") (str.to.re "w") (str.to.re "d") (str.to.re "h") (str.to.re "f") (str.to.re "i"))) (str.to.re "day/i\x0a")))))
; DE\d{2}[ ]\d{4}[ ]\d{4}[ ]\d{4}[ ]\d{4}[ ]\d{2}|DE\d{20}
(assert (str.in.re X (re.++ (str.to.re "DE") (re.union (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ ((_ re.loop 20 20) (re.range "0" "9")) (str.to.re "\x0a"))))))
; User-Agent\x3AUser-Agent\x3a
(assert (str.in.re X (str.to.re "User-Agent:User-Agent:\x0a")))
; cdpView.*protocol.*\x2Fs\x28robert\x40blackcastlesoft\x2Ecom\x29
(assert (not (str.in.re X (re.++ (str.to.re "cdpView") (re.* re.allchar) (str.to.re "protocol") (re.* re.allchar) (str.to.re "/s(robert@blackcastlesoft.com)\x0a")))))
; User-Agent\x3ARunnerads\.grokads\.comHost\x3Amcndvwoemn\x2flvv\.jde
(assert (not (str.in.re X (str.to.re "User-Agent:Runnerads.grokads.comHost:mcndvwoemn/lvv.jde\x0a"))))
(check-sat)
