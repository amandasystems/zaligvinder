(declare-const X String)
; (([01][\.\- +]\(\d{3}\)[\.\- +]?)|([01][\.\- +]\d{3}[\.\- +])|(\(\d{3}\) ?)|(\d{3}[- \.]))?\d{3}[- \.]\d{4}
(assert (str.in.re X (re.++ (re.opt (re.union (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+")) (str.to.re "(") ((_ re.loop 3 3) (re.range "0" "9")) (str.to.re ")") (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+")))) (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+")) ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+"))) (re.++ (str.to.re "(") ((_ re.loop 3 3) (re.range "0" "9")) (str.to.re ")") (re.opt (str.to.re " "))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re "-") (str.to.re " ") (str.to.re "."))))) ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re "-") (str.to.re " ") (str.to.re ".")) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a"))))
; Host\x3A\d+UI2.*areprotocolhttp\x3A\x2F\x2Fwww\.searchinweb\.com\x2Fsearch\.php\?said=bar
(assert (str.in.re X (re.++ (str.to.re "Host:") (re.+ (re.range "0" "9")) (str.to.re "UI2") (re.* re.allchar) (str.to.re "areprotocolhttp://www.searchinweb.com/search.php?said=bar\x0a"))))
; ^\d{1,2}\/\d{1,2}\/\d{4}$
(assert (not (str.in.re X (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (str.to.re "/") ((_ re.loop 1 2) (re.range "0" "9")) (str.to.re "/") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a")))))
; ^( )*(\+?( )?\(?( )?(\d{1,3})?)\)?(.|-|_ )?\(?(\d{3})\)?(.|-|_ )?\(?(\d{3})\)?(.|-|_ )?\(?(\d{4})\)?( )*$
(assert (not (str.in.re X (re.++ (re.* (str.to.re " ")) (re.opt (str.to.re ")")) (re.opt (re.union re.allchar (str.to.re "-") (str.to.re "_ "))) (re.opt (str.to.re "(")) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (str.to.re ")")) (re.opt (re.union re.allchar (str.to.re "-") (str.to.re "_ "))) (re.opt (str.to.re "(")) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (str.to.re ")")) (re.opt (re.union re.allchar (str.to.re "-") (str.to.re "_ "))) (re.opt (str.to.re "(")) ((_ re.loop 4 4) (re.range "0" "9")) (re.opt (str.to.re ")")) (re.* (str.to.re " ")) (str.to.re "\x0a") (re.opt (str.to.re "+")) (re.opt (str.to.re " ")) (re.opt (str.to.re "(")) (re.opt (str.to.re " ")) (re.opt ((_ re.loop 1 3) (re.range "0" "9")))))))
(check-sat)
