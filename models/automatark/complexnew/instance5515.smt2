(declare-const X String)
; ^(((h|H)(t|T))(t|T)(p|P)((s|S)?)\:\/\/)?((www|WWW)+\.)+(([0-9]{1,3}){3}[0-9]{1,3}\.|([\w!~*'()-]+\.)*([\w^-][\w-]{0,61})?[\w]\.[a-z]{2,6})(:[0-9]{1,4})?((\/*)|(\/+[\w!~*'().;?:@&=+$,%#-]+)+\/*)$
(assert (not (str.in.re X (re.++ (re.opt (re.++ (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "p") (str.to.re "P")) (re.opt (re.union (str.to.re "s") (str.to.re "S"))) (str.to.re "://") (re.union (str.to.re "h") (str.to.re "H")) (re.union (str.to.re "t") (str.to.re "T")))) (re.+ (re.++ (re.+ (re.union (str.to.re "www") (str.to.re "WWW"))) (str.to.re "."))) (re.union (re.++ ((_ re.loop 3 3) ((_ re.loop 1 3) (re.range "0" "9"))) ((_ re.loop 1 3) (re.range "0" "9")) (str.to.re ".")) (re.++ (re.* (re.++ (re.+ (re.union (str.to.re "!") (str.to.re "~") (str.to.re "*") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re "."))) (re.opt (re.++ (re.union (str.to.re "^") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) ((_ re.loop 0 61) (re.union (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))) (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) (str.to.re ".") ((_ re.loop 2 6) (re.range "a" "z")))) (re.opt (re.++ (str.to.re ":") ((_ re.loop 1 4) (re.range "0" "9")))) (re.union (re.* (str.to.re "/")) (re.++ (re.+ (re.++ (re.+ (str.to.re "/")) (re.+ (re.union (str.to.re "!") (str.to.re "~") (str.to.re "*") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re ".") (str.to.re ";") (str.to.re "?") (str.to.re ":") (str.to.re "@") (str.to.re "&") (str.to.re "=") (str.to.re "+") (str.to.re "$") (str.to.re ",") (str.to.re "%") (str.to.re "#") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))) (re.* (str.to.re "/")))) (str.to.re "\x0a")))))
; /\)\r\nHost\x3a\x20[a-z\d\x2e\x2d]{6,32}\r\nCache\x2dControl\x3a\x20no\x2dcache\r\n\r\n$/
(assert (not (str.in.re X (re.++ (str.to.re "/)\x0d\x0aHost: ") ((_ re.loop 6 32) (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re ".") (str.to.re "-"))) (str.to.re "\x0d\x0aCache-Control: no-cache\x0d\x0a\x0d\x0a/\x0a")))))
; ^\s*[a-zA-Z0-9,\s]+\s*$
(assert (str.in.re X (re.++ (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re ",") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "\x0a"))))
(check-sat)
