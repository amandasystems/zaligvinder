(declare-const X String)
; User-Agent\x3ABasedUser-Agent\x3A
(assert (not (str.in.re X (str.to.re "User-Agent:BasedUser-Agent:\x0a"))))
; /filename=[^\n]*\x2elnk/i
(assert (str.in.re X (re.++ (str.to.re "/filename=") (re.* (re.comp (str.to.re "\x0a"))) (str.to.re ".lnk/i\x0a"))))
; #^([a-z0-9+\-.]+):([/]{0,2}([a-z0-9\-._~%!\$&'\(\)\*+,;=:]+@)?([\[\]a-z0-9\-._~%!\$&'\(\)\*+,;=:]+(:[0-9]+)?))([a-z0-9\-._~%!\$&'\(\)\*+,;=:@/]*)(\?[\?/a-z0-9\-._~%!\$&'\(\)\*+,;=:@]+)?(\#[a-z0-9\-._~%!\$&'\(\)\*+,;=:@/\?]+)?#i
(assert (str.in.re X (re.++ (str.to.re "#") (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "+") (str.to.re "-") (str.to.re "."))) (str.to.re ":") (re.* (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":") (str.to.re "@") (str.to.re "/"))) (re.opt (re.++ (str.to.re "?") (re.+ (re.union (str.to.re "?") (str.to.re "/") (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":") (str.to.re "@"))))) (re.opt (re.++ (str.to.re "#") (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":") (str.to.re "@") (str.to.re "/") (str.to.re "?"))))) (str.to.re "#i\x0a") ((_ re.loop 0 2) (str.to.re "/")) (re.opt (re.++ (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":"))) (str.to.re "@"))) (re.+ (re.union (str.to.re "[") (str.to.re "]") (re.range "a" "z") (re.range "0" "9") (str.to.re "-") (str.to.re ".") (str.to.re "_") (str.to.re "~") (str.to.re "%") (str.to.re "!") (str.to.re "$") (str.to.re "&") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "*") (str.to.re "+") (str.to.re ",") (str.to.re ";") (str.to.re "=") (str.to.re ":"))) (re.opt (re.++ (str.to.re ":") (re.+ (re.range "0" "9")))))))
; \r\nSTATUS\x3AUser-Agent\x3AHost\x3aReferer\x3A
(assert (not (str.in.re X (str.to.re "\x0d\x0aSTATUS:User-Agent:Host:Referer:\x0a"))))
; Host\x3A[^\n\r]*cache\x2Eeverer\x2Ecom\s+from\.myway\.comToolbar
(assert (not (str.in.re X (re.++ (str.to.re "Host:") (re.* (re.union (str.to.re "\x0a") (str.to.re "\x0d"))) (str.to.re "cache.everer.com") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "from.myway.com\x1bToolbar\x0a")))))
(check-sat)
