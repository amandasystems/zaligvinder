(declare-const X String)
; ^(\+65)?\d{8}$
(assert (str.in.re X (re.++ (re.opt (str.to.re "+65")) ((_ re.loop 8 8) (re.range "0" "9")) (str.to.re "\x0a"))))
; http://\([a-zA-Z0-9_\-]\+\(\.[a-zA-Z0-9_\-]\+\)\+\)\+:\?[0-9]\?\(/*[a-zA-Z0-9_\-#]*\.*\)*?\?\(&*[a-zA-Z0-9;_+/.\-%]*-*=*[a-zA-Z0-9;_+/.\-%]*-*\)*
(assert (not (str.in.re X (re.++ (str.to.re "http://(") (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_") (str.to.re "-")) (str.to.re "+(.") (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_") (str.to.re "-")) (str.to.re "+)+)+:?") (re.range "0" "9") (str.to.re "?(") (re.* (str.to.re "/")) (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_") (str.to.re "-") (str.to.re "#"))) (re.* (str.to.re ".")) (re.* (str.to.re ")")) (str.to.re "?(") (re.* (str.to.re "&")) (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re ";") (str.to.re "_") (str.to.re "+") (str.to.re "/") (str.to.re ".") (str.to.re "-") (str.to.re "%"))) (re.* (str.to.re "-")) (re.* (str.to.re "=")) (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re ";") (str.to.re "_") (str.to.re "+") (str.to.re "/") (str.to.re ".") (str.to.re "-") (str.to.re "%"))) (re.* (str.to.re "-")) (re.* (str.to.re ")")) (str.to.re "\x0a")))))
(check-sat)
