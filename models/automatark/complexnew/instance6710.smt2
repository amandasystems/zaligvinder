(declare-const X String)
; /^loginpost\x7c\d+\x7c\d+\x7C[a-z0-9]+\x2E[a-z]{2,3}\x7C[a-z0-9]+\x7C/
(assert (not (str.in.re X (re.++ (str.to.re "/loginpost|") (re.+ (re.range "0" "9")) (str.to.re "|") (re.+ (re.range "0" "9")) (str.to.re "|") (re.+ (re.union (re.range "a" "z") (re.range "0" "9"))) (str.to.re ".") ((_ re.loop 2 3) (re.range "a" "z")) (str.to.re "|") (re.+ (re.union (re.range "a" "z") (re.range "0" "9"))) (str.to.re "|/\x0a")))))
; ^(01)[0-9]{8}
(assert (not (str.in.re X (re.++ (str.to.re "01") ((_ re.loop 8 8) (re.range "0" "9")) (str.to.re "\x0a")))))
; (\/\*[\s\S.]+?\*\/|[/]{2,}.*|\/((\\\/)|.??)*\/[gim]{0,3}|'((\\\')|.??)*'|"((\\\")|.??)*"|-?\d+\.\d+e?-?e?\d*|-?\.\d+e-?\d+|\w+|[\[\]\(\)\{\}:=;"'\-&!|+,.\/*])
(assert (not (str.in.re X (re.++ (re.union (re.++ (str.to.re "/*") (re.+ (re.union (re.comp (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re ".") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "*/")) (re.++ (re.* re.allchar) ((_ re.loop 2 2) (str.to.re "/")) (re.* (str.to.re "/"))) (re.++ (str.to.re "/") (re.* (re.union (str.to.re "\x5c/") (re.opt re.allchar))) (str.to.re "/") ((_ re.loop 0 3) (re.union (str.to.re "g") (str.to.re "i") (str.to.re "m")))) (re.++ (str.to.re "'") (re.* (re.union (str.to.re "\x5c'") (re.opt re.allchar))) (str.to.re "'")) (re.++ (str.to.re "\x22") (re.* (re.union (str.to.re "\x5c\x22") (re.opt re.allchar))) (str.to.re "\x22")) (re.++ (re.opt (str.to.re "-")) (re.+ (re.range "0" "9")) (str.to.re ".") (re.+ (re.range "0" "9")) (re.opt (str.to.re "e")) (re.opt (str.to.re "-")) (re.opt (str.to.re "e")) (re.* (re.range "0" "9"))) (re.++ (re.opt (str.to.re "-")) (str.to.re ".") (re.+ (re.range "0" "9")) (str.to.re "e") (re.opt (str.to.re "-")) (re.+ (re.range "0" "9"))) (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re "[") (str.to.re "]") (str.to.re "(") (str.to.re ")") (str.to.re "{") (str.to.re "}") (str.to.re ":") (str.to.re "=") (str.to.re ";") (str.to.re "\x22") (str.to.re "'") (str.to.re "-") (str.to.re "&") (str.to.re "!") (str.to.re "|") (str.to.re "+") (str.to.re ",") (str.to.re ".") (str.to.re "/") (str.to.re "*")) (str.to.re "\x0a")))))
; (^(5[0678])\d{11,18}$)|(^(6[^05])\d{11,18}$)|(^(601)[^1]\d{9,16}$)|(^(6011)\d{9,11}$)|(^(6011)\d{13,16}$)|(^(65)\d{11,13}$)|(^(65)\d{15,18}$)|(^(49030)[2-9](\d{10}$|\d{12,13}$))|(^(49033)[5-9](\d{10}$|\d{12,13}$))|(^(49110)[1-2](\d{10}$|\d{12,13}$))|(^(49117)[4-9](\d{10}$|\d{12,13}$))|(^(49118)[0-2](\d{10}$|\d{12,13}$))|(^(4936)(\d{12}$|\d{14,15}$))
(assert (not (str.in.re X (re.union (re.++ ((_ re.loop 11 18) (re.range "0" "9")) (str.to.re "5") (re.union (str.to.re "0") (str.to.re "6") (str.to.re "7") (str.to.re "8"))) (re.++ ((_ re.loop 11 18) (re.range "0" "9")) (str.to.re "6") (re.union (str.to.re "0") (str.to.re "5"))) (re.++ (str.to.re "601") (re.comp (str.to.re "1")) ((_ re.loop 9 16) (re.range "0" "9"))) (re.++ (str.to.re "6011") ((_ re.loop 9 11) (re.range "0" "9"))) (re.++ (str.to.re "6011") ((_ re.loop 13 16) (re.range "0" "9"))) (re.++ (str.to.re "65") ((_ re.loop 11 13) (re.range "0" "9"))) (re.++ (str.to.re "65") ((_ re.loop 15 18) (re.range "0" "9"))) (re.++ (str.to.re "49030") (re.range "2" "9") (re.union ((_ re.loop 10 10) (re.range "0" "9")) ((_ re.loop 12 13) (re.range "0" "9")))) (re.++ (str.to.re "49033") (re.range "5" "9") (re.union ((_ re.loop 10 10) (re.range "0" "9")) ((_ re.loop 12 13) (re.range "0" "9")))) (re.++ (str.to.re "49110") (re.range "1" "2") (re.union ((_ re.loop 10 10) (re.range "0" "9")) ((_ re.loop 12 13) (re.range "0" "9")))) (re.++ (str.to.re "49117") (re.range "4" "9") (re.union ((_ re.loop 10 10) (re.range "0" "9")) ((_ re.loop 12 13) (re.range "0" "9")))) (re.++ (str.to.re "49118") (re.range "0" "2") (re.union ((_ re.loop 10 10) (re.range "0" "9")) ((_ re.loop 12 13) (re.range "0" "9")))) (re.++ (str.to.re "\x0a4936") (re.union ((_ re.loop 12 12) (re.range "0" "9")) ((_ re.loop 14 15) (re.range "0" "9"))))))))
(check-sat)
