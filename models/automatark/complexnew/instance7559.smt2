(declare-const X String)
; ^(((0)[13578]|(10)|(12))(/)((0[1-9])|([12][0-9])|((3)[01]))(/)(\d{4}))|(((0)[469]|(11))(/)((0[1-9])|([12][0-9])|(30))(/)(\d{4}))|((02)(/)((0[1-9])|((1)[0-9])|((2)[0-8]))(/)(\d{4}))|((02)(/)((0[1-9])|((1)[0-9])|((2)[0-9]))(/)((\d{2})(([02468][048])|([13579][26]))))$
(assert (not (str.in.re X (re.union (re.++ (re.union (re.++ (str.to.re "0") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "8"))) (str.to.re "10") (str.to.re "12")) (str.to.re "/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (re.++ (str.to.re "3") (re.union (str.to.re "0") (str.to.re "1")))) (str.to.re "/") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (re.union (re.++ (str.to.re "0") (re.union (str.to.re "4") (str.to.re "6") (str.to.re "9"))) (str.to.re "11")) (str.to.re "/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (str.to.re "30")) (str.to.re "/") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "02/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "8"))) (str.to.re "/") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "\x0a02/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "9"))) (str.to.re "/") ((_ re.loop 2 2) (re.range "0" "9")) (re.union (re.++ (re.union (str.to.re "0") (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8")) (re.union (str.to.re "0") (str.to.re "4") (str.to.re "8"))) (re.++ (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "9")) (re.union (str.to.re "2") (str.to.re "6")))))))))
; PORT\x3Dinternalcyber@yahoo\x2EcomHeaders
(assert (str.in.re X (str.to.re "PORT=internalcyber@yahoo.comHeaders\x0a")))
; ^([Aa][LKSZRAEPlkszraep]|[Cc][AOTaot]|[Dd][ECec]|[Ff][LMlm]|[Gg][AUau]|[Hh][Ii]|[Ii][ADLNadln]|[Kk][SYsy]|[Ll][Aa]|[Mm][ADEHINOPSTadehinopst]|[Nn][CDEHJMVYcdehjmvy]|[Oo][HKRhkr]|[Pp][ARWarw]|[Rr][Ii]|[Ss][CDcd]|[Tt][NXnx]|[Uu][Tt]|[Vv][AITait]|[Ww][AIVYaivy])$
(assert (not (str.in.re X (re.++ (re.union (re.++ (re.union (str.to.re "A") (str.to.re "a")) (re.union (str.to.re "L") (str.to.re "K") (str.to.re "S") (str.to.re "Z") (str.to.re "R") (str.to.re "A") (str.to.re "E") (str.to.re "P") (str.to.re "l") (str.to.re "k") (str.to.re "s") (str.to.re "z") (str.to.re "r") (str.to.re "a") (str.to.re "e") (str.to.re "p"))) (re.++ (re.union (str.to.re "C") (str.to.re "c")) (re.union (str.to.re "A") (str.to.re "O") (str.to.re "T") (str.to.re "a") (str.to.re "o") (str.to.re "t"))) (re.++ (re.union (str.to.re "D") (str.to.re "d")) (re.union (str.to.re "E") (str.to.re "C") (str.to.re "e") (str.to.re "c"))) (re.++ (re.union (str.to.re "F") (str.to.re "f")) (re.union (str.to.re "L") (str.to.re "M") (str.to.re "l") (str.to.re "m"))) (re.++ (re.union (str.to.re "G") (str.to.re "g")) (re.union (str.to.re "A") (str.to.re "U") (str.to.re "a") (str.to.re "u"))) (re.++ (re.union (str.to.re "H") (str.to.re "h")) (re.union (str.to.re "I") (str.to.re "i"))) (re.++ (re.union (str.to.re "I") (str.to.re "i")) (re.union (str.to.re "A") (str.to.re "D") (str.to.re "L") (str.to.re "N") (str.to.re "a") (str.to.re "d") (str.to.re "l") (str.to.re "n"))) (re.++ (re.union (str.to.re "K") (str.to.re "k")) (re.union (str.to.re "S") (str.to.re "Y") (str.to.re "s") (str.to.re "y"))) (re.++ (re.union (str.to.re "L") (str.to.re "l")) (re.union (str.to.re "A") (str.to.re "a"))) (re.++ (re.union (str.to.re "M") (str.to.re "m")) (re.union (str.to.re "A") (str.to.re "D") (str.to.re "E") (str.to.re "H") (str.to.re "I") (str.to.re "N") (str.to.re "O") (str.to.re "P") (str.to.re "S") (str.to.re "T") (str.to.re "a") (str.to.re "d") (str.to.re "e") (str.to.re "h") (str.to.re "i") (str.to.re "n") (str.to.re "o") (str.to.re "p") (str.to.re "s") (str.to.re "t"))) (re.++ (re.union (str.to.re "N") (str.to.re "n")) (re.union (str.to.re "C") (str.to.re "D") (str.to.re "E") (str.to.re "H") (str.to.re "J") (str.to.re "M") (str.to.re "V") (str.to.re "Y") (str.to.re "c") (str.to.re "d") (str.to.re "e") (str.to.re "h") (str.to.re "j") (str.to.re "m") (str.to.re "v") (str.to.re "y"))) (re.++ (re.union (str.to.re "O") (str.to.re "o")) (re.union (str.to.re "H") (str.to.re "K") (str.to.re "R") (str.to.re "h") (str.to.re "k") (str.to.re "r"))) (re.++ (re.union (str.to.re "P") (str.to.re "p")) (re.union (str.to.re "A") (str.to.re "R") (str.to.re "W") (str.to.re "a") (str.to.re "r") (str.to.re "w"))) (re.++ (re.union (str.to.re "R") (str.to.re "r")) (re.union (str.to.re "I") (str.to.re "i"))) (re.++ (re.union (str.to.re "S") (str.to.re "s")) (re.union (str.to.re "C") (str.to.re "D") (str.to.re "c") (str.to.re "d"))) (re.++ (re.union (str.to.re "T") (str.to.re "t")) (re.union (str.to.re "N") (str.to.re "X") (str.to.re "n") (str.to.re "x"))) (re.++ (re.union (str.to.re "U") (str.to.re "u")) (re.union (str.to.re "T") (str.to.re "t"))) (re.++ (re.union (str.to.re "V") (str.to.re "v")) (re.union (str.to.re "A") (str.to.re "I") (str.to.re "T") (str.to.re "a") (str.to.re "i") (str.to.re "t"))) (re.++ (re.union (str.to.re "W") (str.to.re "w")) (re.union (str.to.re "A") (str.to.re "I") (str.to.re "V") (str.to.re "Y") (str.to.re "a") (str.to.re "i") (str.to.re "v") (str.to.re "y")))) (str.to.re "\x0a")))))
; \b[\w]+[\w.-][\w]+@[\w]+[\w.-]\.[\w]{2,4}\b
(assert (str.in.re X (re.++ (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.union (str.to.re ".") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re "@") (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.union (str.to.re ".") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) (str.to.re ".") ((_ re.loop 2 4) (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re "\x0a"))))
(check-sat)
