(declare-const X String)
; ^(B(A|B|C|J|L|N|R|S|Y)|CA|D(K|S|T)|G(A|L)|H(C|E)|IL|K(A|I|E|K|M|N|S)|L(E|C|M|V)|M(A|I|L|T|Y)|N(I|O|M|R|Z)|P(B|D|E|O|K|N|P|T|U|V)|R(A|K|S|V)|S(A|B|C|E|I|K|L|O|N|P|V)|T(A|C|N|O|R|S|T|V)|V(K|T)|Z(A|C|H|I|M|V))([ ]{0,1})([0-9]{3})([A-Z]{2})$
(assert (not (str.in.re X (re.++ (re.union (re.++ (str.to.re "B") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "C") (str.to.re "J") (str.to.re "L") (str.to.re "N") (str.to.re "R") (str.to.re "S") (str.to.re "Y"))) (str.to.re "CA") (re.++ (str.to.re "D") (re.union (str.to.re "K") (str.to.re "S") (str.to.re "T"))) (re.++ (str.to.re "G") (re.union (str.to.re "A") (str.to.re "L"))) (re.++ (str.to.re "H") (re.union (str.to.re "C") (str.to.re "E"))) (str.to.re "IL") (re.++ (str.to.re "K") (re.union (str.to.re "A") (str.to.re "I") (str.to.re "E") (str.to.re "K") (str.to.re "M") (str.to.re "N") (str.to.re "S"))) (re.++ (str.to.re "L") (re.union (str.to.re "E") (str.to.re "C") (str.to.re "M") (str.to.re "V"))) (re.++ (str.to.re "M") (re.union (str.to.re "A") (str.to.re "I") (str.to.re "L") (str.to.re "T") (str.to.re "Y"))) (re.++ (str.to.re "N") (re.union (str.to.re "I") (str.to.re "O") (str.to.re "M") (str.to.re "R") (str.to.re "Z"))) (re.++ (str.to.re "P") (re.union (str.to.re "B") (str.to.re "D") (str.to.re "E") (str.to.re "O") (str.to.re "K") (str.to.re "N") (str.to.re "P") (str.to.re "T") (str.to.re "U") (str.to.re "V"))) (re.++ (str.to.re "R") (re.union (str.to.re "A") (str.to.re "K") (str.to.re "S") (str.to.re "V"))) (re.++ (str.to.re "S") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "C") (str.to.re "E") (str.to.re "I") (str.to.re "K") (str.to.re "L") (str.to.re "O") (str.to.re "N") (str.to.re "P") (str.to.re "V"))) (re.++ (str.to.re "T") (re.union (str.to.re "A") (str.to.re "C") (str.to.re "N") (str.to.re "O") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "V"))) (re.++ (str.to.re "V") (re.union (str.to.re "K") (str.to.re "T"))) (re.++ (str.to.re "Z") (re.union (str.to.re "A") (str.to.re "C") (str.to.re "H") (str.to.re "I") (str.to.re "M") (str.to.re "V")))) (re.opt (str.to.re " ")) ((_ re.loop 3 3) (re.range "0" "9")) ((_ re.loop 2 2) (re.range "A" "Z")) (str.to.re "\x0a")))))
; ^(.*?)([^/\\]*?)(\.[^/\\.]*)?$
(assert (str.in.re X (re.++ (re.* re.allchar) (re.* (re.union (str.to.re "/") (str.to.re "\x5c"))) (re.opt (re.++ (str.to.re ".") (re.* (re.union (str.to.re "/") (str.to.re "\x5c") (str.to.re "."))))) (str.to.re "\x0a"))))
; PL\d{2}[ ]\d{4}[ ]\d{4}[ ]\d{4}[ ]\d{4}[ ]\d{4}[ ]\d{4}|PL\d{26}
(assert (not (str.in.re X (re.++ (str.to.re "PL") (re.union (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re " ") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ ((_ re.loop 26 26) (re.range "0" "9")) (str.to.re "\x0a")))))))
; (((0[13578]|10|12)([/])(0[1-9]|[12][0-9]|3[01])([/])([1-2][0,9][0-9][0-9]))|((0[469]|11)([/])([0][1-9]|[12][0-9]|30)([/])([1-2][0,9][0-9][0-9]))|((02)([/])(0[1-9]|1[0-9]|2[0-8])([/])([1-2][0,9][0-9][0-9]))|((02)([/])(29)(\.|-|\/)([02468][048]00))|((02)([/])(29)([/])([13579][26]00))|((02)([/])(29)([/])([0-9][0-9][0][48]))|((02)([/])(29)([/])([0-9][0-9][2468][048]))|((02)([/])(29)([/])([0-9][0-9][13579][26])))
(assert (not (str.in.re X (re.++ (re.union (re.++ (re.union (re.++ (str.to.re "0") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "8"))) (str.to.re "10") (str.to.re "12")) (str.to.re "/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (re.++ (str.to.re "3") (re.union (str.to.re "0") (str.to.re "1")))) (str.to.re "/") (re.range "1" "2") (re.union (str.to.re "0") (str.to.re ",") (str.to.re "9")) (re.range "0" "9") (re.range "0" "9")) (re.++ (re.union (re.++ (str.to.re "0") (re.union (str.to.re "4") (str.to.re "6") (str.to.re "9"))) (str.to.re "11")) (str.to.re "/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (str.to.re "30")) (str.to.re "/") (re.range "1" "2") (re.union (str.to.re "0") (str.to.re ",") (str.to.re "9")) (re.range "0" "9") (re.range "0" "9")) (re.++ (str.to.re "02/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "8"))) (str.to.re "/") (re.range "1" "2") (re.union (str.to.re "0") (str.to.re ",") (str.to.re "9")) (re.range "0" "9") (re.range "0" "9")) (re.++ (str.to.re "02/29") (re.union (str.to.re ".") (str.to.re "-") (str.to.re "/")) (re.union (str.to.re "0") (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8")) (re.union (str.to.re "0") (str.to.re "4") (str.to.re "8")) (str.to.re "00")) (re.++ (str.to.re "02/29/") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "9")) (re.union (str.to.re "2") (str.to.re "6")) (str.to.re "00")) (re.++ (str.to.re "02/29/") (re.range "0" "9") (re.range "0" "9") (str.to.re "0") (re.union (str.to.re "4") (str.to.re "8"))) (re.++ (str.to.re "02/29/") (re.range "0" "9") (re.range "0" "9") (re.union (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8")) (re.union (str.to.re "0") (str.to.re "4") (str.to.re "8"))) (re.++ (str.to.re "02/29/") (re.range "0" "9") (re.range "0" "9") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "9")) (re.union (str.to.re "2") (str.to.re "6")))) (str.to.re "\x0a")))))
(check-sat)
