(declare-const X String)
; ^[+]\d{2}?[- .]?(\([2-9]\d{2}\)|[2-9]\d{2})[- .]?\d{3}[- .]?\d{4}$
(assert (str.in.re X (re.++ (str.to.re "+") ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (re.union (str.to.re "-") (str.to.re " ") (str.to.re "."))) (re.union (re.++ (str.to.re "(") (re.range "2" "9") ((_ re.loop 2 2) (re.range "0" "9")) (str.to.re ")")) (re.++ (re.range "2" "9") ((_ re.loop 2 2) (re.range "0" "9")))) (re.opt (re.union (str.to.re "-") (str.to.re " ") (str.to.re "."))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re "-") (str.to.re " ") (str.to.re "."))) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a"))))
; Host\x3A\s+\.ico\x2FsLogearch195\.225\.Referer\x3A
(assert (not (str.in.re X (re.++ (str.to.re "Host:") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re ".ico/sLogearch195.225.Referer:\x0a")))))
; (^\(\)$|^\(((\([0-9]+,(\((\([0-9]+,[0-9]+,[0-9]+\),)*(\([0-9]+,[0-9]+,[0-9]+\)){1}\))+\),)*(\([0-9]+,(\((\([0-9]+,[0-9]+,[0-9]+\),)*(\([0-9]+,[0-9]+,[0-9]+\)){1}\))+\)){1}\)))$
(assert (str.in.re X (re.++ (str.to.re "\x0a(") (re.union (str.to.re ")") (re.++ (re.* (re.++ (str.to.re "(") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.++ (str.to.re "(") (re.* (re.++ (str.to.re "(") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re "),"))) ((_ re.loop 1 1) (re.++ (str.to.re "(") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re ")"))) (str.to.re ")"))) (str.to.re "),"))) ((_ re.loop 1 1) (re.++ (str.to.re "(") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.++ (str.to.re "(") (re.* (re.++ (str.to.re "(") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re "),"))) ((_ re.loop 1 1) (re.++ (str.to.re "(") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re ",") (re.+ (re.range "0" "9")) (str.to.re ")"))) (str.to.re ")"))) (str.to.re ")"))) (str.to.re ")"))))))
; www\x2Epurityscan\x2Ecom.*
(assert (not (str.in.re X (re.++ (str.to.re "www.purityscan.com") (re.* re.allchar) (str.to.re "\x0a")))))
(check-sat)
