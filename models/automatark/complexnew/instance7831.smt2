(declare-const X String)
; /filename=[^\n]*\x2epsd/i
(assert (not (str.in.re X (re.++ (str.to.re "/filename=") (re.* (re.comp (str.to.re "\x0a"))) (str.to.re ".psd/i\x0a")))))
; (([\w]+:)?//)?(([\d\w]|%[a-fA-f\d]{2,2})+(:([\d\w]|%[a-fA-f\d]{2,2})+)?@)?([\d\w][-\d\w]{0,253}[\d\w]\.)+[\w]{2,4}(:[\d]+)?(/([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)*(\?(&?([-+_~.\d\w]|%[a-fA-f\d]{2,2})=?)*)?(#([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)?
(assert (not (str.in.re X (re.++ (re.opt (re.++ (re.opt (re.++ (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re ":"))) (str.to.re "//"))) (re.opt (re.++ (re.+ (re.union (re.++ (str.to.re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.range "A" "f") (re.range "0" "9")))) (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.opt (re.++ (str.to.re ":") (re.+ (re.union (re.++ (str.to.re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.range "A" "f") (re.range "0" "9")))) (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))) (str.to.re "@"))) (re.+ (re.++ (re.union (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) ((_ re.loop 0 253) (re.union (str.to.re "-") (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.union (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) (str.to.re "."))) ((_ re.loop 2 4) (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.opt (re.++ (str.to.re ":") (re.+ (re.range "0" "9")))) (re.* (re.++ (str.to.re "/") (re.* (re.union (re.++ (str.to.re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.range "A" "f") (re.range "0" "9")))) (str.to.re "-") (str.to.re "+") (str.to.re "_") (str.to.re "~") (str.to.re ".") (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))) (re.opt (re.++ (str.to.re "?") (re.* (re.++ (re.opt (str.to.re "&")) (re.union (re.++ (str.to.re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.range "A" "f") (re.range "0" "9")))) (str.to.re "-") (str.to.re "+") (str.to.re "_") (str.to.re "~") (str.to.re ".") (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) (re.opt (str.to.re "=")))))) (re.opt (re.++ (str.to.re "#") (re.* (re.union (re.++ (str.to.re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.range "A" "f") (re.range "0" "9")))) (str.to.re "-") (str.to.re "+") (str.to.re "_") (str.to.re "~") (str.to.re ".") (re.range "0" "9") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))) (str.to.re "\x0a")))))
; /\x2empg([\?\x5c\x2f]|$)/smiU
(assert (not (str.in.re X (re.++ (str.to.re "/.mpg") (re.union (str.to.re "?") (str.to.re "\x5c") (str.to.re "/")) (str.to.re "/smiU\x0a")))))
; /^.{27}/sR
(assert (not (str.in.re X (re.++ (str.to.re "/") ((_ re.loop 27 27) re.allchar) (str.to.re "/sR\x0a")))))
; (^[1-9]{1,3}(,\d{3})*$)|(^0$)
(assert (not (str.in.re X (re.union (re.++ ((_ re.loop 1 3) (re.range "1" "9")) (re.* (re.++ (str.to.re ",") ((_ re.loop 3 3) (re.range "0" "9"))))) (str.to.re "0\x0a")))))
(check-sat)
