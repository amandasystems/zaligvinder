(declare-const X String)
; ^1?[-\. ]?(\(\d{3}\)?[-\. ]?|\d{3}?[-\. ]?)?\d{3}?[-\. ]?\d{4}$
(assert (not (str.in.re X (re.++ (re.opt (str.to.re "1")) (re.opt (re.union (str.to.re "-") (str.to.re ".") (str.to.re " "))) (re.opt (re.union (re.++ (str.to.re "(") ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (str.to.re ")")) (re.opt (re.union (str.to.re "-") (str.to.re ".") (str.to.re " ")))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re "-") (str.to.re ".") (str.to.re " ")))))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re "-") (str.to.re ".") (str.to.re " "))) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a")))))
; (((^[BEGLMNS][1-9]\d?)|(^W[2-9])|(^(A[BL]|B[ABDHLNRST]|C[ABFHMORTVW]|D[ADEGHLNTY]|E[HNX]|F[KY]|G[LUY]|H[ADGPRSUX]|I[GMPV]|JE|K[ATWY]|L[ADELNSU]|M[EKL]|N[EGNPRW]|O[LX]|P[AEHLOR]|R[GHM]|S[AEGKL-PRSTWY]|T[ADFNQRSW]|UB|W[ADFNRSV]|YO|ZE)\d\d?)|(^W1[A-HJKSTUW0-9])|(((^WC[1-2])|(^EC[1-4])|(^SW1))[ABEHMNPRVWXY]))(\s*)?([0-9][ABD-HJLNP-UW-Z]{2}))$|(^GIR\s?0AA$)
(assert (not (str.in.re X (re.union (re.++ (re.union (re.++ (re.union (str.to.re "B") (str.to.re "E") (str.to.re "G") (str.to.re "L") (str.to.re "M") (str.to.re "N") (str.to.re "S")) (re.range "1" "9") (re.opt (re.range "0" "9"))) (re.++ (str.to.re "W") (re.range "2" "9")) (re.++ (re.union (re.++ (str.to.re "A") (re.union (str.to.re "B") (str.to.re "L"))) (re.++ (str.to.re "B") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "D") (str.to.re "H") (str.to.re "L") (str.to.re "N") (str.to.re "R") (str.to.re "S") (str.to.re "T"))) (re.++ (str.to.re "C") (re.union (str.to.re "A") (str.to.re "B") (str.to.re "F") (str.to.re "H") (str.to.re "M") (str.to.re "O") (str.to.re "R") (str.to.re "T") (str.to.re "V") (str.to.re "W"))) (re.++ (str.to.re "D") (re.union (str.to.re "A") (str.to.re "D") (str.to.re "E") (str.to.re "G") (str.to.re "H") (str.to.re "L") (str.to.re "N") (str.to.re "T") (str.to.re "Y"))) (re.++ (str.to.re "E") (re.union (str.to.re "H") (str.to.re "N") (str.to.re "X"))) (re.++ (str.to.re "F") (re.union (str.to.re "K") (str.to.re "Y"))) (re.++ (str.to.re "G") (re.union (str.to.re "L") (str.to.re "U") (str.to.re "Y"))) (re.++ (str.to.re "H") (re.union (str.to.re "A") (str.to.re "D") (str.to.re "G") (str.to.re "P") (str.to.re "R") (str.to.re "S") (str.to.re "U") (str.to.re "X"))) (re.++ (str.to.re "I") (re.union (str.to.re "G") (str.to.re "M") (str.to.re "P") (str.to.re "V"))) (str.to.re "JE") (re.++ (str.to.re "K") (re.union (str.to.re "A") (str.to.re "T") (str.to.re "W") (str.to.re "Y"))) (re.++ (str.to.re "L") (re.union (str.to.re "A") (str.to.re "D") (str.to.re "E") (str.to.re "L") (str.to.re "N") (str.to.re "S") (str.to.re "U"))) (re.++ (str.to.re "M") (re.union (str.to.re "E") (str.to.re "K") (str.to.re "L"))) (re.++ (str.to.re "N") (re.union (str.to.re "E") (str.to.re "G") (str.to.re "N") (str.to.re "P") (str.to.re "R") (str.to.re "W"))) (re.++ (str.to.re "O") (re.union (str.to.re "L") (str.to.re "X"))) (re.++ (str.to.re "P") (re.union (str.to.re "A") (str.to.re "E") (str.to.re "H") (str.to.re "L") (str.to.re "O") (str.to.re "R"))) (re.++ (str.to.re "R") (re.union (str.to.re "G") (str.to.re "H") (str.to.re "M"))) (re.++ (str.to.re "S") (re.union (str.to.re "A") (str.to.re "E") (str.to.re "G") (str.to.re "K") (re.range "L" "P") (str.to.re "R") (str.to.re "S") (str.to.re "T") (str.to.re "W") (str.to.re "Y"))) (re.++ (str.to.re "T") (re.union (str.to.re "A") (str.to.re "D") (str.to.re "F") (str.to.re "N") (str.to.re "Q") (str.to.re "R") (str.to.re "S") (str.to.re "W"))) (str.to.re "UB") (re.++ (str.to.re "W") (re.union (str.to.re "A") (str.to.re "D") (str.to.re "F") (str.to.re "N") (str.to.re "R") (str.to.re "S") (str.to.re "V"))) (str.to.re "YO") (str.to.re "ZE")) (re.range "0" "9") (re.opt (re.range "0" "9"))) (re.++ (str.to.re "W1") (re.union (re.range "A" "H") (str.to.re "J") (str.to.re "K") (str.to.re "S") (str.to.re "T") (str.to.re "U") (str.to.re "W") (re.range "0" "9"))) (re.++ (re.union (re.++ (str.to.re "WC") (re.range "1" "2")) (re.++ (str.to.re "EC") (re.range "1" "4")) (str.to.re "SW1")) (re.union (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "M") (str.to.re "N") (str.to.re "P") (str.to.re "R") (str.to.re "V") (str.to.re "W") (str.to.re "X") (str.to.re "Y")))) (re.opt (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")))) (re.range "0" "9") ((_ re.loop 2 2) (re.union (str.to.re "A") (str.to.re "B") (re.range "D" "H") (str.to.re "J") (str.to.re "L") (str.to.re "N") (re.range "P" "U") (re.range "W" "Z")))) (re.++ (str.to.re "\x0aGIR") (re.opt (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "0AA"))))))
; eveocczmthmmq\x2fomzl\d\x2Fasp\x2Foffers\.asp\?
(assert (not (str.in.re X (re.++ (str.to.re "eveocczmthmmq/omzl") (re.range "0" "9") (str.to.re "/asp/offers.asp?\x0a")))))
; dll\x3F\w+updates\w+Host\x3aSoftwareHost\x3Ajoke
(assert (not (str.in.re X (re.++ (str.to.re "dll?") (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re "updates") (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re "Host:SoftwareHost:joke\x0a")))))
(check-sat)
