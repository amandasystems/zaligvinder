(declare-const X String)
; [p|P][\s]*[o|O][\s]*[b|B][\s]*[o|O][\s]*[x|X][\s]*[a-zA-Z0-9]*|\b[P|p]+(OST|ost|o|O)?\.?\s*[O|o|0]+(ffice|FFICE)?\.?\s*[B|b][O|o|0]?[X|x]+\.?\s+[#]?(\d+)*(\D+)*\b
(assert (str.in.re X (re.union (re.++ (re.union (str.to.re "p") (str.to.re "|") (str.to.re "P")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.union (str.to.re "o") (str.to.re "|") (str.to.re "O")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.union (str.to.re "b") (str.to.re "|") (str.to.re "B")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.union (str.to.re "o") (str.to.re "|") (str.to.re "O")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.union (str.to.re "x") (str.to.re "|") (str.to.re "X")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.+ (re.union (str.to.re "P") (str.to.re "|") (str.to.re "p"))) (re.opt (re.union (str.to.re "OST") (str.to.re "ost") (str.to.re "o") (str.to.re "O"))) (re.opt (str.to.re ".")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.+ (re.union (str.to.re "O") (str.to.re "|") (str.to.re "o") (str.to.re "0"))) (re.opt (re.union (str.to.re "ffice") (str.to.re "FFICE"))) (re.opt (str.to.re ".")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.union (str.to.re "B") (str.to.re "|") (str.to.re "b")) (re.opt (re.union (str.to.re "O") (str.to.re "|") (str.to.re "o") (str.to.re "0"))) (re.+ (re.union (str.to.re "X") (str.to.re "|") (str.to.re "x"))) (re.opt (str.to.re ".")) (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.opt (str.to.re "#")) (re.* (re.+ (re.range "0" "9"))) (re.* (re.+ (re.comp (re.range "0" "9")))) (str.to.re "\x0a")))))
; ^(((2|8|9)\d{2})|((02|08|09)\d{2})|([1-9]\d{3}))$
(assert (not (str.in.re X (re.++ (re.union (re.++ (re.union (str.to.re "2") (str.to.re "8") (str.to.re "9")) ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (str.to.re "0") (re.union (str.to.re "2") (str.to.re "8") (str.to.re "9"))) (re.++ (re.range "1" "9") ((_ re.loop 3 3) (re.range "0" "9")))) (str.to.re "\x0a")))))
; /^\s*(http[s]*\:\/\/)?([wwW]{3}\.)+[a-zA-Z0-9]+\.[a-zA-Z]{2,3}.*$|^http[s]*\:\/\/[^w]{3}[a-zA-Z0-9]+\.[a-zA-Z]{2,3}.*$|http[s]*\:\/\/[0-9]{2,3}\.[0-9]{2,3}\.[0-9]{2,3}\.[0-9]{2,3}.*$/;
(assert (str.in.re X (re.union (re.++ (str.to.re "/") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.opt (re.++ (str.to.re "http") (re.* (str.to.re "s")) (str.to.re "://"))) (re.+ (re.++ ((_ re.loop 3 3) (re.union (str.to.re "w") (str.to.re "W"))) (str.to.re "."))) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9"))) (str.to.re ".") ((_ re.loop 2 3) (re.union (re.range "a" "z") (re.range "A" "Z"))) (re.* re.allchar)) (re.++ (str.to.re "http") (re.* (str.to.re "s")) (str.to.re "://") ((_ re.loop 3 3) (re.comp (str.to.re "w"))) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9"))) (str.to.re ".") ((_ re.loop 2 3) (re.union (re.range "a" "z") (re.range "A" "Z"))) (re.* re.allchar)) (re.++ (str.to.re "http") (re.* (str.to.re "s")) (str.to.re "://") ((_ re.loop 2 3) (re.range "0" "9")) (str.to.re ".") ((_ re.loop 2 3) (re.range "0" "9")) (str.to.re ".") ((_ re.loop 2 3) (re.range "0" "9")) (str.to.re ".") ((_ re.loop 2 3) (re.range "0" "9")) (re.* re.allchar) (str.to.re "/;\x0a")))))
(check-sat)
