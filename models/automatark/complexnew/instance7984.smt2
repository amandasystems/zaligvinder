(declare-const X String)
; myInstance\.myMethod(.*)\(.*myParam.*\)
(assert (str.in.re X (re.++ (str.to.re "myInstance.myMethod") (re.* re.allchar) (str.to.re "(") (re.* re.allchar) (str.to.re "myParam") (re.* re.allchar) (str.to.re ")\x0a"))))
; (^0[87][23467]((\d{7})|( |-)((\d{3}))( |-)(\d{4})|( |-)(\d{7})))
(assert (str.in.re X (re.++ (str.to.re "\x0a0") (re.union (str.to.re "8") (str.to.re "7")) (re.union (str.to.re "2") (str.to.re "3") (str.to.re "4") (str.to.re "6") (str.to.re "7")) (re.union ((_ re.loop 7 7) (re.range "0" "9")) (re.++ (re.union (str.to.re " ") (str.to.re "-")) ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re " ") (str.to.re "-")) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (re.union (str.to.re " ") (str.to.re "-")) ((_ re.loop 7 7) (re.range "0" "9")))))))
; ^[A-Za-z]:\\([^"*/:?|<>\\.\x00-\x20]([^"*/:?|<>\\\x00-\x1F]*[^"*/:?|<>\\.\x00-\x20])?\\)*$
(assert (not (str.in.re X (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (str.to.re ":\x5c") (re.* (re.++ (re.union (str.to.re "\x22") (str.to.re "*") (str.to.re "/") (str.to.re ":") (str.to.re "?") (str.to.re "|") (str.to.re "<") (str.to.re ">") (str.to.re "\x5c") (str.to.re ".") (re.range "\x00" " ")) (re.opt (re.++ (re.* (re.union (str.to.re "\x22") (str.to.re "*") (str.to.re "/") (str.to.re ":") (str.to.re "?") (str.to.re "|") (str.to.re "<") (str.to.re ">") (str.to.re "\x5c") (re.range "\x00" "\x1f"))) (re.union (str.to.re "\x22") (str.to.re "*") (str.to.re "/") (str.to.re ":") (str.to.re "?") (str.to.re "|") (str.to.re "<") (str.to.re ">") (str.to.re "\x5c") (str.to.re ".") (re.range "\x00" " ")))) (str.to.re "\x5c"))) (str.to.re "\x0a")))))
; ^(([0]{0,1})([1-9]{1})([0-9]{2})){1}([\ ]{0,1})((([0-9]{3})([\ ]{0,1})([0-9]{3}))|(([0-9]{2})([\ ]{0,1})([0-9]{2})([\ ]{0,1})([0-9]{2})))$
(assert (str.in.re X (re.++ ((_ re.loop 1 1) (re.++ (re.opt (str.to.re "0")) ((_ re.loop 1 1) (re.range "1" "9")) ((_ re.loop 2 2) (re.range "0" "9")))) (re.opt (str.to.re " ")) (re.union (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (str.to.re " ")) ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (str.to.re " ")) ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (str.to.re " ")) ((_ re.loop 2 2) (re.range "0" "9")))) (str.to.re "\x0a"))))
; adblock\x2Elinkz\x2Ecomwww\.iggsey\.comHost\x3A
(assert (not (str.in.re X (str.to.re "adblock.linkz.comwww.iggsey.comHost:\x0a"))))
(check-sat)
