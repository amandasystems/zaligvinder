(declare-const X String)
; /[^\x0d\x0a\x09\x20-\x7e]{4}/P
(assert (not (str.in.re X (re.++ (str.to.re "/") ((_ re.loop 4 4) (re.union (str.to.re "\x0d") (str.to.re "\x0a") (str.to.re "\x09") (re.range " " "~"))) (str.to.re "/P\x0a")))))
; /\x2edcr([\?\x5c\x2f]|$)/smiU
(assert (str.in.re X (re.++ (str.to.re "/.dcr") (re.union (str.to.re "?") (str.to.re "\x5c") (str.to.re "/")) (str.to.re "/smiU\x0a"))))
; (http):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+(\\.[\\w\\-_]+)(\\/)([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#]+)(\\/)((\\d{8}-)|(\\d{9}-)|(\\d{10}-)|(\\d{11}-))+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?+html^])?
(assert (str.in.re X (re.++ (str.to.re "http:\x5c/\x5c/") (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "_"))) (re.+ (re.++ (str.to.re "\x5c") re.allchar (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "_"))))) (str.to.re "\x5c/\x5c/") (re.+ (re.union (re.++ (str.to.re "\x5c") ((_ re.loop 8 8) (str.to.re "d")) (str.to.re "-")) (re.++ (str.to.re "\x5c") ((_ re.loop 9 9) (str.to.re "d")) (str.to.re "-")) (re.++ (str.to.re "\x5c") ((_ re.loop 10 10) (str.to.re "d")) (str.to.re "-")) (re.++ (str.to.re "\x5c") ((_ re.loop 11 11) (str.to.re "d")) (str.to.re "-")))) (re.opt (re.++ (re.* (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re ".") (str.to.re ",") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re ":") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#"))) (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re "@") (str.to.re "?") (str.to.re "+") (str.to.re "h") (str.to.re "t") (str.to.re "m") (str.to.re "l") (str.to.re "^")))) (str.to.re "\x0a\x5c") re.allchar (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "_"))) (re.* (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re ".") (str.to.re ",") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re ":") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#"))) (re.+ (re.union (str.to.re "\x5c") (str.to.re "w") (re.range "\x5c" "\x5c") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#"))))))
; ^\d{4}(\/|-)([0][1-9]|[1][0-2])(\/|-)([0][1-9]|[1-2][0-9]|[3][0-1])$
(assert (not (str.in.re X (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.union (str.to.re "/") (str.to.re "-")) (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "2"))) (re.union (str.to.re "/") (str.to.re "-")) (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.range "1" "2") (re.range "0" "9")) (re.++ (str.to.re "3") (re.range "0" "1"))) (str.to.re "\x0a")))))
; href\s*=\s*\"((\/)([i])(\/)+([\w\-\.,@?^=%&:/~\+#]*[\w\-\@?^=%&/~\+#]+)*)\"
(assert (str.in.re X (re.++ (str.to.re "href") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "=") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "\x22\x22\x0a/i") (re.+ (str.to.re "/")) (re.* (re.++ (re.* (re.union (str.to.re "-") (str.to.re ".") (str.to.re ",") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re ":") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (re.+ (re.union (str.to.re "-") (str.to.re "@") (str.to.re "?") (str.to.re "^") (str.to.re "=") (str.to.re "%") (str.to.re "&") (str.to.re "/") (str.to.re "~") (str.to.re "+") (str.to.re "#") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))))))
(check-sat)
