(declare-const X String)
; ((DK|FI|HU|LU|MT|SI)(-)?\d{8})|((BE|EE|DE|EL|LT|PT)(-)?\d{9})|((PL|SK)(-)?\d{10})|((IT|LV)(-)?\d{11})|((LT|SE)(-)?\d{12})|(AT(-)?U\d{8})|(CY(-)?\d{8}[A-Z])|(CZ(-)?\d{8,10})|(FR(-)?[\dA-HJ-NP-Z]{2}\d{9})|(IE(-)?\d[A-Z\d]\d{5}[A-Z])|(NL(-)?\d{9}B\d{2})|(ES(-)?[A-Z\d]\d{7}[A-Z\d])
(assert (not (str.in.re X (re.union (re.++ (re.union (str.to.re "DK") (str.to.re "FI") (str.to.re "HU") (str.to.re "LU") (str.to.re "MT") (str.to.re "SI")) (re.opt (str.to.re "-")) ((_ re.loop 8 8) (re.range "0" "9"))) (re.++ (re.union (str.to.re "BE") (str.to.re "EE") (str.to.re "DE") (str.to.re "EL") (str.to.re "LT") (str.to.re "PT")) (re.opt (str.to.re "-")) ((_ re.loop 9 9) (re.range "0" "9"))) (re.++ (re.union (str.to.re "PL") (str.to.re "SK")) (re.opt (str.to.re "-")) ((_ re.loop 10 10) (re.range "0" "9"))) (re.++ (re.union (str.to.re "IT") (str.to.re "LV")) (re.opt (str.to.re "-")) ((_ re.loop 11 11) (re.range "0" "9"))) (re.++ (re.union (str.to.re "LT") (str.to.re "SE")) (re.opt (str.to.re "-")) ((_ re.loop 12 12) (re.range "0" "9"))) (re.++ (str.to.re "AT") (re.opt (str.to.re "-")) (str.to.re "U") ((_ re.loop 8 8) (re.range "0" "9"))) (re.++ (str.to.re "CY") (re.opt (str.to.re "-")) ((_ re.loop 8 8) (re.range "0" "9")) (re.range "A" "Z")) (re.++ (str.to.re "CZ") (re.opt (str.to.re "-")) ((_ re.loop 8 10) (re.range "0" "9"))) (re.++ (str.to.re "FR") (re.opt (str.to.re "-")) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "A" "H") (re.range "J" "N") (re.range "P" "Z"))) ((_ re.loop 9 9) (re.range "0" "9"))) (re.++ (str.to.re "IE") (re.opt (str.to.re "-")) (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "0" "9")) ((_ re.loop 5 5) (re.range "0" "9")) (re.range "A" "Z")) (re.++ (str.to.re "NL") (re.opt (str.to.re "-")) ((_ re.loop 9 9) (re.range "0" "9")) (str.to.re "B") ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ (str.to.re "\x0aES") (re.opt (str.to.re "-")) (re.union (re.range "A" "Z") (re.range "0" "9")) ((_ re.loop 7 7) (re.range "0" "9")) (re.union (re.range "A" "Z") (re.range "0" "9")))))))
; ^(((((((0?[13578])|(1[02]))[\.\-/]?((0?[1-9])|([12]\d)|(3[01])))|(((0?[469])|(11))[\.\-/]?((0?[1-9])|([12]\d)|(30)))|((0?2)[\.\-/]?((0?[1-9])|(1\d)|(2[0-8]))))[\.\-/]?(((19)|(20))?([\d][\d]))))|((0?2)[\.\-/]?(29)[\.\-/]?(((19)|(20))?(([02468][048])|([13579][26])))))$
(assert (not (str.in.re X (re.++ (re.union (re.++ (re.union (re.++ (re.union (re.++ (re.opt (str.to.re "0")) (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "8"))) (re.++ (str.to.re "1") (re.union (str.to.re "0") (str.to.re "2")))) (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re "/"))) (re.union (re.++ (re.opt (str.to.re "0")) (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (re.++ (str.to.re "3") (re.union (str.to.re "0") (str.to.re "1"))))) (re.++ (re.union (re.++ (re.opt (str.to.re "0")) (re.union (str.to.re "4") (str.to.re "6") (str.to.re "9"))) (str.to.re "11")) (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re "/"))) (re.union (re.++ (re.opt (str.to.re "0")) (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (str.to.re "30"))) (re.++ (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re "/"))) (re.union (re.++ (re.opt (str.to.re "0")) (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "8"))) (re.opt (str.to.re "0")) (str.to.re "2"))) (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re "/"))) (re.opt (re.union (str.to.re "19") (str.to.re "20"))) (re.range "0" "9") (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re "/"))) (str.to.re "29") (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re "/"))) (re.opt (str.to.re "0")) (str.to.re "2") (re.opt (re.union (str.to.re "19") (str.to.re "20"))) (re.union (re.++ (re.union (str.to.re "0") (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8")) (re.union (str.to.re "0") (str.to.re "4") (str.to.re "8"))) (re.++ (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "9")) (re.union (str.to.re "2") (str.to.re "6")))))) (str.to.re "\x0a")))))
; ServerHost\x3Atid\x3D\x25toolbar\x5Fidcomtrustyfiles\x2Ecom
(assert (str.in.re X (str.to.re "ServerHost:tid=%toolbar_idcomtrustyfiles.com\x0a")))
; [1-8][0-9]{2}[0-9]{5}
(assert (not (str.in.re X (re.++ (re.range "1" "8") ((_ re.loop 2 2) (re.range "0" "9")) ((_ re.loop 5 5) (re.range "0" "9")) (str.to.re "\x0a")))))
(check-sat)
