(declare-const X String)
; ^([a-zA-Z,#/ \.\(\)\-\+\*]*[2-9])([a-zA-Z,#/ \.\(\)\-\+\*]*[0-9]){2}([a-zA-Z,#/ \.\(\)\-\+\*]*[2-9])([a-zA-Z,#/ \.\(\)\-\+\*]*[0-9]){6}[0-9a-zA-Z,#/ \.\(\)\-\+\*]*$
(assert (not (str.in.re X (re.++ ((_ re.loop 2 2) (re.++ (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "0" "9"))) ((_ re.loop 6 6) (re.++ (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "0" "9"))) (re.* (re.union (re.range "0" "9") (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (str.to.re "\x0a") (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "2" "9") (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (str.to.re ",") (str.to.re "#") (str.to.re "/") (str.to.re " ") (str.to.re ".") (str.to.re "(") (str.to.re ")") (str.to.re "-") (str.to.re "+") (str.to.re "*"))) (re.range "2" "9")))))
; ^\d+((\.|\,)\d+)?$
(assert (not (str.in.re X (re.++ (re.+ (re.range "0" "9")) (re.opt (re.++ (re.union (str.to.re ".") (str.to.re ",")) (re.+ (re.range "0" "9")))) (str.to.re "\x0a")))))
; ^(1\s*[-\/\.]?)?(\((\d{3})\)|(\d{3}))\s*[-\/\.]?\s*(\d{3})\s*[-\/\.]?\s*(\d{4})\s*(([xX]|[eE][xX][tT])\.?\s*(\d+))*$
(assert (not (str.in.re X (re.++ (re.opt (re.++ (str.to.re "1") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.opt (re.union (str.to.re "-") (str.to.re "/") (str.to.re "."))))) (re.union (re.++ (str.to.re "(") ((_ re.loop 3 3) (re.range "0" "9")) (str.to.re ")")) ((_ re.loop 3 3) (re.range "0" "9"))) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.opt (re.union (str.to.re "-") (str.to.re "/") (str.to.re "."))) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.opt (re.union (str.to.re "-") (str.to.re "/") (str.to.re "."))) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) ((_ re.loop 4 4) (re.range "0" "9")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.* (re.++ (re.union (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))) (str.to.re "x") (str.to.re "X")) (re.opt (str.to.re ".")) (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.+ (re.range "0" "9")))) (str.to.re "\x0a")))))
; /filename=[^\n]*\x2easx/i
(assert (str.in.re X (re.++ (str.to.re "/filename=") (re.* (re.comp (str.to.re "\x0a"))) (str.to.re ".asx/i\x0a"))))
; \x2FGR\s+\x2APORT3\x2A\d+Host\x3A
(assert (str.in.re X (re.++ (str.to.re "/GR") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "*PORT3*") (re.+ (re.range "0" "9")) (str.to.re "Host:\x0a"))))
(check-sat)
