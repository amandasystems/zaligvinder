(declare-const X String)
; ^((([A-PR-UWYZ])([0-9][0-9A-HJKS-UW]?))|(([A-PR-UWYZ][A-HK-Y])([0-9][0-9ABEHMNPRV-Y]?))\s{0,2}(([0-9])([ABD-HJLNP-UW-Z])([ABD-HJLNP-UW-Z])))|(((GI)(R))\s{0,2}((0)(A)(A)))$
(assert (not (str.in.re X (re.union (re.++ (str.to.re "\x0aGIR") ((_ re.loop 0 2) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "0AA")) (re.++ (re.union (re.range "A" "P") (re.range "R" "U") (str.to.re "W") (str.to.re "Y") (str.to.re "Z")) (re.range "0" "9") (re.opt (re.union (re.range "0" "9") (re.range "A" "H") (str.to.re "J") (str.to.re "K") (re.range "S" "U") (str.to.re "W")))) (re.++ ((_ re.loop 0 2) (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.union (re.range "A" "P") (re.range "R" "U") (str.to.re "W") (str.to.re "Y") (str.to.re "Z")) (re.union (re.range "A" "H") (re.range "K" "Y")) (re.range "0" "9") (re.opt (re.union (re.range "0" "9") (str.to.re "A") (str.to.re "B") (str.to.re "E") (str.to.re "H") (str.to.re "M") (str.to.re "N") (str.to.re "P") (str.to.re "R") (re.range "V" "Y"))) (re.range "0" "9") (re.union (str.to.re "A") (str.to.re "B") (re.range "D" "H") (str.to.re "J") (str.to.re "L") (str.to.re "N") (re.range "P" "U") (re.range "W" "Z")) (re.union (str.to.re "A") (str.to.re "B") (re.range "D" "H") (str.to.re "J") (str.to.re "L") (str.to.re "N") (re.range "P" "U") (re.range "W" "Z")))))))
; c\.goclick\.com\s+URLBlaze\s+Host\x3A
(assert (str.in.re X (re.++ (str.to.re "c.goclick.com") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "URLBlaze") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "Host:\x0a"))))
; ^0(((1[0-9]{2}[ -]?[0-9]{3}[ -]?[0-9]{4})|(1[0-9]{3}[ -]?[0-9]{6})|(1[0-9]{4}[ -]?[0-9]{4,5}))|((1[0-9]1)|(11[0-9]))[ -]?[0-9]{3}[ -]?[0-9]{4}|(2[0-9][ -]?[0-9]{4}[ -]?[0-9]{4})|((20[ -]?[0-9]{4})|(23[ -]?[8,9][0-9]{3})|(24[ -]?7[0-9]{3})|(28[ -]?(25|28|37|71|82|90|92|95)[0-9]{2})|(29[ -]?2[0-9]))[ -]?[0-9]{4}|(7[4-9][0-9]{2}[ -]?[0-9]{6})|((3[0,3,4,7][0-9])[ -]?[0-9]{3}[ -]?[0-9]{4})|((5[5,6][ -]?[0-9]{4}[ -]?[0-9]{4})|(500[ -]?[0-9]{3}[ -]?[0-9]{4}))|(8[0247][0-9]{1}[ -]?[0-9]{3}[ -]?[0-9]{4})|(9[0-9]{2}[ -]?[0-9]{3}[ -]?[0-9]{4}))$
(assert (str.in.re X (re.++ (str.to.re "0") (re.union (re.++ (re.union (re.++ (str.to.re "1") (re.range "0" "9") (str.to.re "1")) (re.++ (str.to.re "11") (re.range "0" "9"))) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "2") (re.range "0" "9") (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (re.union (re.++ (str.to.re "20") (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "23") (re.opt (re.union (str.to.re " ") (str.to.re "-"))) (re.union (str.to.re "8") (str.to.re ",") (str.to.re "9")) ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ (str.to.re "24") (re.opt (re.union (str.to.re " ") (str.to.re "-"))) (str.to.re "7") ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ (str.to.re "28") (re.opt (re.union (str.to.re " ") (str.to.re "-"))) (re.union (str.to.re "25") (str.to.re "28") (str.to.re "37") (str.to.re "71") (str.to.re "82") (str.to.re "90") (str.to.re "92") (str.to.re "95")) ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ (str.to.re "29") (re.opt (re.union (str.to.re " ") (str.to.re "-"))) (str.to.re "2") (re.range "0" "9"))) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "7") (re.range "4" "9") ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 6 6) (re.range "0" "9"))) (re.++ (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "3") (re.union (str.to.re "0") (str.to.re ",") (str.to.re "3") (str.to.re "4") (str.to.re "7")) (re.range "0" "9")) (re.++ (str.to.re "8") (re.union (str.to.re "0") (str.to.re "2") (str.to.re "4") (str.to.re "7")) ((_ re.loop 1 1) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "9") ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "1") ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "1") ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 6 6) (re.range "0" "9"))) (re.++ (str.to.re "1") ((_ re.loop 4 4) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 5) (re.range "0" "9"))) (re.++ (str.to.re "5") (re.union (str.to.re "5") (str.to.re ",") (str.to.re "6")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "500") (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (re.union (str.to.re " ") (str.to.re "-"))) ((_ re.loop 4 4) (re.range "0" "9")))) (str.to.re "\x0a"))))
; /filename=[^\n]*\x2esami/i
(assert (not (str.in.re X (re.++ (str.to.re "/filename=") (re.* (re.comp (str.to.re "\x0a"))) (str.to.re ".sami/i\x0a")))))
; ^.*([^\.][\.](([gG][iI][fF])|([Jj][pP][Gg])|([Jj][pP][Ee][Gg])|([Bb][mM][pP])|([Pp][nN][Gg])))
(assert (str.in.re X (re.++ (re.* re.allchar) (str.to.re "\x0a") (re.comp (str.to.re ".")) (str.to.re ".") (re.union (re.++ (re.union (str.to.re "g") (str.to.re "G")) (re.union (str.to.re "i") (str.to.re "I")) (re.union (str.to.re "f") (str.to.re "F"))) (re.++ (re.union (str.to.re "J") (str.to.re "j")) (re.union (str.to.re "p") (str.to.re "P")) (re.union (str.to.re "G") (str.to.re "g"))) (re.++ (re.union (str.to.re "J") (str.to.re "j")) (re.union (str.to.re "p") (str.to.re "P")) (re.union (str.to.re "E") (str.to.re "e")) (re.union (str.to.re "G") (str.to.re "g"))) (re.++ (re.union (str.to.re "B") (str.to.re "b")) (re.union (str.to.re "m") (str.to.re "M")) (re.union (str.to.re "p") (str.to.re "P"))) (re.++ (re.union (str.to.re "P") (str.to.re "p")) (re.union (str.to.re "n") (str.to.re "N")) (re.union (str.to.re "G") (str.to.re "g")))))))
(check-sat)
