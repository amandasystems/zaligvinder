(declare-const X String)
; www\x2Ealtnet\x2EcomHost\x3ANSIS_DOWNLOADSubject\x3AUser-Agent\x3Awww\x2Esearchingall\x2Ecom
(assert (str.in.re X (str.to.re "www.altnet.com\x1bHost:NSIS_DOWNLOADSubject:User-Agent:www.searchingall.com\x0a")))
; ^((http|HTTP|https|HTTPS|ftp|FTP?)\:\/\/)?((www|WWW)+\.)+(([0-9]{1,3}){3}[0-9]{1,3}\.|([\w!~*'()-]+\.)*([\w^-][\w-]{0,61})?[\w]\.[a-z]{2,6})(:[0-9]{1,4})?((\/*)|(\/+[\w!~*'().;?:@&=+$,%#-]+)+\/*)$
(assert (str.in.re X (re.++ (re.opt (re.++ (re.union (str.to.re "http") (str.to.re "HTTP") (str.to.re "https") (str.to.re "HTTPS") (str.to.re "ftp") (re.++ (str.to.re "FT") (re.opt (str.to.re "P")))) (str.to.re "://"))) (re.+ (re.++ (re.+ (re.union (str.to.re "www") (str.to.re "WWW"))) (str.to.re "."))) (re.union (re.++ ((_ re.loop 3 3) ((_ re.loop 1 3) (re.range "0" "9"))) ((_ re.loop 1 3) (re.range "0" "9")) (str.to.re ".")) (re.++ (re.* (re.++ (re.+ (re.union (str.to.re "!") (str.to.re "~") (str.to.re "*") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))) (str.to.re "."))) (re.opt (re.++ (re.union (str.to.re "^") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) ((_ re.loop 0 61) (re.union (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))) (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_")) (str.to.re ".") ((_ re.loop 2 6) (re.range "a" "z")))) (re.opt (re.++ (str.to.re ":") ((_ re.loop 1 4) (re.range "0" "9")))) (re.union (re.* (str.to.re "/")) (re.++ (re.+ (re.++ (re.+ (str.to.re "/")) (re.+ (re.union (str.to.re "!") (str.to.re "~") (str.to.re "*") (str.to.re "'") (str.to.re "(") (str.to.re ")") (str.to.re ".") (str.to.re ";") (str.to.re "?") (str.to.re ":") (str.to.re "@") (str.to.re "&") (str.to.re "=") (str.to.re "+") (str.to.re "$") (str.to.re ",") (str.to.re "%") (str.to.re "#") (str.to.re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to.re "_"))))) (re.* (str.to.re "/")))) (str.to.re "\x0a"))))
; ^[+-]? *100(\.0{0,2})? *%?$|^[+-]? *\d{1,2}(\.\d{1,2})? *%?$
(assert (not (str.in.re X (re.union (re.++ (re.opt (re.union (str.to.re "+") (str.to.re "-"))) (re.* (str.to.re " ")) (str.to.re "100") (re.opt (re.++ (str.to.re ".") ((_ re.loop 0 2) (str.to.re "0")))) (re.* (str.to.re " ")) (re.opt (str.to.re "%"))) (re.++ (re.opt (re.union (str.to.re "+") (str.to.re "-"))) (re.* (str.to.re " ")) ((_ re.loop 1 2) (re.range "0" "9")) (re.opt (re.++ (str.to.re ".") ((_ re.loop 1 2) (re.range "0" "9")))) (re.* (str.to.re " ")) (re.opt (str.to.re "%")) (str.to.re "\x0a"))))))
; /\x2epcx([\x3f\x2f]|$)/Uim
(assert (not (str.in.re X (re.++ (str.to.re "/.pcx") (re.union (str.to.re "?") (str.to.re "/")) (str.to.re "/Uim\x0a")))))
(check-sat)
