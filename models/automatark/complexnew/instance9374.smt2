(declare-const X String)
; ^[0][5][0]-\d{7}|[0][5][2]-\d{7}|[0][5][4]-\d{7}|[0][5][7]-\d{7}|[0][7][7]-\d{7}|[0][2]-\d{7}|[0][3]-\d{7}|[0][4]-\d{7}|[0][8]-\d{7}|[0][9]-\d{7}|[0][5][0]\d{7}|[0][5][2]\d{7}|[0][5][4]\d{7}|[0][5][7]\d{7}|[0][7][7]\d{7}|[0][2]\d{7}|[0][3]\d{7}|[0][4]\d{7}|[0][8]\d{7}|[0][9]\d{7}$
(assert (str.in.re X (re.union (re.++ (str.to.re "050-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "052-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "054-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "057-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "077-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "02-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "03-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "04-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "08-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "09-") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "050") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "052") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "054") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "057") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "077") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "02") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "03") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "04") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "08") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "09") ((_ re.loop 7 7) (re.range "0" "9")) (str.to.re "\x0a")))))
; /^\/[a-f0-9]{32}\/[0-9]$/Ui
(assert (not (str.in.re X (re.++ (str.to.re "//") ((_ re.loop 32 32) (re.union (re.range "a" "f") (re.range "0" "9"))) (str.to.re "/") (re.range "0" "9") (str.to.re "/Ui\x0a")))))
(check-sat)
