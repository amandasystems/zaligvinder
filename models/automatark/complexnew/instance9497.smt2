(declare-const X String)
; ^(([1-9][0-9]{0,3}|[1-4][0-9]{4}|5([0-8][0-9]{3}|9([0-2][0-9]{2}|3([0-8][0-9]|9[01]))))|(6(4(5(1[2-9]|[2-9][0-9])|[6-9][0-9]{2})|5([0-4][0-9]{2}|5([0-2][0-9]|3[0-4]))))|(1(3(1(0(7[2-9]|[89][0-9])|[1-9][0-9]{2})|[2-9][0-9]{3})|[4-9][0-9]{4})|[2-9][0-9]{5}|[1-9][0-9]{6,8}|[1-3][0-9]{9}|4([01][0-9]{8}|2([0-8][0-9]{7}|9([0-3][0-9]{6}|4([0-8][0-9]{5}|9([0-5][0-9]{4}|6([0-6][0-9]{3}|7([01][0-9]{2}|2([0-8][0-9]|9[0-4]))))))))))$
(assert (str.in.re X (re.++ (re.union (re.++ (str.to.re "6") (re.union (re.++ (str.to.re "4") (re.union (re.++ (str.to.re "5") (re.union (re.++ (str.to.re "1") (re.range "2" "9")) (re.++ (re.range "2" "9") (re.range "0" "9")))) (re.++ (re.range "6" "9") ((_ re.loop 2 2) (re.range "0" "9"))))) (re.++ (str.to.re "5") (re.union (re.++ (re.range "0" "4") ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ (str.to.re "5") (re.union (re.++ (re.range "0" "2") (re.range "0" "9")) (re.++ (str.to.re "3") (re.range "0" "4")))))))) (re.++ (re.range "1" "9") ((_ re.loop 0 3) (re.range "0" "9"))) (re.++ (re.range "1" "4") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "5") (re.union (re.++ (re.range "0" "8") ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ (str.to.re "9") (re.union (re.++ (re.range "0" "2") ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ (str.to.re "3") (re.union (re.++ (re.range "0" "8") (re.range "0" "9")) (re.++ (str.to.re "9") (re.union (str.to.re "0") (str.to.re "1"))))))))) (re.++ (str.to.re "1") (re.union (re.++ (str.to.re "3") (re.union (re.++ (str.to.re "1") (re.union (re.++ (str.to.re "0") (re.union (re.++ (str.to.re "7") (re.range "2" "9")) (re.++ (re.union (str.to.re "8") (str.to.re "9")) (re.range "0" "9")))) (re.++ (re.range "1" "9") ((_ re.loop 2 2) (re.range "0" "9"))))) (re.++ (re.range "2" "9") ((_ re.loop 3 3) (re.range "0" "9"))))) (re.++ (re.range "4" "9") ((_ re.loop 4 4) (re.range "0" "9"))))) (re.++ (re.range "2" "9") ((_ re.loop 5 5) (re.range "0" "9"))) (re.++ (re.range "1" "9") ((_ re.loop 6 8) (re.range "0" "9"))) (re.++ (re.range "1" "3") ((_ re.loop 9 9) (re.range "0" "9"))) (re.++ (str.to.re "4") (re.union (re.++ (re.union (str.to.re "0") (str.to.re "1")) ((_ re.loop 8 8) (re.range "0" "9"))) (re.++ (str.to.re "2") (re.union (re.++ (re.range "0" "8") ((_ re.loop 7 7) (re.range "0" "9"))) (re.++ (str.to.re "9") (re.union (re.++ (re.range "0" "3") ((_ re.loop 6 6) (re.range "0" "9"))) (re.++ (str.to.re "4") (re.union (re.++ (re.range "0" "8") ((_ re.loop 5 5) (re.range "0" "9"))) (re.++ (str.to.re "9") (re.union (re.++ (re.range "0" "5") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "6") (re.union (re.++ (re.range "0" "6") ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ (str.to.re "7") (re.union (re.++ (re.union (str.to.re "0") (str.to.re "1")) ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ (str.to.re "2") (re.union (re.++ (re.range "0" "8") (re.range "0" "9")) (re.++ (str.to.re "9") (re.range "0" "4"))))))))))))))))))) (str.to.re "\x0a"))))
; /\/html\/license_[0-9A-F]{550,}\.html$/Ui
(assert (str.in.re X (re.++ (str.to.re "//html/license_.html/Ui\x0a") ((_ re.loop 550 550) (re.union (re.range "0" "9") (re.range "A" "F"))) (re.* (re.union (re.range "0" "9") (re.range "A" "F"))))))
; /filename\s*=\s*[^\r\n]*?\x2emcl[\x22\x27\x3b\s\r\n]/i
(assert (str.in.re X (re.++ (str.to.re "/filename") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "=") (re.* (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (re.* (re.union (str.to.re "\x0d") (str.to.re "\x0a"))) (str.to.re ".mcl") (re.union (str.to.re "\x22") (str.to.re "'") (str.to.re ";") (str.to.re "\x0d") (str.to.re "\x0a") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) (str.to.re "/i\x0a"))))
(check-sat)
