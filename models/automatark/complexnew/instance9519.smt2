(declare-const X String)
; /[^\n -~\r]{4}/P
(assert (str.in.re X (re.++ (str.to.re "/") ((_ re.loop 4 4) (re.union (str.to.re "\x0a") (re.range " " "~") (str.to.re "\x0d"))) (str.to.re "/P\x0a"))))
; /^\/\d+\/\d\.zip$/U
(assert (not (str.in.re X (re.++ (str.to.re "//") (re.+ (re.range "0" "9")) (str.to.re "/") (re.range "0" "9") (str.to.re ".zip/U\x0a")))))
; ad\x2Esearchsquire\x2Ecom[^\n\r]*User-Agent\x3A
(assert (not (str.in.re X (re.++ (str.to.re "ad.searchsquire.com") (re.* (re.union (str.to.re "\x0a") (str.to.re "\x0d"))) (str.to.re "User-Agent:\x0a")))))
; (((ht|f)tp(s?):\/\/)|(www\.[^ \[\]\(\)\n\r\t]+)|(([012]?[0-9]{1,2}\.){3}[012]?[0-9]{1,2})\/)([^ \[\]\(\),;"'<>\n\r\t]+)([^\. \[\]\(\),;"'<>\n\r\t])|(([012]?[0-9]{1,2}\.){3}[012]?[0-9]{1,2})
(assert (str.in.re X (re.union (re.++ (re.union (re.++ (re.union (str.to.re "ht") (str.to.re "f")) (str.to.re "tp") (re.opt (str.to.re "s")) (str.to.re "://")) (re.++ (str.to.re "www.") (re.+ (re.union (str.to.re " ") (str.to.re "[") (str.to.re "]") (str.to.re "(") (str.to.re ")") (str.to.re "\x0a") (str.to.re "\x0d") (str.to.re "\x09")))) (re.++ (str.to.re "/") ((_ re.loop 3 3) (re.++ (re.opt (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2"))) ((_ re.loop 1 2) (re.range "0" "9")) (str.to.re "."))) (re.opt (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2"))) ((_ re.loop 1 2) (re.range "0" "9")))) (re.+ (re.union (str.to.re " ") (str.to.re "[") (str.to.re "]") (str.to.re "(") (str.to.re ")") (str.to.re ",") (str.to.re ";") (str.to.re "\x22") (str.to.re "'") (str.to.re "<") (str.to.re ">") (str.to.re "\x0a") (str.to.re "\x0d") (str.to.re "\x09"))) (re.union (str.to.re ".") (str.to.re " ") (str.to.re "[") (str.to.re "]") (str.to.re "(") (str.to.re ")") (str.to.re ",") (str.to.re ";") (str.to.re "\x22") (str.to.re "'") (str.to.re "<") (str.to.re ">") (str.to.re "\x0a") (str.to.re "\x0d") (str.to.re "\x09"))) (re.++ (str.to.re "\x0a") ((_ re.loop 3 3) (re.++ (re.opt (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2"))) ((_ re.loop 1 2) (re.range "0" "9")) (str.to.re "."))) (re.opt (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2"))) ((_ re.loop 1 2) (re.range "0" "9"))))))
(check-sat)
