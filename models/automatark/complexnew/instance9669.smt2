(declare-const X String)
; (^|\s|\()((([1-9]){1}|([0][1-9]){1}|([1][012]){1}){1}[\/-]((2[0-9]){1}|(3[01]){1}|([01][1-9]){1}|([1-9]){1}){1}[\/-](((19|20)([0-9][0-9]){1}|([0-9][0-9]){1})){1}(([\s|\)|:])|(^|\s|\()((([0-9]){1}|([0][1-9]){1}|([1][012]){1}){1}[\/-](([11-31]){1}|([01][1-9]){1}|([1-9]){1}){1}[\/-](((19|20)([0-9][0-9]){1}|([0-9][0-9]){1})){1}(([\s|\)|:|$|\>])){1}){1}){1}){1}
(assert (not (str.in.re X (re.++ (re.union (str.to.re "(") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 1) (re.++ ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.range "1" "9")) ((_ re.loop 1 1) (re.++ (str.to.re "0") (re.range "1" "9"))) ((_ re.loop 1 1) (re.++ (str.to.re "1") (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2")))))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.++ (str.to.re "2") (re.range "0" "9"))) ((_ re.loop 1 1) (re.++ (str.to.re "3") (re.union (str.to.re "0") (str.to.re "1")))) ((_ re.loop 1 1) (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.range "1" "9"))) ((_ re.loop 1 1) (re.range "1" "9")))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union (re.++ (re.union (str.to.re "19") (str.to.re "20")) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9")))) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9"))))) ((_ re.loop 1 1) (re.union (re.++ (re.union (str.to.re "(") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")) ((_ re.loop 1 1) (re.++ ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.range "0" "9")) ((_ re.loop 1 1) (re.++ (str.to.re "0") (re.range "1" "9"))) ((_ re.loop 1 1) (re.++ (str.to.re "1") (re.union (str.to.re "0") (str.to.re "1") (str.to.re "2")))))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union ((_ re.loop 1 1) (re.union (str.to.re "1") (re.range "1" "3"))) ((_ re.loop 1 1) (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.range "1" "9"))) ((_ re.loop 1 1) (re.range "1" "9")))) (re.union (str.to.re "/") (str.to.re "-")) ((_ re.loop 1 1) (re.union (re.++ (re.union (str.to.re "19") (str.to.re "20")) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9")))) ((_ re.loop 1 1) (re.++ (re.range "0" "9") (re.range "0" "9"))))) ((_ re.loop 1 1) (re.union (str.to.re "|") (str.to.re ")") (str.to.re ":") (str.to.re "$") (str.to.re ">") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d")))))) (str.to.re "|") (str.to.re ")") (str.to.re ":") (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))))) (str.to.re "\x0a")))))
; User-Agent\x3a\s+sErver\s+-~-GREATHost\x3a
(assert (not (str.in.re X (re.++ (str.to.re "User-Agent:") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "sErver") (re.+ (re.union (str.to.re " ") (str.to.re "\x09") (str.to.re "\x0a") (str.to.re "\x0c") (str.to.re "\x0d"))) (str.to.re "-~-GREATHost:\x0a")))))
; /filename=[^\n]*\x2ef4a/i
(assert (not (str.in.re X (re.++ (str.to.re "/filename=") (re.* (re.comp (str.to.re "\x0a"))) (str.to.re ".f4a/i\x0a")))))
; ^([0]?[1-9]|[1][0-2]|[2][0-3]):([0-5][0-9]|[1-9])$
(assert (str.in.re X (re.++ (re.union (re.++ (re.opt (str.to.re "0")) (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "2")) (re.++ (str.to.re "2") (re.range "0" "3"))) (str.to.re ":") (re.union (re.++ (re.range "0" "5") (re.range "0" "9")) (re.range "1" "9")) (str.to.re "\x0a"))))
(check-sat)
