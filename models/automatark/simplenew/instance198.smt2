(declare-const X String)
; ^([0-9]{2})(01|02|03|04|05|06|07|08|09|10|11|12|51|52|53|54|55|56|57|58|59|60|61|62)(([0]{1}[1-9]{1})|([1-2]{1}[0-9]{1})|([3]{1}[0-1]{1}))/([0-9]{3,4})$
(assert (not (str.in.re X (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.union (str.to.re "01") (str.to.re "02") (str.to.re "03") (str.to.re "04") (str.to.re "05") (str.to.re "06") (str.to.re "07") (str.to.re "08") (str.to.re "09") (str.to.re "10") (str.to.re "11") (str.to.re "12") (str.to.re "51") (str.to.re "52") (str.to.re "53") (str.to.re "54") (str.to.re "55") (str.to.re "56") (str.to.re "57") (str.to.re "58") (str.to.re "59") (str.to.re "60") (str.to.re "61") (str.to.re "62")) (re.union (re.++ ((_ re.loop 1 1) (str.to.re "0")) ((_ re.loop 1 1) (re.range "1" "9"))) (re.++ ((_ re.loop 1 1) (re.range "1" "2")) ((_ re.loop 1 1) (re.range "0" "9"))) (re.++ ((_ re.loop 1 1) (str.to.re "3")) ((_ re.loop 1 1) (re.range "0" "1")))) (str.to.re "/") ((_ re.loop 3 4) (re.range "0" "9")) (str.to.re "\x0a")))))
(check-sat)
