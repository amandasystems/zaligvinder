(declare-const X String)
; ^(((0)[13578]|(10)|(12))(/)((0[1-9])|([12][0-9])|((3)[01]))(/)(\d{4}))|(((0)[469]|(11))(/)((0[1-9])|([12][0-9])|(30))(/)(\d{4}))|((02)(/)((0[1-9])|((1)[0-9])|((2)[0-8]))(/)(\d{4}))|((02)(/)((0[1-9])|((1)[0-9])|((2)[0-9]))(/)((\d{2})(([02468][048])|([13579][26]))))$
(assert (not (str.in.re X (re.union (re.++ (re.union (re.++ (str.to.re "0") (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "8"))) (str.to.re "10") (str.to.re "12")) (str.to.re "/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (re.++ (str.to.re "3") (re.union (str.to.re "0") (str.to.re "1")))) (str.to.re "/") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (re.union (re.++ (str.to.re "0") (re.union (str.to.re "4") (str.to.re "6") (str.to.re "9"))) (str.to.re "11")) (str.to.re "/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (re.union (str.to.re "1") (str.to.re "2")) (re.range "0" "9")) (str.to.re "30")) (str.to.re "/") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "02/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "8"))) (str.to.re "/") ((_ re.loop 4 4) (re.range "0" "9"))) (re.++ (str.to.re "\x0a02/") (re.union (re.++ (str.to.re "0") (re.range "1" "9")) (re.++ (str.to.re "1") (re.range "0" "9")) (re.++ (str.to.re "2") (re.range "0" "9"))) (str.to.re "/") ((_ re.loop 2 2) (re.range "0" "9")) (re.union (re.++ (re.union (str.to.re "0") (str.to.re "2") (str.to.re "4") (str.to.re "6") (str.to.re "8")) (re.union (str.to.re "0") (str.to.re "4") (str.to.re "8"))) (re.++ (re.union (str.to.re "1") (str.to.re "3") (str.to.re "5") (str.to.re "7") (str.to.re "9")) (re.union (str.to.re "2") (str.to.re "6")))))))))
(check-sat)
