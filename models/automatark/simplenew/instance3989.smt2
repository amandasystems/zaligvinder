(declare-const X String)
; ((EQD[^']*')(RFF[^']*'){0,9}(EQN[^']*')?(TMD[^']*'){0,9}(DTM[^']*'){0,9}(LOC[^']*'){0,9}(MEA[^']*'){0,9}(DIM[^']*'){0,9}(TMP[^']*'){0,9}(RNG[^']*'){0,9}(SEL[^']*'){0,9}(FTX[^']*'){0,9}(DGS[^']*'){0,9}(EQA[^']*'){0,9}(NAD[^']*')?)((TDT[^']*')(RFF[^']*'){0,9}(LOC[^']*'){0,9}(DTM[^']*'){0,9})?
(assert (not (str.in.re X (re.++ (re.opt (re.++ ((_ re.loop 0 9) (re.++ (str.to.re "RFF") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "LOC") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "DTM") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) (str.to.re "TDT") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) (str.to.re "\x0a") ((_ re.loop 0 9) (re.++ (str.to.re "RFF") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) (re.opt (re.++ (str.to.re "EQN") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "TMD") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "DTM") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "LOC") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "MEA") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "DIM") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "TMP") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "RNG") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "SEL") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "FTX") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "DGS") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) ((_ re.loop 0 9) (re.++ (str.to.re "EQA") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) (re.opt (re.++ (str.to.re "NAD") (re.* (re.comp (str.to.re "'"))) (str.to.re "'"))) (str.to.re "EQD") (re.* (re.comp (str.to.re "'"))) (str.to.re "'")))))
(check-sat)
