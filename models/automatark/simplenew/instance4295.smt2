(declare-const X String)
; (([01][\.\- +]\(\d{3}\)[\.\- +]?)|([01][\.\- +]\d{3}[\.\- +])|(\(\d{3}\) ?)|(\d{3}[- \.]))?\d{3}[- \.]\d{4}
(assert (str.in.re X (re.++ (re.opt (re.union (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+")) (str.to.re "(") ((_ re.loop 3 3) (re.range "0" "9")) (str.to.re ")") (re.opt (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+")))) (re.++ (re.union (str.to.re "0") (str.to.re "1")) (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+")) ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re ".") (str.to.re "-") (str.to.re " ") (str.to.re "+"))) (re.++ (str.to.re "(") ((_ re.loop 3 3) (re.range "0" "9")) (str.to.re ")") (re.opt (str.to.re " "))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re "-") (str.to.re " ") (str.to.re "."))))) ((_ re.loop 3 3) (re.range "0" "9")) (re.union (str.to.re "-") (str.to.re " ") (str.to.re ".")) ((_ re.loop 4 4) (re.range "0" "9")) (str.to.re "\x0a"))))
(check-sat)
