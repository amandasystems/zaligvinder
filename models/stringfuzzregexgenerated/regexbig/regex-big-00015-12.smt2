(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (str.to.re "000") (str.to.re "111")) (re.+ (str.to.re "2"))) (re.++ (re.union (re.* (str.to.re "3")) (re.* (str.to.re "4"))) (re.++ (re.union (re.* (str.to.re "555")) (re.+ (str.to.re "666"))) (re.++ (re.union (re.union (str.to.re "77") (str.to.re "88")) (re.* (str.to.re "99"))) (re.++ (re.* (re.union (str.to.re "aa") (str.to.re "bb"))) (re.++ (re.+ (re.union (str.to.re "ccc") (str.to.re "d"))) (re.++ (re.+ (re.* (str.to.re "ee"))) (re.++ (re.* (re.union (str.to.re "ff") (str.to.re "gg"))) (re.++ (re.union (re.union (str.to.re "h") (str.to.re "iii")) (re.* (str.to.re "jj"))) (re.++ (re.* (re.union (str.to.re "k") (str.to.re "ll"))) (re.++ (re.union (re.union (str.to.re "m") (str.to.re "nn")) (re.* (str.to.re "oo"))) (re.++ (re.* (re.+ (str.to.re "ppp"))) (re.++ (re.* (re.union (str.to.re "qqq") (str.to.re "rrr"))) (re.++ (re.* (re.+ (str.to.re "s"))) (re.+ (re.+ (str.to.re "tt")))))))))))))))))))
(check-sat)