(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (str.to.re "000") (str.to.re "1")) (re.union (str.to.re "2") (str.to.re "33"))) (re.++ (re.union (re.+ (str.to.re "444")) (re.+ (str.to.re "5"))) (re.++ (re.union (re.+ (str.to.re "666")) (re.union (str.to.re "7") (str.to.re "8"))) (re.++ (re.+ (re.+ (str.to.re "999"))) (re.++ (re.union (re.+ (str.to.re "aa")) (re.union (str.to.re "bb") (str.to.re "c"))) (re.++ (re.* (re.* (str.to.re "d"))) (re.++ (re.+ (re.* (str.to.re "e"))) (re.++ (re.* (re.* (str.to.re "f"))) (re.++ (re.* (re.+ (str.to.re "ggg"))) (re.++ (re.+ (re.* (str.to.re "hhh"))) (re.++ (re.* (re.union (str.to.re "ii") (str.to.re "j"))) (re.++ (re.+ (re.* (str.to.re "kkk"))) (re.++ (re.union (re.union (str.to.re "lll") (str.to.re "m")) (re.union (str.to.re "n") (str.to.re "ooo"))) (re.++ (re.* (re.union (str.to.re "ppp") (str.to.re "qq"))) (re.* (re.union (str.to.re "r") (str.to.re "sss")))))))))))))))))))
(check-sat)