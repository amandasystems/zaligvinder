(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (str.to.re "000"))) (re.++ (re.+ (re.* (str.to.re "111"))) (re.++ (re.* (re.* (str.to.re "2"))) (re.++ (re.+ (re.* (str.to.re "333"))) (re.++ (re.+ (re.+ (str.to.re "4"))) (re.++ (re.+ (re.* (str.to.re "5"))) (re.++ (re.union (re.union (str.to.re "66") (str.to.re "777")) (re.* (str.to.re "8"))) (re.++ (re.union (re.+ (str.to.re "99")) (re.+ (str.to.re "aa"))) (re.++ (re.* (re.* (str.to.re "bbb"))) (re.++ (re.* (re.union (str.to.re "ccc") (str.to.re "ddd"))) (re.++ (re.* (re.+ (str.to.re "e"))) (re.++ (re.* (re.* (str.to.re "f"))) (re.++ (re.union (re.union (str.to.re "g") (str.to.re "h")) (re.+ (str.to.re "ii"))) (re.++ (re.+ (re.union (str.to.re "jj") (str.to.re "k"))) (re.++ (re.+ (re.+ (str.to.re "ll"))) (re.++ (re.+ (re.* (str.to.re "mm"))) (re.++ (re.* (re.union (str.to.re "n") (str.to.re "oo"))) (re.++ (re.* (re.union (str.to.re "p") (str.to.re "q"))) (re.++ (re.union (re.union (str.to.re "r") (str.to.re "s")) (re.* (str.to.re "tt"))) (re.++ (re.union (re.union (str.to.re "uu") (str.to.re "vvv")) (re.+ (str.to.re "ww"))) (re.++ (re.+ (re.union (str.to.re "x") (str.to.re "y"))) (re.+ (re.union (str.to.re "z") (str.to.re "AAA"))))))))))))))))))))))))))
(check-sat)