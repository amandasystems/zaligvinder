(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (str.to.re "0"))) (re.++ (re.* (re.* (str.to.re "1"))) (re.++ (re.union (re.+ (str.to.re "2")) (re.* (str.to.re "3"))) (re.++ (re.union (re.+ (str.to.re "444")) (re.+ (str.to.re "5"))) (re.++ (re.union (re.* (str.to.re "6")) (re.+ (str.to.re "7"))) (re.++ (re.+ (re.* (str.to.re "88"))) (re.++ (re.union (re.* (str.to.re "9")) (re.+ (str.to.re "a"))) (re.++ (re.+ (re.union (str.to.re "b") (str.to.re "ccc"))) (re.++ (re.* (re.* (str.to.re "dd"))) (re.++ (re.union (re.* (str.to.re "ee")) (re.+ (str.to.re "f"))) (re.++ (re.* (re.* (str.to.re "ggg"))) (re.++ (re.+ (re.* (str.to.re "hh"))) (re.++ (re.* (re.* (str.to.re "i"))) (re.++ (re.* (re.+ (str.to.re "j"))) (re.++ (re.union (re.union (str.to.re "kk") (str.to.re "ll")) (re.* (str.to.re "m"))) (re.++ (re.union (re.+ (str.to.re "nnn")) (re.union (str.to.re "ooo") (str.to.re "pp"))) (re.++ (re.* (re.+ (str.to.re "qq"))) (re.++ (re.union (re.union (str.to.re "rr") (str.to.re "s")) (re.* (str.to.re "tt"))) (re.++ (re.+ (re.+ (str.to.re "u"))) (re.++ (re.union (re.* (str.to.re "vv")) (re.union (str.to.re "ww") (str.to.re "x"))) (re.++ (re.union (re.+ (str.to.re "yyy")) (re.union (str.to.re "z") (str.to.re "AA"))) (re.union (re.+ (str.to.re "BB")) (re.union (str.to.re "CC") (str.to.re "D"))))))))))))))))))))))))))
(check-sat)