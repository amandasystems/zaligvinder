(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (re.union (re.union (re.union (re.union (re.union (re.+ (str.to.re "00")) (re.* (str.to.re "1"))) (re.* (re.union (str.to.re "22") (str.to.re "333")))) (re.+ (re.+ (re.* (str.to.re "444"))))) (re.union (re.* (re.+ (re.+ (str.to.re "55")))) (re.union (re.union (re.+ (str.to.re "6")) (re.* (str.to.re "7"))) (re.+ (re.union (str.to.re "88") (str.to.re "99")))))) (re.* (re.* (re.* (re.* (re.+ (str.to.re "aa"))))))))) (re.union (re.union (re.+ (re.+ (re.union (re.union (re.* (re.* (str.to.re "b"))) (re.union (re.+ (str.to.re "c")) (re.union (str.to.re "ddd") (str.to.re "e")))) (re.* (re.+ (re.* (str.to.re "f"))))))) (re.union (re.* (re.* (re.union (re.* (re.+ (str.to.re "g"))) (re.union (re.+ (str.to.re "hhh")) (re.+ (str.to.re "ii")))))) (re.* (re.* (re.* (re.union (re.union (str.to.re "jjj") (str.to.re "kkk")) (re.* (str.to.re "ll")))))))) (re.+ (re.union (re.union (re.+ (re.* (re.union (re.union (str.to.re "mmm") (str.to.re "n")) (re.* (str.to.re "oo"))))) (re.* (re.+ (re.* (re.* (str.to.re "pp")))))) (re.* (re.union (re.* (re.union (re.+ (str.to.re "q")) (re.* (str.to.re "r")))) (re.union (re.union (re.* (str.to.re "ss")) (re.union (str.to.re "ttt") (str.to.re "uuu"))) (re.* (re.* (str.to.re "vvv"))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)