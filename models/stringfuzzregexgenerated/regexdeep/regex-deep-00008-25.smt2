(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (re.union (re.union (re.* (re.* (re.union (re.union (str.to.re "00") (str.to.re "111")) (re.* (str.to.re "2"))))) (re.union (re.+ (re.union (re.+ (str.to.re "33")) (re.union (str.to.re "444") (str.to.re "55")))) (re.* (re.+ (re.* (str.to.re "66")))))) (re.+ (re.* (re.union (re.union (re.+ (str.to.re "7")) (re.* (str.to.re "88"))) (re.+ (re.* (str.to.re "999"))))))))) (re.union (re.union (re.* (re.union (re.+ (re.union (re.* (re.+ (str.to.re "a"))) (re.+ (re.+ (str.to.re "bb"))))) (re.* (re.* (re.+ (re.union (str.to.re "ccc") (str.to.re "dd"))))))) (re.+ (re.union (re.+ (re.union (re.* (re.+ (str.to.re "ee"))) (re.union (re.+ (str.to.re "f")) (re.union (str.to.re "g") (str.to.re "hhh"))))) (re.* (re.* (re.union (re.union (str.to.re "ii") (str.to.re "jj")) (re.+ (str.to.re "kk")))))))) (re.union (re.* (re.union (re.* (re.* (re.union (re.union (str.to.re "l") (str.to.re "m")) (re.+ (str.to.re "nn"))))) (re.union (re.+ (re.+ (re.+ (str.to.re "oo")))) (re.union (re.* (re.* (str.to.re "p"))) (re.+ (re.* (str.to.re "qq"))))))) (re.union (re.union (re.union (re.* (re.union (re.* (str.to.re "rrr")) (re.+ (str.to.re "s")))) (re.* (re.+ (re.* (str.to.re "ttt"))))) (re.union (re.+ (re.union (re.union (str.to.re "uu") (str.to.re "vv")) (re.union (str.to.re "www") (str.to.re "x")))) (re.union (re.union (re.union (str.to.re "y") (str.to.re "zz")) (re.* (str.to.re "A"))) (re.* (re.+ (str.to.re "BBB")))))) (re.union (re.+ (re.* (re.* (re.* (str.to.re "CCC"))))) (re.+ (re.* (re.* (re.union (str.to.re "D") (str.to.re "E"))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)