(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.* (re.union (re.+ (re.+ (re.union (re.+ (re.+ (str.to.re "000"))) (re.union (re.+ (str.to.re "111")) (re.union (str.to.re "22") (str.to.re "33")))))) (re.+ (re.+ (re.* (re.* (re.+ (str.to.re "44")))))))) (re.* (re.* (re.* (re.union (re.union (re.* (re.union (str.to.re "555") (str.to.re "666"))) (re.union (re.union (str.to.re "7") (str.to.re "88")) (re.union (str.to.re "9") (str.to.re "a")))) (re.+ (re.union (re.* (str.to.re "b")) (re.+ (str.to.re "cc"))))))))) (re.+ (re.union (re.union (re.+ (re.* (re.+ (re.union (re.union (str.to.re "dd") (str.to.re "eee")) (re.union (str.to.re "fff") (str.to.re "gg")))))) (re.union (re.+ (re.union (re.union (re.* (str.to.re "hhh")) (re.+ (str.to.re "ii"))) (re.union (re.+ (str.to.re "jj")) (re.union (str.to.re "kkk") (str.to.re "l"))))) (re.+ (re.+ (re.* (re.+ (str.to.re "mm"))))))) (re.* (re.union (re.union (re.* (re.+ (re.union (str.to.re "nn") (str.to.re "o")))) (re.* (re.* (re.union (str.to.re "pp") (str.to.re "qqq"))))) (re.* (re.union (re.+ (re.+ (str.to.re "rrr"))) (re.+ (re.+ (str.to.re "sss"))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)