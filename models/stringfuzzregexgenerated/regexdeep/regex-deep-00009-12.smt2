(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.union (re.+ (re.+ (re.+ (re.union (re.union (re.+ (re.* (str.to.re "000"))) (re.* (re.* (str.to.re "1")))) (re.union (re.* (re.union (str.to.re "22") (str.to.re "333"))) (re.union (re.union (str.to.re "4") (str.to.re "555")) (re.+ (str.to.re "6")))))))) (re.* (re.* (re.+ (re.union (re.+ (re.+ (re.* (str.to.re "777")))) (re.union (re.union (re.* (str.to.re "8")) (re.+ (str.to.re "9"))) (re.* (re.union (str.to.re "aaa") (str.to.re "bb")))))))))) (re.* (re.* (re.union (re.union (re.* (re.+ (re.* (re.union (re.union (str.to.re "ccc") (str.to.re "dd")) (re.union (str.to.re "e") (str.to.re "f")))))) (re.* (re.union (re.union (re.+ (re.* (str.to.re "g"))) (re.+ (re.+ (str.to.re "h")))) (re.* (re.union (re.union (str.to.re "iii") (str.to.re "j")) (re.* (str.to.re "kkk"))))))) (re.union (re.union (re.* (re.+ (re.* (re.+ (str.to.re "l"))))) (re.+ (re.* (re.* (re.union (str.to.re "mmm") (str.to.re "nn")))))) (re.union (re.* (re.union (re.union (re.union (str.to.re "oo") (str.to.re "pp")) (re.union (str.to.re "qqq") (str.to.re "rrr"))) (re.+ (re.+ (str.to.re "s"))))) (re.* (re.* (re.* (re.+ (str.to.re "ttt")))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)