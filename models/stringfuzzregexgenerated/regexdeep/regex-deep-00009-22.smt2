(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (re.+ (re.union (re.union (re.union (re.* (re.* (re.union (str.to.re "00") (str.to.re "111")))) (re.* (re.+ (re.+ (str.to.re "2"))))) (re.union (re.+ (re.union (re.* (str.to.re "333")) (re.* (str.to.re "4")))) (re.* (re.union (re.+ (str.to.re "55")) (re.* (str.to.re "6")))))) (re.* (re.+ (re.* (re.+ (re.* (str.to.re "7")))))))) (re.+ (re.+ (re.union (re.+ (re.union (re.union (re.* (str.to.re "8")) (re.* (str.to.re "99"))) (re.+ (re.* (str.to.re "aa"))))) (re.+ (re.union (re.union (re.+ (str.to.re "bb")) (re.union (str.to.re "cc") (str.to.re "ddd"))) (re.* (re.* (str.to.re "eee"))))))))) (re.union (re.* (re.* (re.* (re.* (re.+ (re.union (re.+ (str.to.re "fff")) (re.+ (str.to.re "gg")))))))) (re.+ (re.+ (re.* (re.+ (re.* (re.union (re.* (str.to.re "h")) (re.* (str.to.re "ii")))))))))) (re.* (re.+ (re.* (re.+ (re.+ (re.* (re.+ (re.union (re.+ (str.to.re "jj")) (re.+ (str.to.re "kk")))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)