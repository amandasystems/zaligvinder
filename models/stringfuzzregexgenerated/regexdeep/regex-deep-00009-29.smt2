(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.union (re.union (re.union (re.+ (re.union (re.* (re.* (re.* (str.to.re "0")))) (re.union (re.* (re.* (str.to.re "111"))) (re.* (re.+ (str.to.re "2")))))) (re.* (re.+ (re.union (re.+ (re.+ (str.to.re "333"))) (re.+ (re.+ (str.to.re "444"))))))) (re.union (re.union (re.+ (re.* (re.* (re.+ (str.to.re "5"))))) (re.* (re.* (re.union (re.+ (str.to.re "666")) (re.+ (str.to.re "777")))))) (re.union (re.union (re.* (re.* (re.* (str.to.re "888")))) (re.* (re.+ (re.* (str.to.re "9"))))) (re.+ (re.+ (re.union (re.* (str.to.re "a")) (re.+ (str.to.re "bbb")))))))) (re.* (re.union (re.* (re.union (re.+ (re.union (re.* (str.to.re "cc")) (re.union (str.to.re "ddd") (str.to.re "ee")))) (re.+ (re.union (re.* (str.to.re "f")) (re.union (str.to.re "g") (str.to.re "hhh")))))) (re.union (re.+ (re.+ (re.* (re.* (str.to.re "ii"))))) (re.* (re.* (re.* (re.* (str.to.re "jj")))))))))) (re.* (re.union (re.union (re.* (re.union (re.union (re.* (re.* (re.union (str.to.re "kk") (str.to.re "l")))) (re.+ (re.union (re.union (str.to.re "mmm") (str.to.re "nn")) (re.union (str.to.re "ooo") (str.to.re "ppp"))))) (re.union (re.+ (re.union (re.+ (str.to.re "qqq")) (re.* (str.to.re "rrr")))) (re.+ (re.* (re.* (str.to.re "sss"))))))) (re.* (re.* (re.* (re.* (re.+ (re.union (str.to.re "t") (str.to.re "u")))))))) (re.+ (re.+ (re.union (re.* (re.union (re.+ (re.+ (str.to.re "vvv"))) (re.+ (re.+ (str.to.re "www"))))) (re.+ (re.* (re.+ (re.+ (str.to.re "x")))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)