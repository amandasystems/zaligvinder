(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (re.+ (re.union (re.union (re.+ (re.union (re.+ (re.* (str.to.re "00"))) (re.* (re.union (str.to.re "111") (str.to.re "2"))))) (re.* (re.union (re.* (re.union (str.to.re "33") (str.to.re "444"))) (re.union (re.* (str.to.re "5")) (re.* (str.to.re "666")))))) (re.+ (re.union (re.union (re.+ (re.* (str.to.re "777"))) (re.union (re.union (str.to.re "8") (str.to.re "999")) (re.* (str.to.re "aa")))) (re.union (re.+ (re.* (str.to.re "bb"))) (re.union (re.union (str.to.re "ccc") (str.to.re "dd")) (re.union (str.to.re "e") (str.to.re "fff")))))))) (re.union (re.union (re.* (re.+ (re.union (re.* (re.* (str.to.re "ggg"))) (re.union (re.union (str.to.re "hh") (str.to.re "ii")) (re.union (str.to.re "jj") (str.to.re "kk")))))) (re.union (re.* (re.union (re.* (re.union (str.to.re "l") (str.to.re "mmm"))) (re.+ (re.union (str.to.re "nn") (str.to.re "ooo"))))) (re.+ (re.* (re.union (re.union (str.to.re "p") (str.to.re "q")) (re.* (str.to.re "rr"))))))) (re.+ (re.+ (re.+ (re.+ (re.* (re.+ (str.to.re "sss"))))))))) (re.union (re.* (re.* (re.union (re.* (re.* (re.+ (re.+ (str.to.re "tt"))))) (re.+ (re.+ (re.union (re.* (str.to.re "u")) (re.+ (str.to.re "vvv")))))))) (re.* (re.union (re.+ (re.+ (re.+ (re.* (re.* (str.to.re "w")))))) (re.union (re.union (re.* (re.* (re.union (str.to.re "xx") (str.to.re "yy")))) (re.+ (re.* (re.union (str.to.re "z") (str.to.re "AA"))))) (re.* (re.+ (re.+ (re.* (str.to.re "B")))))))))) (re.+ (re.+ (re.union (re.union (re.* (re.+ (re.+ (re.* (re.* (str.to.re "CC")))))) (re.* (re.union (re.+ (re.+ (re.+ (str.to.re "DDD")))) (re.+ (re.+ (re.union (str.to.re "EEE") (str.to.re "F"))))))) (re.* (re.union (re.* (re.+ (re.+ (re.union (str.to.re "GGG") (str.to.re "H"))))) (re.+ (re.* (re.+ (re.+ (str.to.re "II")))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)