(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.union (re.* (re.+ (re.+ (re.+ (re.union (re.+ (re.* (re.+ (str.to.re "0")))) (re.+ (re.* (re.union (str.to.re "11") (str.to.re "2"))))))))) (re.* (re.union (re.+ (re.union (re.union (re.* (re.* (re.* (str.to.re "3")))) (re.+ (re.union (re.* (str.to.re "44")) (re.union (str.to.re "5") (str.to.re "66"))))) (re.* (re.union (re.+ (re.+ (str.to.re "77"))) (re.union (re.+ (str.to.re "8")) (re.union (str.to.re "9") (str.to.re "a"))))))) (re.* (re.* (re.* (re.union (re.union (re.* (str.to.re "bb")) (re.+ (str.to.re "cc"))) (re.* (re.+ (str.to.re "dd"))))))))))) (re.+ (re.union (re.* (re.union (re.* (re.union (re.union (re.+ (re.union (re.union (str.to.re "ee") (str.to.re "fff")) (re.* (str.to.re "ggg")))) (re.+ (re.+ (re.union (str.to.re "hh") (str.to.re "iii"))))) (re.union (re.* (re.+ (re.* (str.to.re "jj")))) (re.* (re.union (re.* (str.to.re "kkk")) (re.+ (str.to.re "lll"))))))) (re.+ (re.union (re.* (re.+ (re.+ (re.* (str.to.re "mmm"))))) (re.+ (re.union (re.+ (re.+ (str.to.re "nnn"))) (re.union (re.union (str.to.re "oo") (str.to.re "pp")) (re.* (str.to.re "qqq"))))))))) (re.+ (re.union (re.union (re.* (re.+ (re.* (re.* (re.+ (str.to.re "rr")))))) (re.union (re.+ (re.union (re.+ (re.union (str.to.re "s") (str.to.re "ttt"))) (re.* (re.union (str.to.re "uuu") (str.to.re "vv"))))) (re.* (re.union (re.+ (re.+ (str.to.re "ww"))) (re.* (re.+ (str.to.re "x"))))))) (re.* (re.union (re.union (re.+ (re.* (re.+ (str.to.re "y")))) (re.* (re.union (re.* (str.to.re "zzz")) (re.+ (str.to.re "A"))))) (re.+ (re.+ (re.+ (re.+ (str.to.re "B"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)