(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.* (re.union (re.* (re.* (re.* (re.+ (re.union (re.* (re.union (str.to.re "0") (str.to.re "11"))) (re.union (re.+ (str.to.re "2")) (re.+ (str.to.re "3")))))))) (re.union (re.* (re.+ (re.* (re.* (re.union (re.* (str.to.re "44")) (re.+ (str.to.re "55"))))))) (re.union (re.union (re.* (re.+ (re.union (re.union (str.to.re "6") (str.to.re "777")) (re.+ (str.to.re "8"))))) (re.union (re.union (re.* (re.* (str.to.re "9"))) (re.union (re.* (str.to.re "a")) (re.union (str.to.re "bbb") (str.to.re "cc")))) (re.+ (re.+ (re.* (str.to.re "ddd")))))) (re.union (re.+ (re.union (re.+ (re.* (str.to.re "eee"))) (re.+ (re.+ (str.to.re "ff"))))) (re.union (re.* (re.+ (re.* (str.to.re "g")))) (re.* (re.union (re.union (str.to.re "hhh") (str.to.re "ii")) (re.* (str.to.re "jjj")))))))))) (re.* (re.union (re.* (re.* (re.* (re.* (re.union (re.* (re.union (str.to.re "kk") (str.to.re "ll"))) (re.* (re.+ (str.to.re "mmm")))))))) (re.union (re.union (re.union (re.union (re.+ (re.union (re.+ (str.to.re "nn")) (re.+ (str.to.re "oo")))) (re.+ (re.+ (re.union (str.to.re "ppp") (str.to.re "qq"))))) (re.* (re.* (re.* (re.union (str.to.re "rr") (str.to.re "ss")))))) (re.+ (re.+ (re.union (re.+ (re.* (str.to.re "tt"))) (re.union (re.union (str.to.re "u") (str.to.re "vvv")) (re.+ (str.to.re "www"))))))) (re.+ (re.union (re.* (re.* (re.* (re.* (str.to.re "xx"))))) (re.+ (re.+ (re.union (re.+ (str.to.re "yy")) (re.* (str.to.re "z"))))))))))) (re.union (re.union (re.+ (re.+ (re.* (re.+ (re.* (re.* (re.* (re.* (str.to.re "A"))))))))) (re.* (re.union (re.* (re.* (re.+ (re.union (re.+ (re.+ (str.to.re "B"))) (re.union (re.* (str.to.re "CC")) (re.union (str.to.re "D") (str.to.re "EE"))))))) (re.union (re.union (re.+ (re.union (re.+ (re.+ (str.to.re "F"))) (re.* (re.+ (str.to.re "G"))))) (re.* (re.union (re.+ (re.union (str.to.re "H") (str.to.re "III"))) (re.+ (re.+ (str.to.re "J")))))) (re.* (re.+ (re.* (re.union (re.union (str.to.re "KKK") (str.to.re "L")) (re.* (str.to.re "M")))))))))) (re.+ (re.+ (re.union (re.* (re.union (re.+ (re.* (re.union (re.union (str.to.re "NNN") (str.to.re "OO")) (re.union (str.to.re "P") (str.to.re "QQ"))))) (re.* (re.union (re.+ (re.+ (str.to.re "RR"))) (re.+ (re.union (str.to.re "S") (str.to.re "TTT"))))))) (re.* (re.* (re.* (re.union (re.+ (re.+ (str.to.re "UUU"))) (re.union (re.+ (str.to.re "VVV")) (re.+ (str.to.re "W"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)