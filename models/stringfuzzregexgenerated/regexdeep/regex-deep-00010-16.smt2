(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.union (re.union (re.+ (re.union (re.+ (re.union (re.+ (re.* (re.+ (str.to.re "00")))) (re.union (re.+ (re.+ (str.to.re "11"))) (re.* (re.* (str.to.re "222")))))) (re.union (re.+ (re.+ (re.+ (re.+ (str.to.re "3"))))) (re.* (re.+ (re.+ (re.+ (str.to.re "444")))))))) (re.+ (re.union (re.union (re.union (re.union (re.* (re.union (str.to.re "55") (str.to.re "666"))) (re.+ (re.+ (str.to.re "7")))) (re.* (re.+ (re.union (str.to.re "88") (str.to.re "99"))))) (re.+ (re.* (re.union (re.+ (str.to.re "aaa")) (re.union (str.to.re "bbb") (str.to.re "c")))))) (re.union (re.union (re.union (re.* (re.union (str.to.re "d") (str.to.re "ee"))) (re.+ (re.+ (str.to.re "f")))) (re.* (re.union (re.union (str.to.re "g") (str.to.re "hhh")) (re.union (str.to.re "iii") (str.to.re "jjj"))))) (re.+ (re.union (re.+ (re.* (str.to.re "kk"))) (re.* (re.+ (str.to.re "l"))))))))) (re.union (re.union (re.* (re.* (re.union (re.+ (re.* (re.union (str.to.re "mm") (str.to.re "nn")))) (re.union (re.* (re.* (str.to.re "oo"))) (re.+ (re.+ (str.to.re "ppp"))))))) (re.union (re.+ (re.union (re.+ (re.union (re.+ (str.to.re "qqq")) (re.+ (str.to.re "rrr")))) (re.* (re.* (re.union (str.to.re "sss") (str.to.re "tt")))))) (re.union (re.+ (re.+ (re.+ (re.union (str.to.re "uuu") (str.to.re "v"))))) (re.union (re.union (re.+ (re.+ (str.to.re "w"))) (re.* (re.* (str.to.re "x")))) (re.union (re.* (re.union (str.to.re "yyy") (str.to.re "zz"))) (re.* (re.+ (str.to.re "AA")))))))) (re.* (re.union (re.union (re.union (re.+ (re.+ (re.* (str.to.re "B")))) (re.* (re.+ (re.+ (str.to.re "CCC"))))) (re.* (re.union (re.* (re.+ (str.to.re "DD"))) (re.union (re.union (str.to.re "EEE") (str.to.re "FFF")) (re.union (str.to.re "GG") (str.to.re "HHH")))))) (re.* (re.+ (re.+ (re.union (re.+ (str.to.re "II")) (re.* (str.to.re "JJJ"))))))))))) (re.+ (re.+ (re.* (re.union (re.* (re.+ (re.union (re.union (re.+ (re.union (str.to.re "KK") (str.to.re "L"))) (re.* (re.+ (str.to.re "M")))) (re.* (re.+ (re.union (str.to.re "N") (str.to.re "OO"))))))) (re.* (re.union (re.* (re.* (re.+ (re.union (str.to.re "PP") (str.to.re "QQ"))))) (re.* (re.union (re.+ (re.* (str.to.re "R"))) (re.union (re.+ (str.to.re "S")) (re.union (str.to.re "T") (str.to.re "UU"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)