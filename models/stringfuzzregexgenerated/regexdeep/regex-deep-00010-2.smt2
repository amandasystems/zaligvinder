(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.* (re.* (re.union (re.+ (re.union (re.+ (re.union (re.* (re.* (str.to.re "0"))) (re.* (re.* (str.to.re "111"))))) (re.union (re.union (re.union (re.+ (str.to.re "22")) (re.union (str.to.re "33") (str.to.re "4"))) (re.+ (re.+ (str.to.re "55")))) (re.+ (re.* (re.union (str.to.re "6") (str.to.re "7"))))))) (re.+ (re.union (re.union (re.+ (re.* (re.union (str.to.re "8") (str.to.re "99")))) (re.union (re.+ (re.union (str.to.re "aaa") (str.to.re "bbb"))) (re.union (re.union (str.to.re "ccc") (str.to.re "d")) (re.+ (str.to.re "e"))))) (re.union (re.union (re.* (re.union (str.to.re "f") (str.to.re "ggg"))) (re.union (re.+ (str.to.re "h")) (re.union (str.to.re "i") (str.to.re "jj")))) (re.union (re.union (re.+ (str.to.re "k")) (re.union (str.to.re "ll") (str.to.re "mmm"))) (re.+ (re.+ (str.to.re "n"))))))))))) (re.+ (re.* (re.union (re.* (re.+ (re.* (re.union (re.+ (re.* (re.union (str.to.re "o") (str.to.re "ppp")))) (re.* (re.* (re.+ (str.to.re "qq")))))))) (re.union (re.+ (re.union (re.+ (re.union (re.+ (re.* (str.to.re "r"))) (re.union (re.union (str.to.re "s") (str.to.re "tt")) (re.* (str.to.re "uu"))))) (re.union (re.+ (re.union (re.* (str.to.re "v")) (re.* (str.to.re "www")))) (re.union (re.union (re.* (str.to.re "xx")) (re.union (str.to.re "y") (str.to.re "zzz"))) (re.+ (re.* (str.to.re "A"))))))) (re.* (re.union (re.* (re.union (re.* (re.+ (str.to.re "BBB"))) (re.+ (re.union (str.to.re "CCC") (str.to.re "DDD"))))) (re.union (re.* (re.union (re.+ (str.to.re "E")) (re.+ (str.to.re "FF")))) (re.+ (re.+ (re.* (str.to.re "G"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)