(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (re.union (re.+ (re.+ (re.* (re.* (re.+ (re.+ (re.union (str.to.re "00") (str.to.re "11")))))))) (re.+ (re.+ (re.union (re.union (re.union (re.+ (re.union (str.to.re "22") (str.to.re "33"))) (re.+ (re.* (str.to.re "4")))) (re.* (re.* (re.* (str.to.re "555"))))) (re.* (re.* (re.union (re.* (str.to.re "666")) (re.union (str.to.re "777") (str.to.re "88"))))))))) (re.union (re.* (re.+ (re.union (re.+ (re.union (re.union (re.union (str.to.re "99") (str.to.re "a")) (re.* (str.to.re "bb"))) (re.union (re.* (str.to.re "cc")) (re.+ (str.to.re "d"))))) (re.* (re.* (re.* (re.union (str.to.re "ee") (str.to.re "ff")))))))) (re.union (re.+ (re.* (re.* (re.union (re.union (re.* (str.to.re "ggg")) (re.+ (str.to.re "h"))) (re.+ (re.* (str.to.re "i"))))))) (re.union (re.union (re.union (re.+ (re.union (re.* (str.to.re "j")) (re.+ (str.to.re "kkk")))) (re.+ (re.union (re.+ (str.to.re "lll")) (re.* (str.to.re "mm"))))) (re.+ (re.union (re.+ (re.+ (str.to.re "nn"))) (re.* (re.union (str.to.re "ooo") (str.to.re "pp")))))) (re.+ (re.+ (re.union (re.union (re.+ (str.to.re "qq")) (re.* (str.to.re "rr"))) (re.* (re.+ (str.to.re "s")))))))))) (re.+ (re.+ (re.union (re.* (re.union (re.union (re.union (re.+ (re.union (str.to.re "ttt") (str.to.re "uuu"))) (re.* (re.* (str.to.re "v")))) (re.* (re.+ (re.union (str.to.re "w") (str.to.re "xx"))))) (re.union (re.union (re.* (re.* (str.to.re "yy"))) (re.+ (re.* (str.to.re "z")))) (re.union (re.union (re.* (str.to.re "A")) (re.union (str.to.re "BB") (str.to.re "CC"))) (re.* (re.union (str.to.re "DDD") (str.to.re "E"))))))) (re.union (re.union (re.+ (re.+ (re.* (re.+ (str.to.re "F"))))) (re.union (re.* (re.* (re.union (str.to.re "GGG") (str.to.re "H")))) (re.+ (re.union (re.* (str.to.re "I")) (re.union (str.to.re "JJ") (str.to.re "KK")))))) (re.* (re.* (re.+ (re.* (re.* (str.to.re "L"))))))))))) (re.+ (re.+ (re.* (re.union (re.* (re.union (re.* (re.union (re.union (re.union (str.to.re "M") (str.to.re "NNN")) (re.union (str.to.re "OO") (str.to.re "PP"))) (re.* (re.+ (str.to.re "QQ"))))) (re.* (re.+ (re.union (re.+ (str.to.re "RR")) (re.+ (str.to.re "S"))))))) (re.+ (re.union (re.union (re.* (re.union (re.* (str.to.re "T")) (re.+ (str.to.re "U")))) (re.+ (re.* (re.* (str.to.re "VV"))))) (re.+ (re.* (re.union (re.* (str.to.re "W")) (re.+ (str.to.re "X"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)