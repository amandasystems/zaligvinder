(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (re.* (re.* (re.* (re.* (re.+ (re.union (re.+ (re.union (str.to.re "00") (str.to.re "1"))) (re.union (re.union (str.to.re "222") (str.to.re "333")) (re.union (str.to.re "44") (str.to.re "5"))))))))))) (re.union (re.* (re.union (re.* (re.union (re.* (re.* (re.+ (re.union (re.+ (str.to.re "66")) (re.* (str.to.re "777")))))) (re.+ (re.* (re.* (re.union (re.+ (str.to.re "888")) (re.union (str.to.re "999") (str.to.re "aa")))))))) (re.* (re.* (re.+ (re.union (re.union (re.+ (re.union (str.to.re "bbb") (str.to.re "cc"))) (re.+ (re.union (str.to.re "d") (str.to.re "eee")))) (re.union (re.+ (re.* (str.to.re "ff"))) (re.union (re.union (str.to.re "ggg") (str.to.re "h")) (re.+ (str.to.re "ii")))))))))) (re.+ (re.union (re.union (re.+ (re.* (re.union (re.* (re.union (re.union (str.to.re "j") (str.to.re "k")) (re.* (str.to.re "ll")))) (re.union (re.+ (re.+ (str.to.re "m"))) (re.+ (re.union (str.to.re "nnn") (str.to.re "ooo"))))))) (re.+ (re.+ (re.* (re.union (re.+ (re.+ (str.to.re "ppp"))) (re.+ (re.+ (str.to.re "qqq")))))))) (re.union (re.union (re.+ (re.+ (re.union (re.* (re.+ (str.to.re "rrr"))) (re.+ (re.+ (str.to.re "sss")))))) (re.+ (re.+ (re.+ (re.* (re.* (str.to.re "ttt"))))))) (re.* (re.+ (re.+ (re.* (re.* (re.union (str.to.re "u") (str.to.re "v"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)