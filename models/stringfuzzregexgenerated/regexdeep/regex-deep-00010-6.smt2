(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.union (re.+ (re.union (re.+ (re.union (re.* (re.+ (re.* (re.* (str.to.re "0"))))) (re.* (re.union (re.+ (re.+ (str.to.re "11"))) (re.+ (re.* (str.to.re "22"))))))) (re.* (re.+ (re.union (re.+ (re.+ (re.+ (str.to.re "333")))) (re.union (re.* (re.* (str.to.re "4"))) (re.union (re.* (str.to.re "5")) (re.union (str.to.re "66") (str.to.re "7"))))))))) (re.* (re.union (re.union (re.union (re.+ (re.* (re.union (re.* (str.to.re "88")) (re.* (str.to.re "9"))))) (re.union (re.union (re.union (re.* (str.to.re "aa")) (re.+ (str.to.re "b"))) (re.* (re.union (str.to.re "c") (str.to.re "d")))) (re.union (re.union (re.+ (str.to.re "ee")) (re.+ (str.to.re "f"))) (re.* (re.* (str.to.re "gg")))))) (re.union (re.* (re.union (re.union (re.* (str.to.re "hh")) (re.+ (str.to.re "iii"))) (re.+ (re.+ (str.to.re "j"))))) (re.* (re.union (re.* (re.+ (str.to.re "kk"))) (re.union (re.+ (str.to.re "ll")) (re.union (str.to.re "m") (str.to.re "n"))))))) (re.+ (re.* (re.* (re.+ (re.+ (re.union (str.to.re "ooo") (str.to.re "pp"))))))))))) (re.* (re.+ (re.+ (re.* (re.* (re.+ (re.union (re.* (re.* (re.* (str.to.re "qqq")))) (re.* (re.* (re.union (str.to.re "r") (str.to.re "sss"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)