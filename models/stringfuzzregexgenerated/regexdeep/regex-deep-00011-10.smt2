(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.union (re.+ (re.union (re.+ (re.* (re.* (re.+ (re.union (re.union (re.+ (str.to.re "0")) (re.* (str.to.re "1"))) (re.union (re.+ (str.to.re "222")) (re.+ (str.to.re "333")))))))) (re.+ (re.union (re.union (re.union (re.+ (re.* (re.union (str.to.re "4") (str.to.re "5")))) (re.union (re.union (re.* (str.to.re "666")) (re.* (str.to.re "777"))) (re.union (re.union (str.to.re "888") (str.to.re "999")) (re.* (str.to.re "aa"))))) (re.* (re.union (re.* (re.union (str.to.re "b") (str.to.re "cc"))) (re.+ (re.+ (str.to.re "ddd")))))) (re.+ (re.* (re.union (re.+ (re.+ (str.to.re "e"))) (re.union (re.+ (str.to.re "ff")) (re.+ (str.to.re "g")))))))))) (re.+ (re.union (re.+ (re.union (re.+ (re.* (re.union (re.union (re.union (str.to.re "h") (str.to.re "ii")) (re.union (str.to.re "jj") (str.to.re "k"))) (re.+ (re.* (str.to.re "ll")))))) (re.* (re.* (re.union (re.+ (re.+ (str.to.re "mm"))) (re.* (re.* (str.to.re "n")))))))) (re.+ (re.* (re.* (re.* (re.union (re.+ (re.+ (str.to.re "oo"))) (re.union (re.union (str.to.re "pp") (str.to.re "qqq")) (re.+ (str.to.re "rrr")))))))))))) (re.* (re.union (re.+ (re.union (re.+ (re.+ (re.* (re.* (re.union (re.+ (re.union (str.to.re "ss") (str.to.re "ttt"))) (re.union (re.union (str.to.re "uuu") (str.to.re "vv")) (re.+ (str.to.re "ww")))))))) (re.* (re.+ (re.+ (re.union (re.union (re.+ (re.+ (str.to.re "xx"))) (re.+ (re.union (str.to.re "y") (str.to.re "z")))) (re.* (re.union (re.union (str.to.re "A") (str.to.re "BBB")) (re.+ (str.to.re "C")))))))))) (re.union (re.* (re.+ (re.+ (re.* (re.union (re.+ (re.+ (re.union (str.to.re "D") (str.to.re "EE")))) (re.+ (re.* (re.+ (str.to.re "FFF"))))))))) (re.union (re.+ (re.+ (re.* (re.union (re.* (re.union (re.+ (str.to.re "GGG")) (re.+ (str.to.re "HH")))) (re.+ (re.* (re.+ (str.to.re "III")))))))) (re.union (re.* (re.union (re.union (re.* (re.* (re.* (str.to.re "JJJ")))) (re.+ (re.union (re.+ (str.to.re "KKK")) (re.union (str.to.re "L") (str.to.re "MM"))))) (re.* (re.union (re.+ (re.* (str.to.re "NNN"))) (re.* (re.* (str.to.re "O"))))))) (re.* (re.+ (re.* (re.union (re.+ (re.+ (str.to.re "PP"))) (re.* (re.union (str.to.re "QQQ") (str.to.re "RR")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)