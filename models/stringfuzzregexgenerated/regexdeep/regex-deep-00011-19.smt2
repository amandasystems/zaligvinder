(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.union (re.union (re.+ (re.* (re.+ (re.+ (re.* (re.union (re.union (re.union (str.to.re "00") (str.to.re "111")) (re.+ (str.to.re "222"))) (re.union (re.+ (str.to.re "33")) (re.union (str.to.re "4") (str.to.re "55"))))))))) (re.union (re.+ (re.* (re.union (re.+ (re.union (re.+ (re.* (str.to.re "666"))) (re.* (re.* (str.to.re "77"))))) (re.union (re.union (re.union (re.* (str.to.re "8")) (re.* (str.to.re "99"))) (re.* (re.+ (str.to.re "aa")))) (re.union (re.union (re.union (str.to.re "b") (str.to.re "ccc")) (re.+ (str.to.re "d"))) (re.union (re.union (str.to.re "ee") (str.to.re "f")) (re.* (str.to.re "gg")))))))) (re.* (re.+ (re.+ (re.+ (re.* (re.union (re.+ (str.to.re "hhh")) (re.union (str.to.re "ii") (str.to.re "j")))))))))) (re.* (re.union (re.* (re.+ (re.* (re.+ (re.+ (re.* (re.* (str.to.re "kk")))))))) (re.+ (re.+ (re.union (re.* (re.union (re.union (re.+ (str.to.re "l")) (re.+ (str.to.re "mmm"))) (re.* (re.* (str.to.re "n"))))) (re.+ (re.* (re.union (re.+ (str.to.re "o")) (re.* (str.to.re "ppp")))))))))))) (re.+ (re.+ (re.+ (re.+ (re.* (re.* (re.+ (re.union (re.+ (re.union (re.* (str.to.re "q")) (re.+ (str.to.re "rr")))) (re.* (re.+ (re.union (str.to.re "sss") (str.to.re "ttt")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)