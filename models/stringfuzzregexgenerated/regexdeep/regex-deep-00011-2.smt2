(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (re.* (re.+ (re.+ (re.+ (re.* (re.+ (re.union (re.+ (re.+ (str.to.re "0"))) (re.union (re.union (str.to.re "11") (str.to.re "22")) (re.* (str.to.re "3"))))))))))) (re.* (re.* (re.+ (re.union (re.union (re.* (re.* (re.+ (re.union (re.* (str.to.re "44")) (re.+ (str.to.re "55")))))) (re.+ (re.* (re.union (re.+ (re.+ (str.to.re "66"))) (re.* (re.union (str.to.re "7") (str.to.re "8"))))))) (re.* (re.+ (re.union (re.+ (re.union (re.+ (str.to.re "999")) (re.union (str.to.re "aaa") (str.to.re "bbb")))) (re.+ (re.* (re.union (str.to.re "c") (str.to.re "ddd")))))))))))) (re.+ (re.union (re.union (re.+ (re.union (re.union (re.union (re.+ (re.+ (re.union (re.+ (str.to.re "e")) (re.+ (str.to.re "f"))))) (re.+ (re.* (re.* (re.+ (str.to.re "gg")))))) (re.+ (re.+ (re.+ (re.+ (re.+ (str.to.re "h"))))))) (re.* (re.union (re.union (re.+ (re.* (re.union (str.to.re "ii") (str.to.re "j")))) (re.* (re.+ (re.+ (str.to.re "kkk"))))) (re.union (re.union (re.union (re.union (str.to.re "ll") (str.to.re "mm")) (re.union (str.to.re "nn") (str.to.re "o"))) (re.* (re.+ (str.to.re "p")))) (re.+ (re.union (re.union (str.to.re "qq") (str.to.re "r")) (re.union (str.to.re "s") (str.to.re "ttt"))))))))) (re.union (re.+ (re.+ (re.+ (re.+ (re.union (re.union (re.* (str.to.re "u")) (re.union (str.to.re "vvv") (str.to.re "w"))) (re.+ (re.union (str.to.re "xx") (str.to.re "y")))))))) (re.* (re.* (re.* (re.+ (re.+ (re.union (re.* (str.to.re "zzz")) (re.union (str.to.re "AAA") (str.to.re "B")))))))))) (re.+ (re.union (re.union (re.union (re.union (re.+ (re.* (re.* (re.* (str.to.re "C"))))) (re.union (re.* (re.+ (re.union (str.to.re "DDD") (str.to.re "EE")))) (re.union (re.union (re.* (str.to.re "FFF")) (re.* (str.to.re "GG"))) (re.* (re.+ (str.to.re "HHH")))))) (re.+ (re.+ (re.+ (re.union (re.+ (str.to.re "II")) (re.+ (str.to.re "JJJ"))))))) (re.* (re.union (re.union (re.union (re.+ (re.+ (str.to.re "KKK"))) (re.* (re.union (str.to.re "L") (str.to.re "MM")))) (re.union (re.+ (re.* (str.to.re "NN"))) (re.union (re.* (str.to.re "OOO")) (re.* (str.to.re "PP"))))) (re.union (re.+ (re.+ (re.+ (str.to.re "QQQ")))) (re.union (re.union (re.+ (str.to.re "RRR")) (re.+ (str.to.re "S"))) (re.* (re.* (str.to.re "T")))))))) (re.* (re.* (re.union (re.+ (re.* (re.* (re.* (str.to.re "UUU"))))) (re.+ (re.* (re.* (re.+ (str.to.re "VVV")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)