(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (re.union (re.union (re.+ (re.* (re.* (re.* (re.* (re.union (re.* (str.to.re "0")) (re.union (str.to.re "111") (str.to.re "222")))))))) (re.+ (re.+ (re.union (re.union (re.+ (re.union (re.union (str.to.re "333") (str.to.re "44")) (re.* (str.to.re "55")))) (re.union (re.* (re.* (str.to.re "66"))) (re.+ (re.+ (str.to.re "77"))))) (re.union (re.+ (re.* (re.* (str.to.re "88")))) (re.* (re.union (re.union (str.to.re "999") (str.to.re "aa")) (re.+ (str.to.re "bb"))))))))) (re.union (re.union (re.* (re.+ (re.+ (re.union (re.+ (re.* (str.to.re "cc"))) (re.* (re.+ (str.to.re "dd"))))))) (re.union (re.* (re.* (re.+ (re.+ (re.+ (str.to.re "eee")))))) (re.* (re.* (re.union (re.* (re.+ (str.to.re "fff"))) (re.* (re.* (str.to.re "ggg")))))))) (re.union (re.* (re.union (re.+ (re.union (re.+ (re.union (str.to.re "hhh") (str.to.re "iii"))) (re.union (re.+ (str.to.re "jj")) (re.* (str.to.re "k"))))) (re.union (re.+ (re.* (re.union (str.to.re "l") (str.to.re "mmm")))) (re.union (re.* (re.union (str.to.re "nn") (str.to.re "ooo"))) (re.+ (re.union (str.to.re "ppp") (str.to.re "qqq"))))))) (re.* (re.+ (re.union (re.union (re.* (re.* (str.to.re "rr"))) (re.union (re.* (str.to.re "ss")) (re.* (str.to.re "tt")))) (re.union (re.union (re.+ (str.to.re "u")) (re.* (str.to.re "v"))) (re.union (re.union (str.to.re "ww") (str.to.re "xxx")) (re.+ (str.to.re "y")))))))))) (re.union (re.+ (re.union (re.* (re.* (re.union (re.* (re.* (re.* (str.to.re "z")))) (re.+ (re.+ (re.* (str.to.re "A"))))))) (re.union (re.* (re.+ (re.+ (re.* (re.union (str.to.re "B") (str.to.re "CCC")))))) (re.+ (re.* (re.+ (re.+ (re.union (str.to.re "DD") (str.to.re "EEE"))))))))) (re.union (re.+ (re.union (re.+ (re.+ (re.* (re.union (re.* (str.to.re "FFF")) (re.union (str.to.re "G") (str.to.re "HH")))))) (re.* (re.* (re.* (re.union (re.* (str.to.re "III")) (re.union (str.to.re "JJ") (str.to.re "KK")))))))) (re.union (re.+ (re.* (re.* (re.* (re.* (re.union (str.to.re "LLL") (str.to.re "M"))))))) (re.union (re.* (re.+ (re.+ (re.* (re.* (str.to.re "NN")))))) (re.+ (re.* (re.union (re.+ (re.* (str.to.re "OO"))) (re.* (re.+ (str.to.re "P"))))))))))) (re.+ (re.union (re.+ (re.union (re.* (re.union (re.* (re.* (re.+ (re.union (str.to.re "Q") (str.to.re "RR"))))) (re.* (re.+ (re.union (re.union (str.to.re "SS") (str.to.re "T")) (re.* (str.to.re "UUU"))))))) (re.* (re.+ (re.* (re.union (re.union (re.union (str.to.re "VVV") (str.to.re "W")) (re.+ (str.to.re "XXX"))) (re.+ (re.* (str.to.re "YY"))))))))) (re.* (re.union (re.+ (re.union (re.+ (re.* (re.* (re.+ (str.to.re "Z"))))) (re.union (re.union (re.* (re.+ (str.to.re "!!!"))) (re.union (re.+ (str.to.re """""")) (re.* (str.to.re "#")))) (re.union (re.* (re.union (str.to.re "$$") (str.to.re "%%%"))) (re.* (re.union (str.to.re "&") (str.to.re "'''"))))))) (re.+ (re.+ (re.union (re.+ (re.* (re.+ (str.to.re "(((")))) (re.* (re.+ (re.+ (str.to.re ")))")))))))))))) (re.* (re.+ (re.union (re.* (re.* (re.* (re.* (re.+ (re.+ (re.* (re.union (str.to.re "*") (str.to.re "++"))))))))) (re.* (re.+ (re.* (re.* (re.union (re.* (re.union (re.+ (str.to.re ",,,")) (re.union (str.to.re "--") (str.to.re "...")))) (re.* (re.* (re.* (str.to.re "///")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)