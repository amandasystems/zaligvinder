(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.* (re.+ (re.+ (re.+ (re.union (re.* (re.union (re.union (re.+ (re.* (str.to.re "00"))) (re.+ (re.+ (str.to.re "1")))) (re.* (re.+ (re.+ (str.to.re "22")))))) (re.* (re.union (re.+ (re.+ (re.+ (str.to.re "33")))) (re.* (re.* (re.union (str.to.re "444") (str.to.re "555")))))))))))) (re.* (re.* (re.* (re.union (re.union (re.+ (re.union (re.+ (re.* (re.union (re.+ (str.to.re "666")) (re.+ (str.to.re "77"))))) (re.+ (re.union (re.union (re.* (str.to.re "888")) (re.* (str.to.re "99"))) (re.union (re.* (str.to.re "aa")) (re.union (str.to.re "bb") (str.to.re "cc"))))))) (re.* (re.* (re.+ (re.* (re.+ (re.union (str.to.re "dd") (str.to.re "eee")))))))) (re.* (re.+ (re.union (re.union (re.union (re.union (re.union (str.to.re "ff") (str.to.re "g")) (re.* (str.to.re "h"))) (re.* (re.union (str.to.re "ii") (str.to.re "j")))) (re.union (re.* (re.+ (str.to.re "kk"))) (re.+ (re.+ (str.to.re "l"))))) (re.union (re.+ (re.union (re.union (str.to.re "m") (str.to.re "nn")) (re.union (str.to.re "ooo") (str.to.re "ppp")))) (re.union (re.+ (re.union (str.to.re "qq") (str.to.re "rr"))) (re.union (re.+ (str.to.re "ss")) (re.+ (str.to.re "t")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)