(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (re.* (re.+ (re.* (re.* (re.union (re.* (re.* (re.union (re.union (str.to.re "0") (str.to.re "1")) (re.+ (str.to.re "2"))))) (re.union (re.* (re.union (re.+ (str.to.re "33")) (re.* (str.to.re "444")))) (re.+ (re.* (re.+ (str.to.re "55"))))))))))) (re.union (re.* (re.* (re.+ (re.union (re.union (re.* (re.* (re.union (re.union (str.to.re "66") (str.to.re "7")) (re.* (str.to.re "888"))))) (re.union (re.+ (re.+ (re.+ (str.to.re "999")))) (re.* (re.* (re.+ (str.to.re "a")))))) (re.* (re.* (re.+ (re.* (re.* (str.to.re "bbb")))))))))) (re.+ (re.union (re.+ (re.* (re.* (re.* (re.union (re.union (re.union (str.to.re "c") (str.to.re "dd")) (re.* (str.to.re "ee"))) (re.union (re.* (str.to.re "ff")) (re.union (str.to.re "gg") (str.to.re "hhh")))))))) (re.union (re.+ (re.union (re.union (re.union (re.+ (re.* (str.to.re "i"))) (re.+ (re.* (str.to.re "jjj")))) (re.union (re.union (re.+ (str.to.re "kkk")) (re.* (str.to.re "ll"))) (re.+ (re.union (str.to.re "mmm") (str.to.re "nnn"))))) (re.* (re.+ (re.union (re.* (str.to.re "o")) (re.+ (str.to.re "ppp"))))))) (re.* (re.union (re.union (re.* (re.* (re.union (str.to.re "qq") (str.to.re "rr")))) (re.+ (re.+ (re.union (str.to.re "s") (str.to.re "ttt"))))) (re.+ (re.union (re.union (re.union (str.to.re "uu") (str.to.re "vvv")) (re.+ (str.to.re "www"))) (re.+ (re.* (str.to.re "x")))))))))))) (re.* (re.* (re.+ (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (re.* (str.to.re "yyy"))) (re.+ (re.* (str.to.re "zz")))) (re.union (re.* (re.union (str.to.re "AAA") (str.to.re "BB"))) (re.union (re.* (str.to.re "CCC")) (re.union (str.to.re "DD") (str.to.re "EE"))))) (re.union (re.* (re.union (re.union (str.to.re "FF") (str.to.re "GG")) (re.* (str.to.re "HH")))) (re.+ (re.* (re.+ (str.to.re "II")))))) (re.union (re.* (re.+ (re.+ (re.+ (str.to.re "J"))))) (re.+ (re.* (re.union (re.* (str.to.re "KK")) (re.union (str.to.re "L") (str.to.re "MM"))))))) (re.union (re.union (re.* (re.+ (re.union (re.+ (str.to.re "N")) (re.+ (str.to.re "OO"))))) (re.+ (re.+ (re.* (re.+ (str.to.re "PP")))))) (re.* (re.union (re.union (re.union (re.* (str.to.re "QQ")) (re.* (str.to.re "RR"))) (re.* (re.+ (str.to.re "SSS")))) (re.* (re.+ (re.+ (str.to.re "TT")))))))) (re.union (re.* (re.* (re.+ (re.* (re.union (re.+ (str.to.re "UU")) (re.* (str.to.re "VV"))))))) (re.union (re.+ (re.union (re.union (re.union (re.+ (str.to.re "W")) (re.union (str.to.re "XX") (str.to.re "YY"))) (re.union (re.+ (str.to.re "ZZ")) (re.union (str.to.re "!") (str.to.re """""""")))) (re.+ (re.+ (re.+ (str.to.re "#")))))) (re.+ (re.* (re.union (re.+ (re.+ (str.to.re "$$$"))) (re.+ (re.+ (str.to.re "%%")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)