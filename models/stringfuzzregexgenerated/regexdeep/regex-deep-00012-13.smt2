(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.* (re.+ (re.* (re.+ (re.* (re.+ (re.+ (re.union (re.+ (re.+ (re.union (str.to.re "00") (str.to.re "111")))) (re.+ (re.union (re.+ (str.to.re "222")) (re.+ (str.to.re "33"))))))))))))) (re.+ (re.union (re.* (re.+ (re.* (re.union (re.+ (re.* (re.union (re.* (re.+ (re.+ (str.to.re "4")))) (re.+ (re.+ (re.union (str.to.re "555") (str.to.re "666"))))))) (re.* (re.* (re.* (re.+ (re.+ (re.+ (str.to.re "7"))))))))))) (re.* (re.+ (re.union (re.+ (re.union (re.+ (re.union (re.+ (re.union (re.* (str.to.re "88")) (re.* (str.to.re "9")))) (re.+ (re.union (re.+ (str.to.re "a")) (re.* (str.to.re "b")))))) (re.union (re.+ (re.* (re.union (re.union (str.to.re "ccc") (str.to.re "ddd")) (re.* (str.to.re "eee"))))) (re.* (re.* (re.+ (re.union (str.to.re "f") (str.to.re "ggg")))))))) (re.union (re.+ (re.* (re.union (re.union (re.+ (re.+ (str.to.re "hhh"))) (re.* (re.+ (str.to.re "i")))) (re.union (re.union (re.union (str.to.re "j") (str.to.re "kk")) (re.+ (str.to.re "l"))) (re.union (re.* (str.to.re "mmm")) (re.* (str.to.re "nn"))))))) (re.+ (re.union (re.* (re.+ (re.* (re.+ (str.to.re "oo"))))) (re.+ (re.* (re.* (re.* (str.to.re "ppp"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)