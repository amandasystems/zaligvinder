(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (re.union (re.union (re.+ (re.+ (re.union (re.union (re.* (re.union (re.* (re.union (str.to.re "00") (str.to.re "111"))) (re.* (re.+ (str.to.re "2"))))) (re.union (re.* (re.+ (re.+ (str.to.re "333")))) (re.+ (re.+ (re.* (str.to.re "444")))))) (re.+ (re.+ (re.+ (re.* (re.* (str.to.re "55"))))))))) (re.* (re.* (re.* (re.* (re.* (re.+ (re.* (re.* (str.to.re "66")))))))))) (re.+ (re.* (re.union (re.* (re.union (re.* (re.* (re.* (re.* (str.to.re "77"))))) (re.union (re.+ (re.+ (re.+ (str.to.re "888")))) (re.+ (re.union (re.+ (str.to.re "999")) (re.union (str.to.re "aaa") (str.to.re "bb"))))))) (re.union (re.union (re.+ (re.* (re.union (re.union (str.to.re "ccc") (str.to.re "d")) (re.+ (str.to.re "e"))))) (re.* (re.* (re.* (re.+ (str.to.re "f")))))) (re.+ (re.union (re.union (re.+ (re.union (str.to.re "ggg") (str.to.re "hh"))) (re.union (re.* (str.to.re "i")) (re.+ (str.to.re "jj")))) (re.union (re.* (re.union (str.to.re "k") (str.to.re "l"))) (re.+ (re.union (str.to.re "mm") (str.to.re "nn"))))))))))))) (re.+ (re.* (re.+ (re.+ (re.union (re.union (re.* (re.+ (re.+ (re.* (re.union (re.* (str.to.re "oo")) (re.* (str.to.re "p"))))))) (re.+ (re.+ (re.* (re.* (re.union (re.* (str.to.re "qqq")) (re.* (str.to.re "r")))))))) (re.union (re.* (re.union (re.union (re.union (re.+ (re.union (str.to.re "sss") (str.to.re "t"))) (re.+ (re.+ (str.to.re "u")))) (re.* (re.* (re.* (str.to.re "vvv"))))) (re.union (re.union (re.* (re.* (str.to.re "ww"))) (re.+ (re.+ (str.to.re "xx")))) (re.+ (re.union (re.+ (str.to.re "yyy")) (re.* (str.to.re "zz"))))))) (re.union (re.* (re.* (re.* (re.+ (re.+ (str.to.re "AA")))))) (re.+ (re.* (re.+ (re.+ (re.+ (str.to.re "BB"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)