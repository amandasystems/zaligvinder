(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (re.union (re.union (re.* (re.* (re.union (re.* (re.union (re.* (re.union (re.* (str.to.re "00")) (re.union (str.to.re "11") (str.to.re "222")))) (re.union (re.union (re.+ (str.to.re "33")) (re.+ (str.to.re "444"))) (re.+ (re.+ (str.to.re "5")))))) (re.* (re.+ (re.+ (re.union (re.union (str.to.re "66") (str.to.re "77")) (re.+ (str.to.re "88"))))))))) (re.* (re.* (re.* (re.+ (re.* (re.+ (re.* (re.+ (str.to.re "9")))))))))) (re.* (re.* (re.+ (re.* (re.+ (re.union (re.* (re.+ (re.union (str.to.re "aaa") (str.to.re "bb")))) (re.+ (re.union (re.* (str.to.re "c")) (re.+ (str.to.re "d"))))))))))))) (re.* (re.+ (re.+ (re.union (re.union (re.* (re.+ (re.* (re.+ (re.+ (re.+ (re.union (str.to.re "ee") (str.to.re "f")))))))) (re.union (re.+ (re.* (re.+ (re.union (re.* (re.union (str.to.re "gg") (str.to.re "hh"))) (re.+ (re.union (str.to.re "iii") (str.to.re "j"))))))) (re.union (re.+ (re.+ (re.* (re.union (re.union (str.to.re "k") (str.to.re "l")) (re.* (str.to.re "mm")))))) (re.union (re.union (re.+ (re.* (re.+ (str.to.re "nnn")))) (re.+ (re.* (re.+ (str.to.re "o"))))) (re.+ (re.union (re.* (re.union (str.to.re "p") (str.to.re "qq"))) (re.* (re.* (str.to.re "rrr"))))))))) (re.* (re.union (re.union (re.+ (re.union (re.+ (re.+ (re.+ (str.to.re "ss")))) (re.+ (re.* (re.union (str.to.re "ttt") (str.to.re "uu")))))) (re.union (re.* (re.+ (re.+ (re.union (str.to.re "vv") (str.to.re "ww"))))) (re.* (re.* (re.+ (re.+ (str.to.re "xx"))))))) (re.union (re.* (re.+ (re.* (re.+ (re.* (str.to.re "y")))))) (re.union (re.* (re.+ (re.+ (re.union (str.to.re "zz") (str.to.re "AA"))))) (re.union (re.* (re.union (re.* (str.to.re "B")) (re.union (str.to.re "C") (str.to.re "DDD")))) (re.+ (re.union (re.union (str.to.re "E") (str.to.re "F")) (re.+ (str.to.re "GGG"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)