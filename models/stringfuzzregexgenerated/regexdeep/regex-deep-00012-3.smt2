(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (re.+ (re.+ (re.* (re.union (re.union (re.+ (re.* (re.+ (re.union (re.union (str.to.re "00") (str.to.re "1")) (re.* (str.to.re "2")))))) (re.+ (re.+ (re.union (re.+ (re.union (str.to.re "333") (str.to.re "4"))) (re.* (re.+ (str.to.re "55"))))))) (re.* (re.* (re.union (re.union (re.* (re.* (str.to.re "6"))) (re.union (re.* (str.to.re "777")) (re.* (str.to.re "88")))) (re.union (re.+ (re.+ (str.to.re "9"))) (re.* (re.* (str.to.re "aaa")))))))))))) (re.+ (re.* (re.* (re.* (re.union (re.+ (re.+ (re.+ (re.union (re.* (re.union (str.to.re "bb") (str.to.re "cc"))) (re.union (re.union (str.to.re "ddd") (str.to.re "e")) (re.union (str.to.re "fff") (str.to.re "gg"))))))) (re.+ (re.union (re.* (re.union (re.* (re.+ (str.to.re "hhh"))) (re.union (re.+ (str.to.re "i")) (re.+ (str.to.re "jj"))))) (re.* (re.* (re.union (re.* (str.to.re "kkk")) (re.union (str.to.re "ll") (str.to.re "mmm"))))))))))))) (re.* (re.* (re.* (re.* (re.union (re.+ (re.union (re.* (re.+ (re.union (re.+ (re.* (str.to.re "n"))) (re.* (re.* (str.to.re "o")))))) (re.+ (re.+ (re.union (re.union (re.* (str.to.re "pp")) (re.union (str.to.re "qq") (str.to.re "r"))) (re.* (re.* (str.to.re "sss")))))))) (re.union (re.+ (re.union (re.union (re.* (re.union (re.* (str.to.re "tt")) (re.* (str.to.re "uuu")))) (re.+ (re.union (re.* (str.to.re "v")) (re.+ (str.to.re "www"))))) (re.+ (re.+ (re.+ (re.union (str.to.re "xxx") (str.to.re "y"))))))) (re.* (re.union (re.union (re.union (re.+ (re.* (str.to.re "zzz"))) (re.* (re.* (str.to.re "AAA")))) (re.+ (re.* (re.* (str.to.re "B"))))) (re.+ (re.* (re.* (re.union (str.to.re "CC") (str.to.re "DDD"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)