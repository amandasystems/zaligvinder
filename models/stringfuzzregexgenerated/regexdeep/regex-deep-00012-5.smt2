(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.union (re.+ (re.+ (re.union (re.* (re.+ (re.union (re.+ (re.+ (re.* (re.+ (str.to.re "000"))))) (re.* (re.+ (re.+ (re.* (str.to.re "11")))))))) (re.* (re.+ (re.union (re.+ (re.union (re.* (re.+ (str.to.re "222"))) (re.* (re.* (str.to.re "333"))))) (re.union (re.union (re.+ (re.* (str.to.re "4"))) (re.+ (re.* (str.to.re "55")))) (re.union (re.union (re.+ (str.to.re "66")) (re.union (str.to.re "77") (str.to.re "88"))) (re.union (re.union (str.to.re "9") (str.to.re "aa")) (re.* (str.to.re "b"))))))))))) (re.+ (re.+ (re.* (re.+ (re.union (re.+ (re.* (re.union (re.union (re.* (str.to.re "cc")) (re.+ (str.to.re "ddd"))) (re.+ (re.* (str.to.re "e")))))) (re.* (re.union (re.* (re.union (re.union (str.to.re "ff") (str.to.re "gg")) (re.* (str.to.re "hhh")))) (re.* (re.+ (re.+ (str.to.re "ii"))))))))))))) (re.+ (re.+ (re.* (re.+ (re.+ (re.union (re.+ (re.+ (re.* (re.union (re.union (re.+ (str.to.re "j")) (re.union (str.to.re "k") (str.to.re "ll"))) (re.union (re.* (str.to.re "mmm")) (re.+ (str.to.re "n"))))))) (re.+ (re.* (re.union (re.+ (re.+ (re.+ (str.to.re "o")))) (re.* (re.union (re.+ (str.to.re "pp")) (re.+ (str.to.re "qq"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)