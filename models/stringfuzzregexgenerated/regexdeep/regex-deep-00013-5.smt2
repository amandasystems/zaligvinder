(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.+ (re.+ (re.* (re.+ (re.union (re.union (re.* (re.+ (re.* (re.union (re.* (re.+ (str.to.re "0"))) (re.union (re.+ (str.to.re "11")) (re.* (str.to.re "22"))))))) (re.union (re.* (re.union (re.* (re.+ (re.* (str.to.re "3")))) (re.+ (re.+ (re.+ (str.to.re "444")))))) (re.union (re.* (re.union (re.union (re.* (str.to.re "55")) (re.union (str.to.re "666") (str.to.re "7"))) (re.+ (re.union (str.to.re "8") (str.to.re "99"))))) (re.union (re.union (re.union (re.union (str.to.re "aa") (str.to.re "bb")) (re.+ (str.to.re "c"))) (re.union (re.union (str.to.re "d") (str.to.re "ee")) (re.* (str.to.re "f")))) (re.* (re.union (re.+ (str.to.re "gg")) (re.* (str.to.re "hh")))))))) (re.union (re.* (re.+ (re.union (re.+ (re.+ (re.+ (str.to.re "iii")))) (re.union (re.+ (re.+ (str.to.re "jj"))) (re.+ (re.union (str.to.re "kkk") (str.to.re "l"))))))) (re.* (re.+ (re.* (re.union (re.+ (re.* (str.to.re "m"))) (re.+ (re.* (str.to.re "n")))))))))))))) (re.* (re.union (re.+ (re.+ (re.+ (re.* (re.* (re.union (re.* (re.+ (re.union (re.+ (re.* (str.to.re "ooo"))) (re.+ (re.+ (str.to.re "ppp")))))) (re.+ (re.* (re.union (re.* (re.* (str.to.re "qqq"))) (re.union (re.+ (str.to.re "rrr")) (re.+ (str.to.re "s")))))))))))) (re.+ (re.union (re.+ (re.+ (re.+ (re.union (re.+ (re.* (re.* (re.* (re.* (str.to.re "t")))))) (re.union (re.* (re.+ (re.+ (re.+ (str.to.re "uu"))))) (re.union (re.+ (re.+ (re.union (str.to.re "vv") (str.to.re "www")))) (re.union (re.union (re.* (str.to.re "x")) (re.union (str.to.re "y") (str.to.re "zzz"))) (re.+ (re.union (str.to.re "AAA") (str.to.re "B")))))))))) (re.union (re.+ (re.union (re.+ (re.* (re.+ (re.+ (re.union (re.+ (str.to.re "C")) (re.* (str.to.re "DDD"))))))) (re.union (re.* (re.* (re.* (re.union (re.union (str.to.re "EE") (str.to.re "FF")) (re.* (str.to.re "GG")))))) (re.union (re.+ (re.+ (re.* (re.+ (str.to.re "HHH"))))) (re.* (re.* (re.+ (re.* (str.to.re "I"))))))))) (re.union (re.+ (re.+ (re.union (re.* (re.* (re.union (re.* (str.to.re "JJ")) (re.+ (str.to.re "KK"))))) (re.* (re.union (re.union (re.union (str.to.re "LLL") (str.to.re "MMM")) (re.+ (str.to.re "NN"))) (re.* (re.+ (str.to.re "O")))))))) (re.+ (re.* (re.+ (re.union (re.+ (re.* (re.+ (str.to.re "PP")))) (re.* (re.union (re.union (str.to.re "QQQ") (str.to.re "R")) (re.union (str.to.re "S") (str.to.re "TTT")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)