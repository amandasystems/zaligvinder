(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.* (re.+ (re.* (re.union (re.+ (re.* (re.union (re.union (re.union (re.union (re.union (re.+ (re.+ (str.to.re "000"))) (re.* (re.+ (str.to.re "11")))) (re.* (re.* (re.+ (str.to.re "2"))))) (re.+ (re.union (re.union (re.union (str.to.re "33") (str.to.re "4")) (re.* (str.to.re "555"))) (re.union (re.* (str.to.re "6")) (re.+ (str.to.re "7")))))) (re.union (re.+ (re.* (re.+ (re.union (str.to.re "8") (str.to.re "9"))))) (re.+ (re.+ (re.+ (re.union (str.to.re "a") (str.to.re "b"))))))) (re.union (re.* (re.+ (re.* (re.* (re.union (str.to.re "cc") (str.to.re "d")))))) (re.union (re.union (re.union (re.+ (re.union (str.to.re "e") (str.to.re "ff"))) (re.union (re.+ (str.to.re "g")) (re.* (str.to.re "hh")))) (re.+ (re.union (re.+ (str.to.re "iii")) (re.* (str.to.re "jjj"))))) (re.* (re.union (re.+ (re.+ (str.to.re "k"))) (re.union (re.* (str.to.re "ll")) (re.+ (str.to.re "m")))))))))) (re.* (re.* (re.union (re.+ (re.* (re.union (re.* (re.union (re.+ (str.to.re "n")) (re.union (str.to.re "o") (str.to.re "pp")))) (re.* (re.union (re.union (str.to.re "q") (str.to.re "r")) (re.* (str.to.re "s"))))))) (re.+ (re.union (re.+ (re.union (re.union (re.+ (str.to.re "tt")) (re.* (str.to.re "u"))) (re.union (re.union (str.to.re "vvv") (str.to.re "ww")) (re.+ (str.to.re "xx"))))) (re.union (re.* (re.* (re.union (str.to.re "y") (str.to.re "zzz")))) (re.+ (re.* (re.+ (str.to.re "AAA"))))))))))))))) (re.* (re.union (re.+ (re.+ (re.union (re.union (re.union (re.* (re.union (re.+ (re.* (re.union (re.* (re.* (str.to.re "B"))) (re.union (re.* (str.to.re "CC")) (re.* (str.to.re "DDD")))))) (re.union (re.+ (re.+ (re.* (re.union (str.to.re "EE") (str.to.re "FFF"))))) (re.+ (re.* (re.union (re.+ (str.to.re "GG")) (re.+ (str.to.re "HH")))))))) (re.* (re.union (re.+ (re.* (re.+ (re.+ (re.+ (str.to.re "II")))))) (re.union (re.* (re.+ (re.union (re.* (str.to.re "JJJ")) (re.union (str.to.re "KK") (str.to.re "LL"))))) (re.union (re.union (re.+ (re.union (str.to.re "MMM") (str.to.re "N"))) (re.* (re.* (str.to.re "OOO")))) (re.* (re.+ (re.+ (str.to.re "PPP"))))))))) (re.* (re.+ (re.* (re.union (re.* (re.* (re.union (re.+ (str.to.re "QQQ")) (re.* (str.to.re "RRR"))))) (re.* (re.+ (re.union (re.+ (str.to.re "S")) (re.union (str.to.re "TTT") (str.to.re "U")))))))))) (re.union (re.+ (re.union (re.* (re.+ (re.union (re.+ (re.union (re.+ (str.to.re "VV")) (re.+ (str.to.re "WWW")))) (re.+ (re.+ (re.+ (str.to.re "XX"))))))) (re.union (re.union (re.* (re.* (re.union (re.+ (str.to.re "Y")) (re.union (str.to.re "Z") (str.to.re "!!"))))) (re.+ (re.* (re.union (re.union (str.to.re """") (str.to.re "##")) (re.* (str.to.re "$$$")))))) (re.union (re.union (re.union (re.union (re.union (str.to.re "%") (str.to.re "&&")) (re.* (str.to.re "''"))) (re.+ (re.* (str.to.re "(")))) (re.* (re.* (re.union (str.to.re ")") (str.to.re "*"))))) (re.+ (re.+ (re.union (re.* (str.to.re "+")) (re.* (str.to.re ",,"))))))))) (re.union (re.+ (re.* (re.+ (re.union (re.union (re.+ (re.union (str.to.re "---") (str.to.re "."))) (re.union (re.* (str.to.re "/")) (re.union (str.to.re "::") (str.to.re ";;;")))) (re.+ (re.* (re.* (str.to.re "<")))))))) (re.+ (re.+ (re.+ (re.+ (re.+ (re.union (re.* (str.to.re "==")) (re.* (str.to.re ">"))))))))))))) (re.union (re.+ (re.union (re.* (re.* (re.* (re.+ (re.* (re.+ (re.* (re.union (re.* (str.to.re "?")) (re.+ (str.to.re "@")))))))))) (re.* (re.+ (re.* (re.* (re.+ (re.* (re.+ (re.+ (re.* (str.to.re "[[")))))))))))) (re.+ (re.+ (re.+ (re.union (re.union (re.* (re.union (re.* (re.union (re.union (re.* (str.to.re "\\\\\\")) (re.* (str.to.re "]]]"))) (re.+ (re.* (str.to.re "^^"))))) (re.union (re.* (re.union (re.* (str.to.re "__")) (re.+ (str.to.re "``")))) (re.+ (re.+ (re.* (str.to.re "{{{"))))))) (re.* (re.* (re.union (re.+ (re.* (re.* (str.to.re "|")))) (re.union (re.union (re.* (str.to.re "}}}")) (re.union (str.to.re "~~") (str.to.re "00"))) (re.union (re.* (str.to.re "1")) (re.union (str.to.re "222") (str.to.re "33")))))))) (re.* (re.* (re.+ (re.+ (re.union (re.* (re.* (str.to.re "444"))) (re.* (re.union (str.to.re "5") (str.to.re "6"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)