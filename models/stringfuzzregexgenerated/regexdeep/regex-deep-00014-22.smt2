(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (re.* (re.* (re.+ (re.union (re.union (re.+ (re.union (re.union (re.union (re.+ (re.+ (re.+ (str.to.re "0")))) (re.* (re.+ (re.* (str.to.re "11"))))) (re.union (re.+ (re.+ (re.+ (str.to.re "2")))) (re.+ (re.union (re.+ (str.to.re "333")) (re.union (str.to.re "444") (str.to.re "55")))))) (re.union (re.union (re.+ (re.+ (re.union (str.to.re "66") (str.to.re "7")))) (re.+ (re.union (re.union (str.to.re "888") (str.to.re "999")) (re.+ (str.to.re "a"))))) (re.* (re.union (re.* (re.union (str.to.re "bbb") (str.to.re "ccc"))) (re.+ (re.+ (str.to.re "ddd")))))))) (re.* (re.* (re.union (re.+ (re.union (re.union (re.union (str.to.re "e") (str.to.re "f")) (re.+ (str.to.re "g"))) (re.union (re.* (str.to.re "hh")) (re.* (str.to.re "iii"))))) (re.union (re.* (re.+ (re.union (str.to.re "jjj") (str.to.re "kkk")))) (re.+ (re.* (re.+ (str.to.re "ll"))))))))) (re.* (re.+ (re.+ (re.+ (re.+ (re.* (re.+ (re.* (str.to.re "mm"))))))))))))))) (re.* (re.* (re.union (re.* (re.* (re.union (re.union (re.+ (re.* (re.* (re.union (re.+ (re.* (re.union (str.to.re "nn") (str.to.re "oo")))) (re.+ (re.+ (re.union (str.to.re "pp") (str.to.re "q")))))))) (re.* (re.union (re.* (re.+ (re.* (re.+ (re.+ (str.to.re "rr")))))) (re.union (re.* (re.* (re.* (re.* (str.to.re "s"))))) (re.* (re.union (re.+ (re.+ (str.to.re "tt"))) (re.* (re.+ (str.to.re "u"))))))))) (re.+ (re.* (re.+ (re.* (re.union (re.* (re.union (re.* (str.to.re "v")) (re.* (str.to.re "www")))) (re.union (re.+ (re.* (str.to.re "x"))) (re.+ (re.union (str.to.re "y") (str.to.re "z")))))))))))) (re.* (re.+ (re.+ (re.* (re.union (re.union (re.* (re.* (re.+ (re.union (re.+ (str.to.re "AA")) (re.+ (str.to.re "BBB")))))) (re.union (re.+ (re.union (re.* (re.union (str.to.re "CC") (str.to.re "D"))) (re.union (re.+ (str.to.re "EE")) (re.+ (str.to.re "FF"))))) (re.union (re.+ (re.* (re.+ (str.to.re "GGG")))) (re.union (re.+ (re.union (str.to.re "HH") (str.to.re "III"))) (re.* (re.union (str.to.re "J") (str.to.re "KKK"))))))) (re.* (re.union (re.+ (re.union (re.union (re.+ (str.to.re "LL")) (re.* (str.to.re "MMM"))) (re.union (re.union (str.to.re "NNN") (str.to.re "OOO")) (re.union (str.to.re "PP") (str.to.re "Q"))))) (re.+ (re.union (re.union (re.+ (str.to.re "RRR")) (re.union (str.to.re "SS") (str.to.re "TT"))) (re.* (re.* (str.to.re "U"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)