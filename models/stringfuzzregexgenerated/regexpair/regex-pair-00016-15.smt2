(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (str.to.re "000"))) (re.++ (re.* (re.+ (str.to.re "1"))) (re.++ (re.union (re.union (str.to.re "222") (str.to.re "333")) (re.+ (str.to.re "44"))) (re.++ (re.* (re.* (str.to.re "5"))) (re.++ (re.union (re.* (str.to.re "6")) (re.union (str.to.re "777") (str.to.re "8"))) (re.++ (re.union (re.union (str.to.re "99") (str.to.re "aaa")) (re.union (str.to.re "bb") (str.to.re "ccc"))) (re.++ (re.* (re.* (str.to.re "d"))) (re.++ (re.* (re.* (str.to.re "e"))) (re.++ (re.union (re.union (str.to.re "ff") (str.to.re "gg")) (re.+ (str.to.re "h"))) (re.++ (re.* (re.* (str.to.re "iii"))) (re.++ (re.* (re.union (str.to.re "jj") (str.to.re "kkk"))) (re.++ (re.* (re.* (str.to.re "l"))) (re.++ (re.+ (re.+ (str.to.re "m"))) (re.++ (re.+ (re.union (str.to.re "n") (str.to.re "ooo"))) (re.++ (re.union (re.* (str.to.re "ppp")) (re.+ (str.to.re "q"))) (re.+ (re.union (str.to.re "rrr") (str.to.re "sss"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.* (re.union (str.to.re "0") (str.to.re "1"))) (re.++ (re.* (re.union (str.to.re "222") (str.to.re "333"))) (re.++ (re.* (re.* (str.to.re "444"))) (re.++ (re.* (re.union (str.to.re "55") (str.to.re "666"))) (re.++ (re.* (re.* (str.to.re "77"))) (re.++ (re.+ (re.union (str.to.re "888") (str.to.re "9"))) (re.++ (re.* (re.* (str.to.re "aaa"))) (re.++ (re.* (re.* (str.to.re "b"))) (re.++ (re.+ (re.* (str.to.re "cc"))) (re.++ (re.* (re.+ (str.to.re "d"))) (re.++ (re.* (re.union (str.to.re "eee") (str.to.re "fff"))) (re.++ (re.union (re.+ (str.to.re "ggg")) (re.union (str.to.re "h") (str.to.re "i"))) (re.++ (re.union (re.union (str.to.re "j") (str.to.re "k")) (re.union (str.to.re "lll") (str.to.re "mm"))) (re.++ (re.+ (re.union (str.to.re "nnn") (str.to.re "o"))) (re.++ (re.* (re.* (str.to.re "pp"))) (re.* (re.* (str.to.re "qqq")))))))))))))))))))))
(check-sat)