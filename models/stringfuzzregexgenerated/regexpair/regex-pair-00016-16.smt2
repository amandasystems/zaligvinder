(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.* (str.to.re "0")) (re.* (str.to.re "11"))) (re.++ (re.union (re.* (str.to.re "222")) (re.* (str.to.re "33"))) (re.++ (re.* (re.* (str.to.re "444"))) (re.++ (re.+ (re.+ (str.to.re "555"))) (re.++ (re.union (re.+ (str.to.re "66")) (re.* (str.to.re "7"))) (re.++ (re.* (re.* (str.to.re "888"))) (re.++ (re.* (re.* (str.to.re "99"))) (re.++ (re.union (re.union (str.to.re "a") (str.to.re "bbb")) (re.union (str.to.re "c") (str.to.re "dd"))) (re.++ (re.union (re.+ (str.to.re "ee")) (re.union (str.to.re "fff") (str.to.re "ggg"))) (re.++ (re.+ (re.+ (str.to.re "h"))) (re.++ (re.+ (re.+ (str.to.re "ii"))) (re.++ (re.* (re.+ (str.to.re "j"))) (re.++ (re.union (re.+ (str.to.re "k")) (re.+ (str.to.re "ll"))) (re.++ (re.+ (re.+ (str.to.re "mm"))) (re.++ (re.+ (re.* (str.to.re "n"))) (re.union (re.* (str.to.re "ooo")) (re.+ (str.to.re "ppp"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.union (re.+ (str.to.re "0")) (re.union (str.to.re "111") (str.to.re "22"))) (re.++ (re.union (re.* (str.to.re "33")) (re.* (str.to.re "444"))) (re.++ (re.+ (re.union (str.to.re "55") (str.to.re "66"))) (re.++ (re.* (re.union (str.to.re "77") (str.to.re "8"))) (re.++ (re.* (re.+ (str.to.re "9"))) (re.++ (re.* (re.union (str.to.re "a") (str.to.re "bbb"))) (re.++ (re.+ (re.* (str.to.re "ccc"))) (re.++ (re.+ (re.+ (str.to.re "d"))) (re.++ (re.union (re.union (str.to.re "ee") (str.to.re "f")) (re.+ (str.to.re "ggg"))) (re.++ (re.+ (re.+ (str.to.re "hhh"))) (re.++ (re.* (re.union (str.to.re "i") (str.to.re "jj"))) (re.++ (re.+ (re.* (str.to.re "kk"))) (re.++ (re.* (re.* (str.to.re "ll"))) (re.++ (re.+ (re.* (str.to.re "mmm"))) (re.++ (re.* (re.+ (str.to.re "nn"))) (re.* (re.+ (str.to.re "ooo")))))))))))))))))))))
(check-sat)