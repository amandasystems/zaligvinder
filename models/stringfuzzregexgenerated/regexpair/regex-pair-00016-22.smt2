(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.+ (str.to.re "0"))) (re.++ (re.* (re.* (str.to.re "1"))) (re.++ (re.union (re.union (str.to.re "22") (str.to.re "33")) (re.union (str.to.re "444") (str.to.re "5"))) (re.++ (re.* (re.union (str.to.re "6") (str.to.re "77"))) (re.++ (re.* (re.+ (str.to.re "88"))) (re.++ (re.* (re.+ (str.to.re "99"))) (re.++ (re.+ (re.+ (str.to.re "aaa"))) (re.++ (re.+ (re.+ (str.to.re "bb"))) (re.++ (re.union (re.union (str.to.re "cc") (str.to.re "ddd")) (re.union (str.to.re "ee") (str.to.re "f"))) (re.++ (re.* (re.union (str.to.re "gg") (str.to.re "hh"))) (re.++ (re.* (re.union (str.to.re "i") (str.to.re "jj"))) (re.++ (re.+ (re.* (str.to.re "k"))) (re.++ (re.union (re.+ (str.to.re "l")) (re.* (str.to.re "mm"))) (re.++ (re.* (re.* (str.to.re "nnn"))) (re.++ (re.union (re.* (str.to.re "o")) (re.union (str.to.re "p") (str.to.re "qqq"))) (re.+ (re.union (str.to.re "rr") (str.to.re "s"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.+ (re.* (str.to.re "000"))) (re.++ (re.* (re.union (str.to.re "111") (str.to.re "22"))) (re.++ (re.* (re.* (str.to.re "3"))) (re.++ (re.union (re.union (str.to.re "444") (str.to.re "5")) (re.+ (str.to.re "6"))) (re.++ (re.* (re.union (str.to.re "777") (str.to.re "88"))) (re.++ (re.* (re.+ (str.to.re "99"))) (re.++ (re.* (re.+ (str.to.re "aaa"))) (re.++ (re.* (re.union (str.to.re "b") (str.to.re "cc"))) (re.++ (re.* (re.+ (str.to.re "dd"))) (re.++ (re.+ (re.union (str.to.re "ee") (str.to.re "f"))) (re.++ (re.+ (re.* (str.to.re "g"))) (re.++ (re.union (re.+ (str.to.re "hhh")) (re.* (str.to.re "i"))) (re.++ (re.+ (re.union (str.to.re "jj") (str.to.re "k"))) (re.++ (re.* (re.* (str.to.re "ll"))) (re.++ (re.* (re.+ (str.to.re "mmm"))) (re.+ (re.union (str.to.re "nnn") (str.to.re "oo")))))))))))))))))))))
(check-sat)