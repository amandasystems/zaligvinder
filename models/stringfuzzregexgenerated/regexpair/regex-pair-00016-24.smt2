(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (str.to.re "000"))) (re.++ (re.union (re.+ (str.to.re "11")) (re.* (str.to.re "222"))) (re.++ (re.+ (re.union (str.to.re "333") (str.to.re "444"))) (re.++ (re.union (re.* (str.to.re "55")) (re.+ (str.to.re "666"))) (re.++ (re.+ (re.+ (str.to.re "77"))) (re.++ (re.+ (re.+ (str.to.re "8"))) (re.++ (re.+ (re.+ (str.to.re "9"))) (re.++ (re.* (re.+ (str.to.re "a"))) (re.++ (re.union (re.+ (str.to.re "bbb")) (re.+ (str.to.re "cc"))) (re.++ (re.union (re.+ (str.to.re "d")) (re.* (str.to.re "eee"))) (re.++ (re.+ (re.union (str.to.re "f") (str.to.re "g"))) (re.++ (re.* (re.union (str.to.re "hh") (str.to.re "i"))) (re.++ (re.* (re.* (str.to.re "jjj"))) (re.++ (re.* (re.union (str.to.re "kk") (str.to.re "lll"))) (re.++ (re.+ (re.+ (str.to.re "mmm"))) (re.+ (re.* (str.to.re "nn"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.union (re.* (str.to.re "00")) (re.* (str.to.re "1"))) (re.++ (re.+ (re.+ (str.to.re "2"))) (re.++ (re.union (re.union (str.to.re "3") (str.to.re "44")) (re.* (str.to.re "555"))) (re.++ (re.* (re.+ (str.to.re "6"))) (re.++ (re.union (re.union (str.to.re "777") (str.to.re "88")) (re.+ (str.to.re "9"))) (re.++ (re.* (re.* (str.to.re "a"))) (re.++ (re.* (re.* (str.to.re "bbb"))) (re.++ (re.* (re.union (str.to.re "c") (str.to.re "d"))) (re.++ (re.* (re.union (str.to.re "ee") (str.to.re "f"))) (re.++ (re.* (re.union (str.to.re "gg") (str.to.re "hhh"))) (re.++ (re.union (re.union (str.to.re "i") (str.to.re "jj")) (re.union (str.to.re "k") (str.to.re "ll"))) (re.++ (re.+ (re.* (str.to.re "m"))) (re.++ (re.union (re.union (str.to.re "nn") (str.to.re "ooo")) (re.union (str.to.re "ppp") (str.to.re "qqq"))) (re.++ (re.union (re.union (str.to.re "r") (str.to.re "sss")) (re.* (str.to.re "t"))) (re.++ (re.union (re.+ (str.to.re "u")) (re.+ (str.to.re "vvv"))) (re.+ (re.+ (str.to.re "ww")))))))))))))))))))))
(check-sat)