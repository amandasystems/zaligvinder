(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (str.to.re "000")) (re.+ (str.to.re "111"))) (re.++ (re.+ (re.* (str.to.re "222"))) (re.++ (re.+ (re.* (str.to.re "3"))) (re.++ (re.* (re.+ (str.to.re "4"))) (re.++ (re.+ (re.* (str.to.re "5"))) (re.++ (re.union (re.+ (str.to.re "6")) (re.union (str.to.re "7") (str.to.re "888"))) (re.++ (re.union (re.union (str.to.re "9") (str.to.re "a")) (re.* (str.to.re "bb"))) (re.++ (re.* (re.union (str.to.re "c") (str.to.re "dd"))) (re.++ (re.+ (re.* (str.to.re "ee"))) (re.++ (re.* (re.+ (str.to.re "f"))) (re.++ (re.+ (re.+ (str.to.re "ggg"))) (re.++ (re.+ (re.* (str.to.re "h"))) (re.++ (re.+ (re.union (str.to.re "iii") (str.to.re "j"))) (re.++ (re.+ (re.union (str.to.re "k") (str.to.re "l"))) (re.++ (re.* (re.* (str.to.re "mm"))) (re.+ (re.* (str.to.re "nn"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.union (re.+ (str.to.re "000")) (re.* (str.to.re "11"))) (re.++ (re.+ (re.union (str.to.re "22") (str.to.re "33"))) (re.++ (re.+ (re.union (str.to.re "444") (str.to.re "555"))) (re.++ (re.+ (re.+ (str.to.re "66"))) (re.++ (re.* (re.+ (str.to.re "7"))) (re.++ (re.+ (re.union (str.to.re "88") (str.to.re "99"))) (re.++ (re.+ (re.+ (str.to.re "a"))) (re.++ (re.union (re.+ (str.to.re "b")) (re.+ (str.to.re "ccc"))) (re.++ (re.+ (re.union (str.to.re "dd") (str.to.re "eee"))) (re.++ (re.+ (re.+ (str.to.re "fff"))) (re.++ (re.union (re.* (str.to.re "ggg")) (re.union (str.to.re "hhh") (str.to.re "i"))) (re.++ (re.union (re.+ (str.to.re "jj")) (re.* (str.to.re "k"))) (re.++ (re.union (re.union (str.to.re "l") (str.to.re "m")) (re.union (str.to.re "nn") (str.to.re "o"))) (re.++ (re.union (re.* (str.to.re "ppp")) (re.+ (str.to.re "qqq"))) (re.++ (re.* (re.* (str.to.re "rrr"))) (re.union (re.* (str.to.re "ss")) (re.* (str.to.re "t")))))))))))))))))))))
(check-sat)