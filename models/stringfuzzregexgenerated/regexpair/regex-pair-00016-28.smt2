(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (str.to.re "00")) (re.* (str.to.re "1"))) (re.++ (re.union (re.union (str.to.re "2") (str.to.re "3")) (re.+ (str.to.re "4"))) (re.++ (re.* (re.* (str.to.re "555"))) (re.++ (re.* (re.union (str.to.re "6") (str.to.re "777"))) (re.++ (re.+ (re.union (str.to.re "88") (str.to.re "999"))) (re.++ (re.* (re.* (str.to.re "a"))) (re.++ (re.+ (re.* (str.to.re "bbb"))) (re.++ (re.+ (re.union (str.to.re "c") (str.to.re "dd"))) (re.++ (re.+ (re.* (str.to.re "eee"))) (re.++ (re.union (re.* (str.to.re "fff")) (re.* (str.to.re "g"))) (re.++ (re.+ (re.* (str.to.re "hhh"))) (re.++ (re.+ (re.union (str.to.re "i") (str.to.re "jjj"))) (re.++ (re.union (re.union (str.to.re "kk") (str.to.re "lll")) (re.* (str.to.re "mmm"))) (re.++ (re.+ (re.+ (str.to.re "n"))) (re.++ (re.+ (re.union (str.to.re "ooo") (str.to.re "p"))) (re.* (re.+ (str.to.re "qqq"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.+ (re.* (str.to.re "000"))) (re.++ (re.* (re.* (str.to.re "11"))) (re.++ (re.* (re.+ (str.to.re "222"))) (re.++ (re.union (re.union (str.to.re "3") (str.to.re "444")) (re.* (str.to.re "5"))) (re.++ (re.union (re.union (str.to.re "666") (str.to.re "77")) (re.* (str.to.re "8"))) (re.++ (re.union (re.union (str.to.re "99") (str.to.re "a")) (re.* (str.to.re "b"))) (re.++ (re.+ (re.union (str.to.re "c") (str.to.re "ddd"))) (re.++ (re.union (re.union (str.to.re "ee") (str.to.re "f")) (re.+ (str.to.re "ggg"))) (re.++ (re.* (re.+ (str.to.re "hh"))) (re.++ (re.union (re.+ (str.to.re "i")) (re.union (str.to.re "j") (str.to.re "kk"))) (re.++ (re.union (re.* (str.to.re "ll")) (re.union (str.to.re "m") (str.to.re "n"))) (re.++ (re.* (re.union (str.to.re "o") (str.to.re "p"))) (re.++ (re.+ (re.+ (str.to.re "qq"))) (re.++ (re.* (re.+ (str.to.re "rrr"))) (re.++ (re.+ (re.union (str.to.re "sss") (str.to.re "tt"))) (re.* (re.* (str.to.re "u")))))))))))))))))))))
(check-sat)