(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (str.to.re "000"))) (re.++ (re.+ (re.union (str.to.re "11") (str.to.re "222"))) (re.++ (re.+ (re.+ (str.to.re "33"))) (re.++ (re.* (re.union (str.to.re "4") (str.to.re "555"))) (re.++ (re.union (re.+ (str.to.re "6")) (re.union (str.to.re "777") (str.to.re "888"))) (re.++ (re.* (re.union (str.to.re "99") (str.to.re "aa"))) (re.++ (re.* (re.* (str.to.re "bbb"))) (re.++ (re.+ (re.* (str.to.re "cc"))) (re.++ (re.union (re.+ (str.to.re "dd")) (re.* (str.to.re "eee"))) (re.++ (re.* (re.* (str.to.re "fff"))) (re.++ (re.* (re.union (str.to.re "g") (str.to.re "h"))) (re.++ (re.+ (re.* (str.to.re "iii"))) (re.++ (re.+ (re.* (str.to.re "j"))) (re.++ (re.union (re.union (str.to.re "k") (str.to.re "l")) (re.* (str.to.re "mm"))) (re.++ (re.* (re.* (str.to.re "nnn"))) (re.+ (re.union (str.to.re "oo") (str.to.re "p"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.union (re.+ (str.to.re "0")) (re.* (str.to.re "1"))) (re.++ (re.* (re.* (str.to.re "22"))) (re.++ (re.+ (re.* (str.to.re "333"))) (re.++ (re.* (re.union (str.to.re "4") (str.to.re "555"))) (re.++ (re.union (re.+ (str.to.re "666")) (re.+ (str.to.re "77"))) (re.++ (re.+ (re.+ (str.to.re "88"))) (re.++ (re.* (re.* (str.to.re "99"))) (re.++ (re.union (re.* (str.to.re "aa")) (re.* (str.to.re "b"))) (re.++ (re.union (re.union (str.to.re "c") (str.to.re "dd")) (re.* (str.to.re "e"))) (re.++ (re.union (re.+ (str.to.re "ff")) (re.* (str.to.re "ggg"))) (re.++ (re.* (re.* (str.to.re "hh"))) (re.++ (re.+ (re.* (str.to.re "ii"))) (re.++ (re.union (re.+ (str.to.re "jjj")) (re.* (str.to.re "k"))) (re.++ (re.union (re.* (str.to.re "l")) (re.union (str.to.re "mm") (str.to.re "nnn"))) (re.++ (re.* (re.* (str.to.re "oo"))) (re.+ (re.+ (str.to.re "ppp")))))))))))))))))))))
(check-sat)