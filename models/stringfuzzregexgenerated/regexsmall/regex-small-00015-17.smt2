(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (str.to.re "000"))) (re.++ (re.union (re.* (str.to.re "1")) (re.+ (str.to.re "222"))) (re.++ (re.+ (re.* (str.to.re "3"))) (re.++ (re.* (re.+ (str.to.re "444"))) (re.++ (re.union (re.+ (str.to.re "55")) (re.* (str.to.re "666"))) (re.++ (re.union (re.* (str.to.re "77")) (re.* (str.to.re "8"))) (re.++ (re.* (re.+ (str.to.re "99"))) (re.++ (re.* (re.union (str.to.re "a") (str.to.re "bbb"))) (re.++ (re.* (re.* (str.to.re "ccc"))) (re.++ (re.union (re.union (str.to.re "dd") (str.to.re "ee")) (re.union (str.to.re "fff") (str.to.re "g"))) (re.++ (re.union (re.* (str.to.re "h")) (re.union (str.to.re "iii") (str.to.re "j"))) (re.++ (re.* (re.+ (str.to.re "kk"))) (re.++ (re.+ (re.* (str.to.re "lll"))) (re.++ (re.union (re.* (str.to.re "m")) (re.union (str.to.re "n") (str.to.re "o"))) (re.union (re.+ (str.to.re "p")) (re.union (str.to.re "q") (str.to.re "rr")))))))))))))))))))
(check-sat)