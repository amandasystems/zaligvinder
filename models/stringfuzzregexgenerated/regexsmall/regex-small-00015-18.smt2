(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.union (str.to.re "000") (str.to.re "111"))) (re.++ (re.union (re.+ (str.to.re "2")) (re.union (str.to.re "3") (str.to.re "44"))) (re.++ (re.union (re.+ (str.to.re "555")) (re.union (str.to.re "6") (str.to.re "77"))) (re.++ (re.+ (re.union (str.to.re "8") (str.to.re "99"))) (re.++ (re.+ (re.+ (str.to.re "a"))) (re.++ (re.+ (re.* (str.to.re "bb"))) (re.++ (re.+ (re.* (str.to.re "ccc"))) (re.++ (re.union (re.union (str.to.re "d") (str.to.re "e")) (re.+ (str.to.re "fff"))) (re.++ (re.* (re.+ (str.to.re "g"))) (re.++ (re.+ (re.union (str.to.re "hh") (str.to.re "ii"))) (re.++ (re.union (re.* (str.to.re "j")) (re.+ (str.to.re "kkk"))) (re.++ (re.union (re.* (str.to.re "lll")) (re.union (str.to.re "m") (str.to.re "n"))) (re.++ (re.+ (re.* (str.to.re "o"))) (re.++ (re.union (re.union (str.to.re "pp") (str.to.re "q")) (re.union (str.to.re "r") (str.to.re "sss"))) (re.* (re.* (str.to.re "t")))))))))))))))))))
(check-sat)