(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (str.to.re "0")) (re.union (str.to.re "111") (str.to.re "22"))) (re.++ (re.union (re.union (str.to.re "33") (str.to.re "44")) (re.* (str.to.re "555"))) (re.++ (re.+ (re.union (str.to.re "6") (str.to.re "777"))) (re.++ (re.+ (re.+ (str.to.re "888"))) (re.++ (re.+ (re.* (str.to.re "99"))) (re.++ (re.+ (re.+ (str.to.re "aa"))) (re.++ (re.+ (re.union (str.to.re "bbb") (str.to.re "c"))) (re.++ (re.+ (re.union (str.to.re "d") (str.to.re "e"))) (re.++ (re.union (re.* (str.to.re "ff")) (re.+ (str.to.re "ggg"))) (re.++ (re.union (re.union (str.to.re "h") (str.to.re "ii")) (re.* (str.to.re "jj"))) (re.++ (re.* (re.+ (str.to.re "kk"))) (re.++ (re.+ (re.* (str.to.re "l"))) (re.++ (re.+ (re.* (str.to.re "m"))) (re.++ (re.* (re.union (str.to.re "n") (str.to.re "ooo"))) (re.++ (re.* (re.* (str.to.re "p"))) (re.++ (re.+ (re.union (str.to.re "qq") (str.to.re "rr"))) (re.+ (re.* (str.to.re "s")))))))))))))))))))))
(check-sat)