(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (str.to.re "000"))) (re.++ (re.union (re.union (str.to.re "1") (str.to.re "22")) (re.+ (str.to.re "33"))) (re.++ (re.* (re.+ (str.to.re "44"))) (re.++ (re.+ (re.union (str.to.re "555") (str.to.re "666"))) (re.++ (re.union (re.+ (str.to.re "7")) (re.* (str.to.re "8"))) (re.++ (re.+ (re.+ (str.to.re "99"))) (re.++ (re.union (re.+ (str.to.re "aa")) (re.union (str.to.re "bbb") (str.to.re "c"))) (re.++ (re.union (re.* (str.to.re "ddd")) (re.+ (str.to.re "ee"))) (re.++ (re.* (re.+ (str.to.re "ff"))) (re.++ (re.union (re.union (str.to.re "g") (str.to.re "h")) (re.+ (str.to.re "i"))) (re.++ (re.+ (re.+ (str.to.re "jj"))) (re.++ (re.union (re.+ (str.to.re "k")) (re.* (str.to.re "ll"))) (re.++ (re.* (re.+ (str.to.re "mm"))) (re.++ (re.+ (re.union (str.to.re "nnn") (str.to.re "oo"))) (re.++ (re.+ (re.union (str.to.re "pp") (str.to.re "qqq"))) (re.++ (re.* (re.+ (str.to.re "r"))) (re.+ (re.union (str.to.re "ss") (str.to.re "t")))))))))))))))))))))
(check-sat)