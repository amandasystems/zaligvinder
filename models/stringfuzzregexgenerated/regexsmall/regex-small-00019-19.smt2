(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (str.to.re "0"))) (re.++ (re.* (re.+ (str.to.re "11"))) (re.++ (re.+ (re.+ (str.to.re "222"))) (re.++ (re.* (re.+ (str.to.re "3"))) (re.++ (re.+ (re.* (str.to.re "4"))) (re.++ (re.* (re.union (str.to.re "55") (str.to.re "66"))) (re.++ (re.+ (re.+ (str.to.re "777"))) (re.++ (re.union (re.* (str.to.re "888")) (re.+ (str.to.re "999"))) (re.++ (re.union (re.* (str.to.re "a")) (re.+ (str.to.re "bb"))) (re.++ (re.+ (re.* (str.to.re "c"))) (re.++ (re.union (re.union (str.to.re "d") (str.to.re "ee")) (re.* (str.to.re "ff"))) (re.++ (re.* (re.union (str.to.re "gg") (str.to.re "h"))) (re.++ (re.+ (re.* (str.to.re "i"))) (re.++ (re.+ (re.* (str.to.re "jjj"))) (re.++ (re.+ (re.* (str.to.re "kk"))) (re.++ (re.* (re.union (str.to.re "l") (str.to.re "mmm"))) (re.++ (re.+ (re.+ (str.to.re "nnn"))) (re.++ (re.+ (re.+ (str.to.re "oo"))) (re.* (re.union (str.to.re "p") (str.to.re "q")))))))))))))))))))))))
(check-sat)