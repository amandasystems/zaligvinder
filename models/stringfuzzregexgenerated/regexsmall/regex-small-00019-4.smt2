(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.+ (str.to.re "00"))) (re.++ (re.+ (re.* (str.to.re "1"))) (re.++ (re.union (re.* (str.to.re "222")) (re.union (str.to.re "33") (str.to.re "444"))) (re.++ (re.* (re.union (str.to.re "555") (str.to.re "66"))) (re.++ (re.* (re.* (str.to.re "7"))) (re.++ (re.+ (re.* (str.to.re "8"))) (re.++ (re.union (re.union (str.to.re "9") (str.to.re "aaa")) (re.* (str.to.re "bbb"))) (re.++ (re.+ (re.+ (str.to.re "cc"))) (re.++ (re.+ (re.* (str.to.re "d"))) (re.++ (re.+ (re.+ (str.to.re "e"))) (re.++ (re.union (re.union (str.to.re "fff") (str.to.re "ggg")) (re.* (str.to.re "hhh"))) (re.++ (re.+ (re.union (str.to.re "i") (str.to.re "j"))) (re.++ (re.+ (re.+ (str.to.re "kk"))) (re.++ (re.+ (re.* (str.to.re "l"))) (re.++ (re.+ (re.+ (str.to.re "mm"))) (re.++ (re.+ (re.* (str.to.re "n"))) (re.++ (re.* (re.* (str.to.re "oo"))) (re.++ (re.+ (re.+ (str.to.re "p"))) (re.* (re.union (str.to.re "qqq") (str.to.re "r")))))))))))))))))))))))
(check-sat)