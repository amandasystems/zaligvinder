(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.+ (str.to.re "00"))) (re.++ (re.+ (re.+ (str.to.re "11"))) (re.++ (re.union (re.+ (str.to.re "22")) (re.+ (str.to.re "3"))) (re.++ (re.union (re.* (str.to.re "444")) (re.* (str.to.re "55"))) (re.++ (re.+ (re.union (str.to.re "66") (str.to.re "777"))) (re.++ (re.* (re.* (str.to.re "88"))) (re.++ (re.union (re.* (str.to.re "999")) (re.+ (str.to.re "aa"))) (re.++ (re.* (re.* (str.to.re "bbb"))) (re.++ (re.+ (re.+ (str.to.re "ccc"))) (re.++ (re.* (re.* (str.to.re "ddd"))) (re.++ (re.union (re.+ (str.to.re "eee")) (re.union (str.to.re "fff") (str.to.re "ggg"))) (re.++ (re.+ (re.* (str.to.re "h"))) (re.++ (re.* (re.* (str.to.re "ii"))) (re.++ (re.* (re.* (str.to.re "j"))) (re.++ (re.+ (re.union (str.to.re "kkk") (str.to.re "l"))) (re.++ (re.+ (re.* (str.to.re "mm"))) (re.++ (re.union (re.+ (str.to.re "nnn")) (re.+ (str.to.re "o"))) (re.++ (re.+ (re.* (str.to.re "ppp"))) (re.* (re.+ (str.to.re "q")))))))))))))))))))))))
(check-sat)