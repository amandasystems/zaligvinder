(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (str.to.re "00")) (re.+ (str.to.re "1"))) (re.++ (re.+ (re.union (str.to.re "22") (str.to.re "33"))) (re.++ (re.+ (re.+ (str.to.re "4"))) (re.++ (re.+ (re.+ (str.to.re "5"))) (re.++ (re.union (re.union (str.to.re "666") (str.to.re "77")) (re.* (str.to.re "88"))) (re.++ (re.* (re.union (str.to.re "99") (str.to.re "aa"))) (re.++ (re.* (re.* (str.to.re "bbb"))) (re.++ (re.union (re.+ (str.to.re "cc")) (re.+ (str.to.re "d"))) (re.++ (re.* (re.+ (str.to.re "e"))) (re.++ (re.+ (re.* (str.to.re "f"))) (re.++ (re.* (re.union (str.to.re "gg") (str.to.re "hhh"))) (re.++ (re.union (re.+ (str.to.re "iii")) (re.+ (str.to.re "j"))) (re.++ (re.* (re.+ (str.to.re "k"))) (re.++ (re.* (re.+ (str.to.re "l"))) (re.++ (re.+ (re.+ (str.to.re "m"))) (re.++ (re.+ (re.+ (str.to.re "nn"))) (re.++ (re.union (re.+ (str.to.re "ooo")) (re.* (str.to.re "ppp"))) (re.++ (re.* (re.* (str.to.re "q"))) (re.++ (re.* (re.+ (str.to.re "rr"))) (re.++ (re.+ (re.union (str.to.re "sss") (str.to.re "ttt"))) (re.union (re.* (str.to.re "uuu")) (re.+ (str.to.re "vv")))))))))))))))))))))))))
(check-sat)