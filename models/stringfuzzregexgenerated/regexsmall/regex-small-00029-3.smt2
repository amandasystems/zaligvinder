(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.union (str.to.re "00") (str.to.re "11"))) (re.++ (re.+ (re.union (str.to.re "222") (str.to.re "3"))) (re.++ (re.+ (re.+ (str.to.re "444"))) (re.++ (re.+ (re.* (str.to.re "5"))) (re.++ (re.* (re.* (str.to.re "666"))) (re.++ (re.* (re.* (str.to.re "77"))) (re.++ (re.union (re.+ (str.to.re "8")) (re.union (str.to.re "99") (str.to.re "aaa"))) (re.++ (re.union (re.* (str.to.re "bb")) (re.+ (str.to.re "c"))) (re.++ (re.union (re.* (str.to.re "d")) (re.* (str.to.re "ee"))) (re.++ (re.union (re.* (str.to.re "ff")) (re.* (str.to.re "g"))) (re.++ (re.union (re.+ (str.to.re "hhh")) (re.+ (str.to.re "iii"))) (re.++ (re.+ (re.* (str.to.re "j"))) (re.++ (re.+ (re.* (str.to.re "k"))) (re.++ (re.union (re.+ (str.to.re "l")) (re.+ (str.to.re "mmm"))) (re.++ (re.+ (re.+ (str.to.re "nn"))) (re.++ (re.+ (re.+ (str.to.re "o"))) (re.++ (re.+ (re.union (str.to.re "p") (str.to.re "qqq"))) (re.++ (re.union (re.union (str.to.re "rr") (str.to.re "s")) (re.* (str.to.re "t"))) (re.++ (re.* (re.+ (str.to.re "uu"))) (re.++ (re.union (re.* (str.to.re "v")) (re.+ (str.to.re "ww"))) (re.++ (re.union (re.* (str.to.re "x")) (re.union (str.to.re "y") (str.to.re "zzz"))) (re.++ (re.union (re.* (str.to.re "AAA")) (re.union (str.to.re "BB") (str.to.re "CCC"))) (re.++ (re.+ (re.union (str.to.re "DDD") (str.to.re "E"))) (re.++ (re.union (re.union (str.to.re "F") (str.to.re "GGG")) (re.union (str.to.re "HHH") (str.to.re "II"))) (re.++ (re.* (re.+ (str.to.re "JJJ"))) (re.++ (re.union (re.* (str.to.re "KKK")) (re.union (str.to.re "LL") (str.to.re "MM"))) (re.++ (re.union (re.union (str.to.re "N") (str.to.re "O")) (re.* (str.to.re "PP"))) (re.++ (re.* (re.* (str.to.re "Q"))) (re.union (re.union (str.to.re "RRR") (str.to.re "SS")) (re.+ (str.to.re "TT")))))))))))))))))))))))))))))))))
(check-sat)