(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.+ (str.to.re "00"))) (re.++ (re.+ (re.+ (str.to.re "111"))) (re.++ (re.union (re.+ (str.to.re "22")) (re.+ (str.to.re "333"))) (re.++ (re.union (re.+ (str.to.re "444")) (re.+ (str.to.re "555"))) (re.++ (re.+ (re.+ (str.to.re "6"))) (re.++ (re.union (re.union (str.to.re "77") (str.to.re "8")) (re.* (str.to.re "99"))) (re.++ (re.union (re.+ (str.to.re "a")) (re.* (str.to.re "bbb"))) (re.++ (re.* (re.+ (str.to.re "ccc"))) (re.++ (re.+ (re.* (str.to.re "ddd"))) (re.++ (re.+ (re.+ (str.to.re "e"))) (re.++ (re.union (re.* (str.to.re "fff")) (re.union (str.to.re "g") (str.to.re "hhh"))) (re.++ (re.+ (re.+ (str.to.re "ii"))) (re.++ (re.* (re.+ (str.to.re "j"))) (re.++ (re.union (re.union (str.to.re "kk") (str.to.re "ll")) (re.+ (str.to.re "mmm"))) (re.++ (re.+ (re.union (str.to.re "n") (str.to.re "o"))) (re.++ (re.* (re.* (str.to.re "pp"))) (re.++ (re.* (re.+ (str.to.re "qqq"))) (re.++ (re.* (re.union (str.to.re "rr") (str.to.re "ss"))) (re.++ (re.* (re.* (str.to.re "t"))) (re.++ (re.+ (re.union (str.to.re "u") (str.to.re "v"))) (re.++ (re.* (re.+ (str.to.re "ww"))) (re.++ (re.+ (re.union (str.to.re "xxx") (str.to.re "y"))) (re.++ (re.union (re.+ (str.to.re "zzz")) (re.* (str.to.re "AAA"))) (re.++ (re.union (re.* (str.to.re "BB")) (re.union (str.to.re "CCC") (str.to.re "DD"))) (re.++ (re.+ (re.+ (str.to.re "EEE"))) (re.++ (re.* (re.+ (str.to.re "FF"))) (re.++ (re.+ (re.* (str.to.re "GGG"))) (re.++ (re.union (re.* (str.to.re "HH")) (re.* (str.to.re "I"))) (re.++ (re.* (re.union (str.to.re "J") (str.to.re "K"))) (re.++ (re.* (re.* (str.to.re "LLL"))) (re.++ (re.* (re.union (str.to.re "M") (str.to.re "NNN"))) (re.++ (re.* (re.+ (str.to.re "OOO"))) (re.union (re.union (str.to.re "P") (str.to.re "QQQ")) (re.* (str.to.re "R")))))))))))))))))))))))))))))))))))))
(check-sat)