#!/usr/bin/python

from runners.base import TheRunner as testrunner
import utils
import storage
import voting.majority as voting
import tools.z3seq
import tools.z3str3
import tools.cvc4
import tools.woorpjeSMT
import tools.trau
import tools.woorpje_heuristics
import tools.dummy


import models.woorpje.track02
import models.kaluza
import models.stringfuzz
import models.z3_regression
import startwebserver




import summarygenerators

tracks = (models.woorpje.track02.getTrackData ("Woorpje") +
          #models.kaluza.getTrackData () +
          #models.stringfuzz.getTrackData () +
          #models.z3_regression.getTrackData()+
          []
)
#solvers = {
#    'z3str3' : tools.z3str3.run,
#    'z3seq' : tools.z3seq.run,
#    'cvc4' : tools.cvc4.run,
#    'trau' : toQols.trau.run
    #'norn' :  tools.norn.run,
    #'woorpje' :  tools.woorpjeSMT.run
#}
smtsolvers = ["cvc4"]

solvers = {}
#for s in [tools.z3seq,
          #tools.z3str3,
          #tools.cvc4,
#          tools.woorpjeSMT,
          #tools.trau,
          #tools.dummy
#]:
#    s.addRunner (solvers)
tools.woorpje_heuristics.addRunners ("variableTermRatio",smtsolvers,3.14,solvers)

summaries = [summarygenerators.terminalResult
]
timeout = 30 
ploc = utils.JSONProgramConfig ()

store = storage.SQLiteDB ("RP")
summaries = [
    summarygenerators.terminalResult,
    store.postTrackUpdate
]
testrunner().runTestSetup (tracks,solvers,voting.MajorityVoter(),summaries,store,timeout,ploc)
startwebserver.Server (store.getDB ()).startServer ()
