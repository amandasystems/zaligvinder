#!/usr/bin/python

import runners.multi as testrunnermulti
import tools.z3seq as z3seq
import tools.z3str3 as z3str3
import tools.cvc4 as cvc4

import models.z3_regression as z3_regression
import models.stringfuzz.concats_balanced as concats_balanced
import models.stringfuzz.concats_big as concats_big 
import models.stringfuzz.concats_extracts_big as concats_extracts_big
import models.stringfuzz.concats_extracts_small as concats_extracts_small
import models.stringfuzz.concats_small as concats_small 
import models.stringfuzz.different_prefix as different_prefix
import models.stringfuzz.lengths_concats as lengths_concats
import models.stringfuzz.lengths_long as lengths_long
import models.stringfuzz.lengths_short as lengths_short
import models.stringfuzz.many_regexes as many_regexes
import models.stringfuzz.overlaps_big as overlaps_big
import models.stringfuzz.overlaps_small as overlaps_small
import models.stringfuzz.regex_big as regex_big
import models.stringfuzz.regex_deep as regex_deep
import models.stringfuzz.regex_lengths as regex_lengths
import models.stringfuzz.regex_pair as regex_pair
import models.stringfuzz.regex_small as regex_small

#import sloth
import summarygenerators
from datetime import datetime

tracks = [z3_regression.trackdata,
          concats_balanced.trackdata,
          concats_extracts_small.trackdata,
          lengths_short.trackdata,
          overlaps_small.trackdata,
          regex_lengths.trackdata,
          concats_big.trackdata,
          concats_small.trackdata,
          lengths_concats.trackdata,
          many_regexes.trackdata,
          regex_big.trackdata,
          regex_pair.trackdata,
          concats_extracts_big.trackdata,
          different_prefix.trackdata,
          lengths_long.trackdata,
          overlaps_big.trackdata,
          regex_deep.trackdata,
          regex_small.trackdata
] 
timeout = 30

solvers = {
    'z3str3' : z3str3.run,
    'z3seq' : z3seq.run,
    'cvc4' : cvc4.run,
}

smtsolvers = ["z3seq","cvc4","z3str3"]


summaries = [summarygenerators.terminalResult,
             #summarygenerators.cactusPlot
]


timestamp = datetime.timestamp(datetime.now())

outputfile = open("results/results_"+str(timestamp)+".csv",'w')
testrunnermulti.runTestSetup (tracks,solvers,summaries,outputfile,timeout)
