#!/usr/bin/python

import testrunnermulti
import z3seq
import z3str3
import cvc4
#import norn
#import woorpjeSMT
#import woorpje_heuristics
#import kaluzaWoorpje
#import track01
#import track02
#import track03
#import track04
#import track05
import z3_regression

import z3_generated/concats-balanced
import z3_generated/concats-big
import z3_generated/concats-extracts-big
import z3_generated/concats-extracts-small
import z3_generated/concats-small
import z3_generated/different-prefix
import z3_generated/lengths-concats
import z3_generated/lengths-long
import z3_generated/lengths-short
import z3_generated/many-regexes
import z3_generated/overlaps-big
import z3_generated/overlaps-small
import z3_generated/regex-big
import z3_generated/regex-deep
import z3_generated/regex-lengths
import z3_generated/regex-pair


#import sloth
import summarygenerators
from datetime import datetime

tracks = [z3_regression.trackdata,concats-balanced.trackdata,concats-extracts-small.trackdata,lengths-short.trackdata,overlaps-small.trackdata,regex-lengths.trackdata,concats-big.trackdata,concats-small.trackdata,lengths-concats.trackdata,many-regexes.trackdata,regex-big.trackdata,regex-pair.trackdata,concats-extracts-big.trackdata,different-prefix.trackdata,lengths-long.trackdata,overlaps-big.trackdata,regex-deep.trackdata,regex-small.trackdata]
timeout = 30

solvers = {
    'z3str3' : z3str3.run,
    'z3seq' : z3seq.run,
    'cvc4' : cvc4.run,
}

smtsolvers = ["z3seq","cvc4","z3str3"]

#woorpje_heuristics.addRunners ("variableTermRatio",smtsolvers,3.14,solvers)
#woorpje_heuristics.addRunners ("variableTermRatio",smtsolvers,0.15,solvers)
#woorpje_heuristics.addRunners ("variableTermRatio",smtsolvers,1.12358,solvers)

#woorpje_heuristics.addRunners ("waitingListLimit",smtsolvers,314,solvers)
#woorpje_heuristics.addRunners ("waitingListLimit",smtsolvers,15,solvers)
#woorpje_heuristics.addRunners ("waitingListLimit",smtsolvers,1123,solvers)

#woorpje_heuristics.addRunners ("equationGrowth",smtsolvers,0.15,solvers)
#woorpje_heuristics.addRunners ("equationGrowth",smtsolvers,1.075,solvers)
#woorpje_heuristics.addRunners ("equationGrowth",smtsolvers,2.0,solvers)

#woorpje_heuristics.addRunners ("equationLength",smtsolvers,2,solvers)
#woorpje_heuristics.addRunners ("equationLength",smtsolvers,20,solvers)
#woorpje_heuristics.addRunners ("equationLength",smtsolvers,400,solvers)

#woorpje_heuristics.addRunners ("none",smtsolvers,5,solvers)



summaries = [summarygenerators.terminalResult,
             #summarygenerators.cactusPlot
]


timestamp = datetime.timestamp(datetime.now())

outputfile = open("results/results_"+str(timestamp)+".csv",'w')
testrunnermulti.runTestSetup (tracks,solvers,summaries,outputfile,timeout)
